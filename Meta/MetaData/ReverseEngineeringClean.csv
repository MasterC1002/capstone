created_utc	id	title	author	ups	downs	num_comments	selftext	subreddit_id	is_self
1369084070.0	1epw2m	I dumped the ROM of a Tamagotchi!	natashenka_	220	29	29	"Details of my Tamagotchi code dump here: 

http://www.kwartzlab.ca/2013/05/first-glimpse-soul-tamagotchi/

Also, here's all the images inside a Tama-Go (for your daily dose of RE-related cute): 

https://github.com/natashenka/Tamagotchi-Hack/tree/master/codedump/images"	t5_2qmd0	True
1349116716.0	10rtxr	Harris does not want you RE'ing their bgan terminal firmware.... 		189	21	13		t5_2qmd0	False
1335135352.0	sn8sn	SNES Coprocessors — The Future Has Arrived	ethicszen	146	17	7		t5_2qmd0	False
1362990725.0	1a2mio	"No Starch/Andrew (bunnie) Huang Releases ""Hacking the Xbox - An Introduction to Reverse Engineering"" for free in honor of Aaron Swartz."	sanitybit	141	19	10		t5_2qmd0	False
1363561063.0	1ahnen	RE for Beginners	nullandnull	128	14	9		t5_2qmd0	False
1363677072.0	1akxdo	Hacking NVidia Cards into their Professional Counterparts	rolfr	125	15	16		t5_2qmd0	False
1375467181.0	1jktwk	Sprite_tm does some incredible work on a hard drive controller	Grazfather	120	15	4		t5_2qmd0	False
1352605184.0	12ztgg	Introductory Intel x86: An incredibly thorough and well explained introduction to Reverse Engineering and x86 assembly - A full two day course taught by Xeno Kovah	HockeyInJune	127	27	2		t5_2qmd0	False
1331027886.0	qjzkf	AMD CPU bug causing stack pointer corruption	wtbw	100	5	6		t5_2qmd0	False
1315340391.0	k6rcb	A 1970s Cray-1 hard drive has been imaged	igor_sk	99	9	9		t5_2qmd0	False
1376259511.0	1k62b4	Hax it!: Hacking Transcend WiFi SD Cards	sircmpwn	95	6	6		t5_2qmd0	False
1375663886.0	1jpln2	Has anyone else taken a look at the shellcode that is driving the newest TOR/Firefox 17 exploit?	k0ss_sec	98	12	32	"I was surprised to see few people doing much research on this.  After looking at the [javascript file](http://pastebin.mozilla.org/2777139) and some traffic files that people have uploaded as they went to the backdoored onion site (such as [this](http://jsunpack.jeek.org/dec/go?report=fcb1f83ffd0f27bd9db52459f1a445f4688d15c6) and [this](http://jsunpack.jeek.org/dec/go?report=d68f00b4a5a4a21c6caf9c88b231a195a24204e0)), I quickly threw that into IDA to get a basic idea of what it is doing.  ~~I've pasted it [here](http://pastebin.com/BNqMk5qy).~~ 

* /u/moyix [has posted a better annotated IDA output file that he found](http://pastebin.com/fjkEnfgD).  Functions used by shellcode (so far in the analysis) include 

&gt;Kernel32.LoadLibraryA, ws2_32.WSAStartup, ws2_32.WSASocketA, ws2_32.gethostname, ws2_32.gethostbyname, IPHLPAPI.SendARP, ws2_32.send, ws2_32.closesocket

* /u/Borgbox has posted the Mozilla [bug report](https://bugzilla.mozilla.org/show_bug.cgi?id=901365) for this vulnerability.  So far it looks like it was targeted at Windows but can possibly affect Linux hosts as well.

EDIT: So far it looks like most basic shellcode, just grabbing the PE header (fs:[30]) and probably also finding locations of dependencies (I see a hashing function for that)

EDIT: See [moyix's comment](http://www.reddit.com/r/ReverseEngineering/comments/1jpln2/has_anyone_else_taken_a_look_at_the_shellcode/cbh1qpe) for a run-down of what the shellcode does."	t5_2qmd0	True
1328706074.0	pg6l2	crackmes.de back	pri0r_z	105	17	13	"http://crackmes.de/

Even though I am new to the scene and having never used the site before, I have been waiting for the return of the site for some time now.  It is hard to find reversing challenges at my level of ability, but not only is crackmes.de archive huge, but it is well ordered in level of difficulty, platform etc.  Perfect.

Time to dive in."	t5_2qmd0	True
1318102962.0	l5c9j	"German hackers reversed the ""lawful interception"" malware of the german police forces"	cetchmoh	91	6	3		t5_2qmd0	False
1375081245.0	1j9htl	Arbitrary code execution via standard controls in Yoshi Island	simpleuser	95	9	4		t5_2qmd0	False
1294797865.0	f0m1j	Sony sues everybody involved with the recent PS3 compromises [PDF]	rolfr	94	11	58		t5_2qmd0	False
1305910833.0	hg0fx	A modest proposal (Absolutely no babies involved)	genesai	96	10	20	"I have a small suggestion. Why not put some beginners resources in the sidebar? I know that there are many people who would really like to be able to do some reverse engineering (personally I'd like to be able to write a port of DD-WRT which works on Ubicom processors).

If you have any articles/web-pages that could explain the basics, like what tools to use, methods etc. please do post them. 

Edit: 

I'll start making a list of things I find and if anyone would like to add.

[What is reverse engineering](http://en.wikipedia.org/wiki/Reverse_engineering) - Wikipedia article

[Introduction to Reverse Engineering Software](http://www.acm.uiuc.edu/sigmil/RevEng/) - An introductory online book on reverse engineering which is very helpful according to [Accuria](http://www.reddit.com/user/Accuria) who PM:ed it to me.


**Tools:**
===========

[The Collaborative RCE Tool Library](http://www.woodmann.com/collaborative/tools/index.php/Category:RCE_Tools)

[Disassemblers](http://en.wikipedia.org/wiki/Disassembler)
--------------

- [IDA Pro](http://www.hex-rays.com/idapro/idadownfreeware.htm) - The Interactive Disassembler. It's used to reverse engineer executables and according to [wikipedia](http://en.wikipedia.org/wiki/Ida_pro) there is a plugin which can decompile c/c++ executables. This is the free version. I'm not really sure which features are missing or if they are important. Probably depends on what you want to do.


- [SwfScan](http://tools.securitytube.net/index.php?title=SwfScan)

- [Jad](http://www.varaneckas.com/jad) - Java decompiler

- [JD-Gui](http://www.varaneckas.com/jad) - Java decompiler


[Debuggers](http://en.wikipedia.org/wiki/Debugger)
--------------

- [Evans Debugger](http://tools.securitytube.net/index.php?title=Evans_Debugger)

- [WinDbg](http://msdn.microsoft.com/en-us/windows/hardware/gg463009)

- [OllyDbg](http://tools.securitytube.net/index.php?title=OllyDbg)

- [W32Dasm](http://tools.securitytube.net/index.php?title=W32Dasm)


- [GDB GNU Debugger](http://tools.securitytube.net/index.php?title=GDB_GNU_Debugger)

Editors - Hex and PE editors
--------------
- [CFF Explorer](http://tools.securitytube.net/index.php?title=CFF_Explorer)

- [Uncle Hextor Hex Editor](http://www.weirdkid.com/products/unclehextor/)

- [Woodmans Reverse Engineering Tools](http://www.woodmann.com/crackz/Tools.htm) (Are they old? Feedback on these appreciated)

**Programming Languages:**
============

- [Assembly Language](http://en.wikipedia.org/wiki/Assembly_language) - A [low level language](http://en.wikipedia.org/wiki/Low-level_programming_language). Not really sure when it's appropriate to use but it's vital when you are reversing software. Unless you find a really good decompiler, which i doubt exists. Here is a [tutorial](http://www.securitytube.net/video/208). It's for hackers so how could it be bad ;p

- [/r/programming’s faq](http://www.reddit.com/r/programming/faq)

**Tutorials:**
===========
Videos
--------------

- [Reversing Binaries](http://www.securitytube.net/video/1842)

- [Breaking Password Encryptions with IDA](http://www.securitytube.net/video/128)

- [Breaking Password Encryptions using a hex editor](http://www.youtube.com/watch?v=XVJSVQrDOqQ&amp;feature=related)

- [Tiga’s IDA Tutorials](http://www.woodmann.com/TiGa/idaseries.html)

- [Using IDA pro](http://www.youtube.com/watch?v=K08Zw_l4xSw)

- [Olly DbgTutorial](https://sites.google.com/site/corkami/ollydbg-tracing)
- [Reversing Q&amp;A](http://www.youtube.com/watch?v=uq3HY-bx3Gg)




Text &amp; Interactive
--------------
- [Reversing for Newbies](http://tuts4you.com/download.php?list.17)

- [+HCU: Academy of Reverse Engineering](http://www.woodmann.com/fravia/academy.htm)

- [Using IDA](http://home.online.no/~reopsahl/files/gij!ida.txt)

- [IDA user tut](http://www.scribd.com/doc/32327741/IDA-User-Tutorial)

- [Newbies intro to reverse engineering](http://busydizzys.com/index.php/2011/01/22/a-simplified-intro-to-reverse-engineering-software-processes)

**Books:**
==============

**System specific**
==============

- [Sys internals](http://technet.microsoft.com/en-gb/sysinternals) - tools for windows

- [Instruments](http://www.apple.com/macosx/developers/#instruments) - tools for OSX

- [Dex2Jar](http://code.google.com/p/dex2jar/downloads/list) - Tool used to convert Android binaries to Jar so that you can decompile them.

**Old Threads:**
==============
- [Another reverse engineering thread](http://www.reddit.com/r/ReverseEngineering/comments/fvl9m/where_do_i_start_learning_to_reverse_engineer/) 


For those wanting to delve into the more formal side of things [here](http://www.reddit.com/r/ReverseEngineering/comments/hg0fx/a_modest_proposal_absolutely_no_babies_involved/c1v5icw) is a post from rolfr containing books, lectures etc.




Please help me out.


by Genesai in collaboration with asmodeus"	t5_2qmd0	True
1367764961.0	1dqdpp	A determined 'hacker' decrypts RDS-TMC	igor_sk	99	20	2		t5_2qmd0	False
1361222898.0	18rw3g	A peek into the curious world of HDMI copy protection	simpleuser	96	15	3		t5_2qmd0	False
1329799447.0	pyw0z	I reversed engineered the protocol for a joystick and wrote a driver for it.	amstan	102	15	29		t5_2qmd0	False
1302507048.0	gn8m4	Apple Airport Private Key Extracted	bigmac	89	9	7		t5_2qmd0	False
1278552636.0	cn3uw	Skype's Biggest Secret Revealed	cloudburst	95	15	6		t5_2qmd0	False
1342319369.0	wkqyz	Windows Executable Walkthrough Graphic	ekaj	90	13	4		t5_2qmd0	False
1314755827.0	jzppy	Great tutorials for beginner REverse Engineers. 	skibizkit	91	8	3		t5_2qmd0	False
1365633931.0	1c3gc5	The First Level of Super Mario Bros. is Easy with Lexicographic Orderings and Time Travel [pdf]	nullandnull	89	12	18		t5_2qmd0	False
1344433645.0	xvpea	Building an MMORPG Bot from scratch - Part1 	willsteel	92	14	29		t5_2qmd0	False
1336060918.0	t58vl	PE 101 - a windows executable walkthrough	simpleuser	87	12	16		t5_2qmd0	False
1328571524.0	pdtw4	Crackmes.de down for 8 Months, call to action?	andrewl_	93	17	19	"I loved crackmes.de and spent a lot of time moderating, writing crackmes, and of course solving crackmes. 

Zero owned and paid to host the site, that can't be argued. But the site itself was all user donations. We crafted the crackmes. We polished the solutions. We moderated the queue.

I feel bad his site is facing viruses or legal trouble or whatever. But its been 8 months, and I feel that holding the community in this stand-still is wrong. I've made numerous requests for a simple tarball of all the crackmes so that a proper mirror could be made until crackmes.de gets back up, but every reply amounts to an evasive ""no"".

If you agree, please send a kind email to Zero (Dr. Thorsten Schneider) making your case. Maybe if he just knows that many are waiting, it will spur him to yield our material. If you see it differently, or there's a perspective I'm missing, then let me know; I'm open to opposing viewpoints here.

Crackmes.de slogan was the ""Reversers' playground"", but Zero has taken everyone's toys and gone home.

(to avoid causing spam, please don't post any actual contact information - just use google)
http://twitter.com/NLPLerncoach
http://www.lerncoach-herford.de/
http://twitter.com/binaryauditing
http://www.binary-auditing.com/
http://reverse-engineering.net
etc..."	t5_2qmd0	True
1343853184.0	xiwnc	a file that is a Windows Executable, a PDF document, a Java executable (or a Python script), and an HTML page.	simpleuser	85	12	12		t5_2qmd0	False
1332164886.0	r3fh5	The mystery of Duqu Framework solved	pwnwaffe	87	15	16		t5_2qmd0	False
1365370370.0	1bviqx	Fixing E.T. for the Atari 2600	rolfr	90	16	5		t5_2qmd0	False
1347035098.0	zifx6	Google has acquired VirusTotal	Pilate	86	12	8		t5_2qmd0	False
1345115592.0	ybcrk	Building an MMORPG Bot from scratch - Part2	defragger	81	13	6		t5_2qmd0	False
1343377869.0	x8meu	Black Hat hacker gains access to 4 million hotel rooms with Arduino microcontroller	samcrem	97	25	11		t5_2qmd0	False
1333813084.0	rxxjl	Static analysis of an unknown compression format	delroth	83	14	3		t5_2qmd0	False
1241436683.0	8ho6v	This morning +Fravia passed away.	octalespresso	81	10	16		t5_2qmd0	True
1290476427.0	ea9r2	Some friends of mine are starting a project for an open USB analyzer. Support is welcome!	godofpumpkins	78	13	10		t5_2qmd0	False
1349377926.0	10y8uo	"Hakin9 mag want to sue polish blogger because he 
revealed their spamming business model"	paco_el_taco	97	27	19		t5_2qmd0	False
1297068748.0	fgra7	HBGary pwned	dimonio	77	6	5		t5_2qmd0	False
1360040427.0	17x0ay	Evasi0n Jailbreak's Userland Component Analysis	polsab	80	12	4		t5_2qmd0	False
1348018371.0	1042nu	Windows Slowdown, Investigated and Identified	rolfr	80	12	5		t5_2qmd0	False
1353873188.0	13rsnl	Intro ARM Assembly Class (w/ 2 days of videos)	OpenSecurityTraining	76	10	0		t5_2qmd0	False
1289638472.0	e5j55	Stuxnet: A Breakthrough	wtbw	75	10	9		t5_2qmd0	False
1369652674.0	1f4rje	Simple Buffer Overflow Tutorial	fernol	77	12	31		t5_2qmd0	False
1357885611.0	16d7kt	IDA 6.4 released	advanced_reddit_user	78	12	9		t5_2qmd0	False
1307012723.0	hpu7y	Skype protocol reverse engineered, source available for download	Brovvnout	69	5	1		t5_2qmd0	False
1357557121.0	1645mw	Skynet, a Tor-powered botnet straight from Reddit	igor_sk	84	19	7		t5_2qmd0	False
1353674715.0	13nyjf	"Programming Pokemon Yellow using the save 
corruption bug and in-game inventory list"	igor_sk	89	27	9		t5_2qmd0	False
1264553264.0	aujxs	geohot reveals his ps3 exploit	ethicszen	69	6	12	"    geohot: well actually it's pretty simple
    geohot: i allocate a piece of memory
    geohot: using map_htab and write_htab, you can figure out the real address of the memory
    geohot: which is a big win, and something the hv shouldn't allow
    geohot: i fill the htab with tons of entries pointing to that piece of memory
    geohot: and since i allocated it, i can map it read/write
    geohot: then, i deallocate the memory
    geohot: all those entries are set to invalid
    geohot: well while it's setting entries invalid, i glitch the memory control bus
    geohot: the cache writeback misses the memory :)
    geohot: and i have entries allowing r/w to a piece of memory the hypervisor thinks is deallocated
    geohot: then i create a virtual segment with the htab overlapping that piece of memory i have
    geohot: write an entry into the virtual segment htab allowing r/w to the main segment htab
    geohot: switch to virtual segment
    geohot: write to main segment htab a r/w mapping of itself
    geohot: switch back
    geohot: PWNED
    geohot: and would work if memory were encrypted or had ECC
    geohot: the way i actually glitch the memory bus is really funny
    geohot: i have a button on my FPGA board
    geohot: that pulses low for 40ns
    geohot: i set up the htab with the tons of entries
    geohot: and spam press the button
    geohot: right after i send the deallocate call    "	t5_2qmd0	True
1321308520.0	mc9g9	Cracking Siri	taocp	78	16	2		t5_2qmd0	False
1297851135.0	fmdux	Anonymous speaks: the inside story of the HBGary hack	rolfr	69	8	4		t5_2qmd0	False
1286026457.0	dlw33	IDA Pro 6.0 Released - New QT based GUI = Native support for Linux &amp; Mac!	sanitybit	68	6	33		t5_2qmd0	False
1365702533.0	1c5cbe	Hijacking airplanes with an Android phone	igor_sk	81	19	9		t5_2qmd0	False
1311423108.0	ixlx3	All Apple Laptops Can Be Hacked Through The Battery	5d41402abc4b2a76b971	83	18	9		t5_2qmd0	False
1369875579.0	1fb1to	New Open Source Java Decompiler	igor_sk	71	13	25		t5_2qmd0	False
1357176589.0	15uzar	Fighting the Epson ink chip and winning!	pointfree	71	12	10		t5_2qmd0	False
1362678941.0	19uud5	reverse engineering a live botnet	Av3ragej0e	75	16	9		t5_2qmd0	False
1317927167.0	l39qb	IDA 6.2 Released	hellixor	67	8	4		t5_2qmd0	False
1315031939.0	k3bl2	x86 oddities	simpleuser	62	3	1		t5_2qmd0	False
1244545621.0	8qzvs	The censorship software that Chinese gov. force to install on every PC. Anyone take a look at it to find some keywords list or 'harmful' URL list?		69	12	62		t5_2qmd0	False
1367247081.0	1dc93h	Exploiting Super Mario World (via 4 joypads)	simpleuser	64	7	15		t5_2qmd0	False
1361082300.0	18oj87	the 8085's undocumented flags, K and V	simpleuser	69	12	0		t5_2qmd0	False
1359108713.0	178zkk	What is the state-of-the-art in cheat detection in commercial multiplayer games?	fnordstar	66	9	61	"I've been out of touch with the topic for a while and I'm trying to catch on with current techniques. I am currently using Intel PIN to redirect instruction flow in a game to my own functions and I was wondering what the risk of being detected would be when doing this to a, say, VAC3 enabled engine.

For example, I read that VAC3 would be able to detect illegitimate DLLs even if they were unlinked from the module list. How does it do that? 

QueryVirtualMemory is an obvious method, but those results can be spoofed easily. Would it actually be feasible for the game to step through it's whole 32 bit address space and touching every 4kb page?

Is anyone else using PIN for reverse engineering games? What are your experiences with that?"	t5_2qmd0	True
1358286582.0	16n5jh	ODA - Online Disassembler	_rc	65	8	7		t5_2qmd0	False
1351019065.0	11ylir	Rooting the NeoTV set top box	devttys0	64	6	15		t5_2qmd0	False
1344604191.0	xzt77	decrypting and analyzing proprietary protocols	willsteel	63	5	5		t5_2qmd0	False
1286708436.0	dp9zl	BIOS Password Backdoors in Laptops - Dogbert's Blog		60	0	5		t5_2qmd0	False
1361544233.0	190t2m	The proposed Reverse Engineering StackOverflow site has reached the commitment phase	rolfr	67	10	3		t5_2qmd0	False
1345628943.0	ympka	Ghosts in the ROM	igor_sk	71	10	0		t5_2qmd0	False
1372772584.0	1hhuz7	DEFCON 19: The History and the Evolution of Computer Viruses	kamicc	67	11	5		t5_2qmd0	False
1368108981.0	1e02hl	Writing a Perl disassembler for the Motorola 6801 CPU to learn how a fuel injection computer works	kasbah	64	8	0		t5_2qmd0	False
1344533835.0	xy6bw	I'm a professional MMO bot maker, live streaming my protocol update process for users and explaining things as I go along. Feel free to watch, Reddit RE.	NickCano	71	15	67		t5_2qmd0	False
1370624451.0	1fvenq	Statically Recompiling NES Games into Native Executables with LLVM and Go	1107d7	69	12	1		t5_2qmd0	False
1352854299.0	135jts	"Raymond patches Microsoft Money to make it run on 
Win8"	igor_sk	68	13	6		t5_2qmd0	False
1335081526.0	smf4u	Reverser wanting to develop mathematically	day6reak	66	13	28	"I've been reversing for almost a decade now.  My work is mostly security oriented with bug hunting and malware.  Lately, I've been noticing that my development has been coming up against a mathematical wall.  When going through academic papers and other sources where algorithms are described I sometimes have trouble bridging the gap from equation to implementation.  It pisses me off when I cannot grasp something so I've decided to devote myself to mathematics.

I am going to be teaching myself advanced math and would like recommendations on what to learn from people who are able to understand reversing and security from a mathematical standpoint.  Right now I have refreshed myself on discreet math and basic calculus and will continue with more calculus.  What other topics should I branch out into?  I am interested in mathematics describing everything from techniques in static analysis to smt solving to reversing complex polynomial expressions in protected binaries.

Practical resources showing how complex math is described through code would be great but any suggestions or advice at all is appreciated."	t5_2qmd0	True
1314316088.0	juka8	Hardware Hacking for Software People	s7ephen	67	10	6		t5_2qmd0	False
1298747649.0	ftamo	PS3 hacker graf_chokolo releases his IDB files after being raided by the German police on Sony's behest; link contains mirrors	warez_scene	61	8	17		t5_2qmd0	False
1296007055.0	f937e	8 gdb tricks you should know	sanitybit	59	5	2		t5_2qmd0	False
1287902677.0	dvkv6	12-year old researcher finds critical bug in Firefox and gets $3k bug bounty: 	brunt_	65	10	8		t5_2qmd0	False
1310459646.0	in8vn	How Digital Detectives Deciphered Stuxnet, the Most Menacing Malware in History	cavedave	61	11	8		t5_2qmd0	False
1296998766.0	fg9t7	Cracking the Scratch Lottery Code	movzx	61	5	7		t5_2qmd0	False
1374703731.0	1izity	Cantor.dust. - a binary visualization tool	galaris	60	9	13	"I'm surprised that this was not posted here before.

From their site :
&gt;cantor.dust.. is an interactive binary visualization tool, a radical evolution of the traditional hex editor. By translating &gt;binary information to a visual abstraction, reverse engineers and forensic analysts can sift through mountains of &gt;arbitrary data in seconds. Even previously unseen instruction sets and data formats can be easily located and &gt;understood through their visual fingerprint.

[Presentation video @ Derbycon](http://www.youtube.com/watch?v=4bM3Gut1hIk)

[Official site](https://sites.google.com/site/xxcantorxdustxx/)

[Pics.](https://sites.google.com/site/xxcantorxdustxx/visual-re)

[Download demo.](https://media.blackhat.com/bh-us-12/Arsenal/Domas/_cantor.dust_.7z.zip
)"	t5_2qmd0	True
1366329623.0	1cn6kz	Using windbg to beat my dad at chess (beginner)	webstersprodigy	65	11	4		t5_2qmd0	False
1359328534.0	17e6mr	Do you like StackExchange? Why not vote for the proposed Reverse Engineering StackExchange site?	rolfr	61	8	12		t5_2qmd0	False
1346268860.0	z1aig	I'm a professional MMO bot maker, live streaming my protocol update process for users and explaining things as I go along. Feel free to watch and ask questions about the business and the process. Starting 8/29 @ ~7:30 US Eastern Time.	NickCano	67	17	25		t5_2qmd0	False
1265038101.0	awphc	OSpy -- reverse-engineering tool for spying on Windows software	mebrahim	61	8	9		t5_2qmd0	False
1326767927.0	ok8cg	PokeRed Disassembled	thisisaslongasitcanb	62	7	11		t5_2qmd0	False
1325116040.0	nu7ky	Administrivia:  /r/ReverseEngineering has reached 10,000 subscribers	rolfr	61	12	14	"When I started this project over three years ago, I wasn't even aware that there were ten thousand people on earth interested in reverse engineering.  We've had several thousand submissions in the meantime, and this site is the second result on Google for 'reverse engineering' (fourth result if I try the same search on my phone).  I've personally learned a ton in that time, and I hope it's been useful for everyone else as well.  The variety of different types of information posted here is pretty amazing, and differentiates us from other reverse engineering sites in my opinion.

Thanks to the usual suspects:  those who post good submissions, those who write useful comments, my fellow moderators, and the readers.  May /r/ReverseEngineering in 2012 continue to be the Internet's premiere channel for dissemination of information about the craft."	t5_2qmd0	True
1306730691.0	hn9h6	Reverse Engineering Firmware: Linksys WAG120N		56	4	3		t5_2qmd0	False
1304785427.0	h6545	Ted Talks - Cracking Stuxnet, a 21st-century cyber weapon		59	5	5		t5_2qmd0	False
1297440329.0	fjhzp	Windows Internals Course		55	3	2		t5_2qmd0	False
1371351106.0	1gfn2v	A ten-part series on reverse engineering Prince of Persia and porting it to the C64	rolfr	62	11	2		t5_2qmd0	False
1356806061.0	15mt2j	"""And finally, I just wanted to have fun, 'cause you know all those cool kids going out, going to clubs, they just haven't discovered reverse engineering yet."" - Natalie Silvanovich"	samuirai	73	23	13		t5_2qmd0	False
1349874865.0	1190ae	I'm a professional MMO bot maker, live streaming my protocol update process for users and explaining things as I go along. Feel free to watch and ask questions about the business and the process. Starting 10/10 @ ~5:30 US Eastern Time.	NickCano	79	28	21		t5_2qmd0	False
1336536483.0	te696	hackme: Deconstructing an ELF File	the_droid	57	5	6		t5_2qmd0	False
1334440789.0	sa082	Phrack Magazine, issue 68	rolfr	57	9	1		t5_2qmd0	False
1314077905.0	jres0	So, who wants to pull Download.com's new malware apart?	voltagex	60	9	19	See http://www.reddit.com/r/technology/comments/jqvo8/downloadcom_now_wraps_downloads_in_its_own/ for details	t5_2qmd0	True
1291664772.0	eh6q9	IDA Pro Freeware updated to version 5.0	igor_sk	63	11	25		t5_2qmd0	False
1367334610.0	1dexa2	Manually creating an ELF executable	gagomes	56	3	3		t5_2qmd0	False
1351757646.0	12g6a2	Reverse Engineering Serial Ports	N3mes1s	57	6	9		t5_2qmd0	False
1320026919.0	luonp	A warning to those who post technical content on the Internet -- Infosec Institute plagiarized course material from Corelan.be	rolfr	64	13	9		t5_2qmd0	False
1376419100.0	1kam85	Reverse engineering and patching the OSX kernel to allow user mode CPU profiling	DingDongHelloWhoIsIt	54	2	0		t5_2qmd0	False
1374099787.0	1iinaj	Modifying a Laptop BIOS for Fun and Profit	pointfree	54	3	7		t5_2qmd0	False
1364875300.0	1bhsq7	The Reverse Engineering Stack Exchange is now in public beta. Please sign up and participate if you did not already do so during the private beta.	rolfr	61	13	19		t5_2qmd0	False
1351337843.0	1264ak	ILSpy is an open-source .NET assembly browser and decompiler.	sanitybit	59	12	4		t5_2qmd0	False
1343664635.0	xeaas	R4ndom's sixteenth Tutorial for Reverse Engineering, part 1	RandomNetzley	68	19	0		t5_2qmd0	False
1342455808.0	wne26	R4ndom's fourteenth tutorial on beginning reverse engineering	RandomNetzley	67	17	4		t5_2qmd0	False
1338576079.0	ufzo1	IDA 6.3 released	advanced_reddit_user	57	7	11		t5_2qmd0	False
1311550043.0	iyoyi	xpost: What Happened When I Asked Nicely for a Protocol Specification	mankyd	59	10	0		t5_2qmd0	False
1301015976.0	gaxhz	The tale of a TCP bug 	mustapha_	56	7	0		t5_2qmd0	False
1284673778.0	dewl6	An analysis of Stuxnet's SCADA rootkit functionality (scary)	rolfr	59	7	13		t5_2qmd0	False
1275639701.0	cbc8i	Ollydbg v2.0 final release!	wtbw	51	2	5		t5_2qmd0	False
1363088166.0	1a54on	Obviously a Major Malfunction...: You can ring my bell! Adventures in sub-GHz RF land...	simpleuser	61	12	6		t5_2qmd0	False
1307877912.0	hxpxc	JIT CPU Emulation: A 6502 to x86 Dynamic Recompiler (Part 1)	polsab	51	5	2		t5_2qmd0	False
1271850271.0	bu2ak	Fun with YouTube's Audio Content ID System	__y	52	3	5		t5_2qmd0	False
1247509093.0	90ta8	Solving the Defcon b300 challenge [comic]	moyix	52	8	6		t5_2qmd0	False
1375729388.0	1jrab1	The definitive introduction to car hacking (PDF in link)	mattbarn	55	7	7		t5_2qmd0	False
1371248210.0	1gd81u	What is DLL Injection and how is it used for reversing?	rolfr	52	8	11		t5_2qmd0	False
1369711817.0	1f6fre	Understanding how Reverse Engineers Make Sense of Programs from Assembly Language Representations by Adam R. Bryant [PDF]	turnersr	64	17	9		t5_2qmd0	False
1366656069.0	1cvnpk	blog post about a strange backdoor which also attempts to evade sandboxes and antivirus	ll_kyle	52	7	7		t5_2qmd0	False
1359993878.0	17vddu	Microscope + Masked ROM + OpenCV = rompar , semi-automated data extraction from masked roms.	niko-r	59	11	8		t5_2qmd0	False
1349740719.0	1160ng	Exploiting a MIPS stack based buffer overflow	devttys0	56	9	2		t5_2qmd0	False
1343096500.0	x1uoc	Flame, Duqu and Stuxnet: in-depth code analysis of mssecmgr.ocx	virvdova	50	1	4		t5_2qmd0	False
1334317130.0	s7sdl	Help! Trying to make sense of an old AGFA xray image format (contains xrays of cats!)	nrpe	54	7	38	"My girlfriend works at a Vet clinic, and they have an old hospital xray machine, the server runs an old version of solaris with oracle db, and we found a partition containing all of the data files.

These xrays would be much more useful to the vet if he could email them around to specialists, or even put them on USB stick. Currently he has to print them to get them off the machine in any decent resolution.

There is no technical support for this machine, it was installed around the year 2000 in the hospital and came to the vet in the last year or so, with no maintenance contract.


I've had a few attempts now of trying to decode the image formats, and got a little way, but not the full resolution image.

* Each xray taken has several files associated; DBU, MSK, PYR, STS, HIS, IMG, MSK, PRL and RED
* Only three files look like images with any amount of data: IMG, MSK and PYR. The others seem to be metadata.
* The MSK looks like a bit mask, so not too interested in that.
* The IMG is a thumbnail of the full resolution image. It is a plain greyscale bitmap. A basic header with dimensions and 8 bits per pixel.
* The PYR is the unknown format, the full resolution image (it's the biggest filesize!). I can read some of the headers, and have a bit of info on the contents, but couldn't figure it out enough to convert into an actual image.


Here are the source image sets:

* Set 1: http://jebus.geek.nz/xray/AGFA_REDDIT_SET_1.rar (3MB), 'JUPITER' xray files of a cat(omg reddit loves cats!?). ([decoded thumbnail png](http://jebus.geek.nz/xray/JUPITER_0_1.png))
* Set 2: http://jebus.geek.nz/xray/AGFA_REDDIT_SET_2.rar (24MB), Collection of 10 xray sets, take note of the image RINTOUL_SOLO_1(overexposed, entirely white image)


I'm hoping Reddit will be able to help me figure out the format of the PYR's. They don't look compressed, and are almost bitmap, but none of my bits-per-pixel calculations worked out properly.
Sorry for the long post below, I'm just dumping what I've worked out so far, hopefully it's of some use to those playing the game. Thanks for any clues!


---
This is what I know of the **AGFA header**, and it seems to be consistent across multiple xrays and the image files:

* 32 bytes of ascii header format identifier. Always ""AGFA MEDICAL IMAGING #0001"".
* 4 bytes of ascii filetype identifier. Can be ""IMG"", ""PYR"" or ""MSK""
* 4 byte integer, 'unknown_1'
* 4 byte integer, 'unknown_2'. I believe this refers to the number of 'blocks' in the header. PYR has more than IMG.
* 4 byte integer, 'data_content' This is the size in bytes of the data content. Does not include null footer before EOF.
* 4 byte integer, 'width' in pixels
* 4 byte integer, 'height' in pixels


**IMG file format:**

* After the basic header, the content starts at 0x80 and each byte is a greyscale value. This makes it easy to read and write a PNG so I wrote a converter.
* Converter cpp code: http://jebus.geek.nz/xray/img2png.cpp


**PYR file format:**

The PYR header has 3 more 'blocks' in it than the IMG, here is the JUPITER example:

    unknown_1 = 5
    unknown_2 = 5 (header blocks?)
    data_content = 4,479,372
    width = 2040
    height = 2570
    unknown_3 = 274
    unknown_4 = 274
    unknown_5 = 843
    unknown_6 = 3358
    unknown_7 = 3
    unknown_8 = 13
    triplet_1_1 = (pointer)0x42AA2F73 = (int)1118449523
    ??? = (float) ???
    triplet_1_2 = 0x416c34bb = (int)1097610427
    triplet_1_3 = 0x40D92B78 = (int)1087974264
    triplet_2_1 = 0x3F477121 = (int)1061646625
    triplet_2_2 = 0x3F30B659 = (int)1060157017
    triplet_2_3 = 0x3f0a3715 = (int)1057634069
    unknown_9 = 0x4012F1AA = (int)1074983338

I can calculate some values from this:

    width*height = 5,242,800 pixels
    actual_filesize(disk) = 4,479,744
    actual_filesize-pixel_count = 372 = non_data_size
    header_size = 320
    null_footer = 52 bytes
    header_size+null_footer = 372 = non_data_size

In all PYR images of size 2570x2040, data changes at 0x35a0e to a different style. Don't know what this means, yet.

    0x140 to 0x35a0e = 219,342 bytes (style 1)
    0x35a0e to 0x445acc = 4,260,030 bytes (style 2)		
    style1 and style2 are multiple of 16, minus 2 bytes.
    style1 seems to be 16 bit aligned

PYR files of pixel size 2570x2040 are 4375KB, but 2040x2570 are 4262KB. Same pixel count, different data size.
"	t5_2qmd0	True
1304055047.0	gzxm3	After Birth: A look at Obama's PDF Birth Certificate and how PDFs store images	ikkaiteku	55	12	10		t5_2qmd0	False
1290948616.0	ecuab	From 0x90 to 0x4c454554, a journey into exploitation.	sanitybit	55	8	4		t5_2qmd0	False
1372036185.0	1gxur5	An IDA plugin that attempts to decompile x64	turnersr	49	3	2		t5_2qmd0	False
1364950847.0	1bk0vs	MalShare - Open Malware Sample Exchange	itsnotapt	59	13	22		t5_2qmd0	False
1357312155.0	15yaum	29C3 recordings	igor_sk	57	12	5		t5_2qmd0	False
1350940257.0	11wlut	A document about Blu-Ray player hacking [PDF]	rolfr	54	5	2		t5_2qmd0	False
1343824574.0	xi41u	Reverse engineering a DTV converter's firmware	devttys0	50	6	1		t5_2qmd0	False
1339424416.0	uw5uw	Stuxnet and Flame malware share connection	teem	52	8	7		t5_2qmd0	False
1307361572.0	hss70	"OS X malware analysis for beginners: reverse 
engineering Mac Defender"	igor_sk	51	6	2		t5_2qmd0	False
1290062174.0	e7yuf	USB Reverse Engineering Tutorial with the XBox Kinect.	aw4lly	49	1	0		t5_2qmd0	False
1367167747.0	1da222	Self-modifying Python bytecode	turnersr	66	17	5		t5_2qmd0	False
1365052408.0	1bn6c9	MS13-017 - The harmless silent patch...	rolfr	58	14	7		t5_2qmd0	False
1346099075.0	yx6po	R4ndom's Nineteenth Tutorial on Beginning Reverse Engineering	RandomNetzley	68	20	1		t5_2qmd0	False
1338925683.0	uml7e	Games for Windows – Live (about RE, despite the title)	rolfr	52	6	3		t5_2qmd0	False
1330717470.0	qev2u	"BIOS Disassembly Ninjutsu Uncovered (1st Edition) 
[Unedited] PDF released"	igor_sk	56	8	2		t5_2qmd0	False
1324173208.0	ngwib	Please help reverse-engineer insulin pump USB transceiver driver from jar (x-post from /r/diabetes)	awaxa	57	11	20		t5_2qmd0	False
1322529783.0	msq95	/r/ReverseEngineering's Q4 2011 Hiring Thread	rolfr	55	12	16	"By popular request (moderator mail), we in /r/ReverseEngineering are running an experiment along the lines of what [/r/netsec](http://www.reddit.com/r/netsec/) is doing with [its hiring thread](http://www.reddit.com/r/netsec/comments/mrusc/rnetsecs_q4_2011_information_security_hiring/).  The success of the experiment will dictate whether it is repeated.

If there are open positions involving reverse engineering at your place of employment, please post them here.  The user base is an inquisitive lot, so please only post if you are willing to answer non-trivial questions about the position(s).

Please elucidate along the following lines:

* Give as thorough of a description of the position as is possible without violating NDAs/secrecy requirements associated with classified work.
* Where is the position located?  Is telecommuting permissible?  Does the company provide relocation?  Is it mandatory that the applicant be a citizen of the country in which the position is located?
* If applicable, what is the education / certification requirement?
* Is a security clearance required?  If so, at what level?
* How should candidates apply for the position?

Readers are encouraged to ask clarifying questions.  However, please keep the signal-to-noise ratio high and do not blather.  Please use moderator mail for feedback.

If you use twitter, retweeting [this](https://twitter.com/#!/RolfRolles/status/141326499029598208) couldn't hurt.

Thanks in advance, and additional thanks to the moderators of /r/netsec for the idea."	t5_2qmd0	True
1292156921.0	ekh8r	Step by Step Malware Reversing. One sample from the wild each month.	sanitybit	46	2	0		t5_2qmd0	False
1285154427.0	dhags	Exploring Stuxnet’s PLC Infection Process	cavedave	46	1	0		t5_2qmd0	False
1369863127.0	1famhc	Nearly 70% of Packed Windows System files are labeled as Malware	laks316	56	13	27		t5_2qmd0	False
1365453142.0	1bxvje	Unlocking the Motorola Bootloader by exploting TrustZone	igor_sk	57	12	3		t5_2qmd0	False
1363698994.0	1al9sv	Hopper: new view, and full-time job!	simpleuser	49	2	6		t5_2qmd0	False
1359927964.0	17tt6p	For those interested in the Reverse Engineering StackOverflow, we have hit the subscriber goal; now we need to propose example questions, and 35 more sample questions need 10+ votes apiece	rolfr	54	13	12		t5_2qmd0	False
1355590610.0	14we1u	So, Hopper for Windows and Linux is a thing now.	abadidea	59	19	13		t5_2qmd0	False
1345674310.0	ynuxi	R4ndom's Eighteenth tutorial on Beginning Reverse Engineering	RandomNetzley	69	28	4		t5_2qmd0	False
1322219512.0	mosx3	Encyclopedia of Windows Privilege Escalation	amirreza68	50	5	5		t5_2qmd0	False
1318969413.0	lgntv	W32.Duqu	newgre	51	6	0		t5_2qmd0	False
1302300714.0	glsss	IDA 6.1 Released Today!	hellixor	52	9	16		t5_2qmd0	False
1264471709.0	au5c2	"A ""port"" of the DOS game ""Syndicate Wars"" for modern OSes made through extensive binary analysis"	rolfr	49	3	13		t5_2qmd0	False
1375176153.0	1jc7ll	Computer scientists develop 'mathematical jigsaw puzzles' to encrypt software	igor_sk	51	8	11		t5_2qmd0	False
1359318808.0	17dv5c	Interesting bit-twiddling hack question on StackOverflow, with an elegant theorem-prover based solution	rolfr	55	10	3		t5_2qmd0	False
1357668113.0	16706w	/r/ReverseEngineering's Q1 2013 Hiring Thread	rolfr	54	14	13	"Happy new year, folks.

If there are open positions involving reverse engineering at your place of employment, please post them here.  The user base is an inquisitive lot, so please only post if you are willing to answer non-trivial questions about the position(s).  Failure to provide the details in the following format and/or answer questions will result in the post's removal.

Please elucidate along the following lines:

* Describe the position as thoroughly as possible.
* Where is the position located?  Is telecommuting permissible?  Does the company provide relocation?  Is it mandatory that the applicant be a citizen of the country in which the position is located?
* If applicable, what is the education / certification requirement?
* Is a security clearance required?  If so, at what level?
* How should candidates apply for the position?

Readers are encouraged to ask clarifying questions.  However, please keep the signal-to-noise ratio high and do not blather.  Please use moderator mail for feedback.

If you use twitter, retweeting [this](https://twitter.com/RolfRolles/status/288708985551458304) couldn't hurt."	t5_2qmd0	True
1357438567.0	161eqo	Circumventing Windows RT’s Code Integrity Mechanism	clrokr	47	4	4		t5_2qmd0	False
1354041651.0	13vw2e	Reverse Engineering Holiday Gift Guide	kasbah	46	3	7		t5_2qmd0	False
1342010524.0	wdrl4	Crack William Gibson's Agrippa	cavedave	45	3	4		t5_2qmd0	False
1333767178.0	rxbze	AT&amp;T Microcell FAIL (x-post r/netsec)	MrDOS	53	10	6		t5_2qmd0	False
1324720440.0	np0xn	Beginner's Guide to Linkers	rolfr	49	6	3		t5_2qmd0	False
1299319819.0	fxu9z	Yes, we also call this interposing (epic soldering!)	bushing	48	2	3		t5_2qmd0	False
1372516377.0	1hb7oy	A series about basics of hardware reverse engineering on a wireless burglar alarm	cybergibbons	52	11	12	"I started (but didn't really finish...) a series of posts reverse engineering several parts of a Friedland wireless burglar alarm. I will come back to finish it off at some point.

The aim of these was to show people who are new to RE some of the tools and methods used with hardware and basic RF systems.

*   [Reverse engineering a wireless burglar alarm, part 1](http://cybergibbons.com/uncategorized/reverse-engineering-a-wireless-burglar-alarm-system-part-1/) - spectrum analysis and basic signal capture with SDR
*   [Reverse engineering a wireless burglar alarm, part 2](http://cybergibbons.com/uncategorized/reverse-engineering-a-wireless-burglar-alarm-part-2/) - breakdown of components and major circuit details
*   [Reverse engineering a wireless burglar alarm, part 3](http://cybergibbons.com/uncategorized/reverse-engineering-a-wireless-burglar-alarm-part-3/) - sniffing SPI data between the microcontroller and CC1150 transceiver using the Saleae Logic
*   [Reverse engineering a wireless burglar alarm, part 4](http://cybergibbons.com/uncategorized/reverse-engineering-a-wireless-burglar-alarm-part-4/) - manually decoding some of the SPI traffic using the CC1150 data sheet
*   [Reverse engineering a wireless burglar alarm, part 5](http://cybergibbons.com/uncategorized/reverse-engineering-a-wireless-burglar-alarm-part-5/) - working out the data encoding between devices in the alarm system
*   [Reverse engineering a wireless burglar alarm, part 6](http://cybergibbons.com/uncategorized/reverse-engineering-a-wireless-burglar-alarm-part-6/) - working out what the individual bits in the data between the devices mean
*   [Reverse engineering a wireless burglar alarm, part 7](http://cybergibbons.com/uncategorized/reverse-engineering-a-wireless-burglar-alarm-part-7/) - setting up the hardware to replay the signal from a device
*   [Reverse engineering a wireless burglar alarm, part 8](http://cybergibbons.com/uncategorized/reverse-engineering-a-wireless-burglar-alarm-part-8/) - writing software to replay the signal from a device"	t5_2qmd0	True
1362069060.0	19ehxh	Catalog of key Windows kernel data structures	igor_sk	48	5	0		t5_2qmd0	False
1356125495.0	158xy8	Rdis: A binary analysis tool for linux	rednovae	51	13	7	"Hello r/re. Long time lurker, first time poster.

I just GPLed a project of mine I've been working on for a while now named rdis. This is a binary analysis tool for linux. It is in a semi-form of completion, but I have used it successfully for disassembly tasks and believe it provides utility in its current form.

[Website](http://rainbowsandpwnies.com/rdis/) - [Screenshot](http://rainbowsandpwnies.com/rdis/ss18nov2012.png) - [Github](https://github.com/endeav0r/rdis)

Rdis does not *currently* debug executables. I'll comment more on that if there's interest.

While rdis currently supports ELF/PE 32/64-bit x86, you can write custom loaders in lua that provide most of the functionality available from the C loader. An example is available here: http://rednovae.blogspot.com/2012/11/writing-custom-loader-for-rdis.html . Of course, now that it's GPL you could also write your own loader in C.

Reachable functions (I'm betting someone will ask) are functions which rdis believes are currently reachable. I implemented this after disassembling Go binaries which statically link their standard libraries and provide symbols for each function. Instead of searching through every function in the binary, you can search through just the functions rdis believes are reachable.

*My main goal behind releasing rdis is feedback. Please let me know what you think (post-runtime). Consider it a transaction, code for feedback :). This reddit post is fine for feedback.*

**Other notes:**

* Click on an instruction in the graph and hit semi-colon. You are now typing a comment for that instruction. Return ends the comment input.

* Click on a node/vertex in the graph. Hit 'p'. Predecessor nodes/vertices are highlighted.

* The first window you are looking at when running rdis accepts lua. Incomplete lua documentation available [here](http://rainbowsandpwnies.com/rdis/lua.html) . Rdis will look for and run ~/.rdis.lua each time you load an executable.

* You won't be able to save executable loaded with a lua loader. This will have to wait until I find a way to package the lua code used to load the executable in with the saved rdis state.

* Rdis saves its state in JSON, so you can pull information out of the json with your own tools. The json is a bit funky and mirrors rdis' object/container model; However, it shouldn't be too hard to figure out. You'll probably want to compress your saved rdis files.

* From the hex view, right click a byte and select, ""User Function,"" to tell rdis to recursively disassemble from that byte. This is also available from instructions in the graph.

* Call graphs for functions are available from the menu on right clicking a function in the function view.

* References are built at runtime by map/reducing over the graphs holding instructions. c: is for constant, s: is for store, l: is for load. The IL (see src/rdil) isn't complete yet, so this information is only complete for the independent instruction in which the address was found.

* Rdis is threaded. Your cores will help. It also makes healthy use of memory. The beefier your machine, the happier you will be.

*I've added some basic documentation to the rdis site which covers most of the details above: http://rainbowsandpwnies.com/rdis/docs.html*"	t5_2qmd0	True
1355932820.0	1542xs	Emulating the Gamecube audio processing in Dolphin	samcrem	46	5	1		t5_2qmd0	False
1348873591.0	10n6ja	Fun with Constrained Programming	rolfr	49	6	5		t5_2qmd0	False
1343331476.0	x7fjt	Daeken's paper on Onity hotel locks	igor_sk	57	16	0		t5_2qmd0	False
1341509400.0	w32es	R4ndom's Beginning Reverse Engineering Tutorial #11	RandomNetzley	51	10	0		t5_2qmd0	False
1338978098.0	unqry	Reverse Engineering - Stack Exchange site proposal	Skomski	45	3	0		t5_2qmd0	False
1314604313.0	jxs9z	The Xbox 360 reset glitch hack	newgre	47	4	2		t5_2qmd0	False
1299043415.0	fvl9m	Where do I start learning to Reverse Engineer?	yataf	50	7	13	I'm interested in how things are jail broken and what not but I'm at a complete loss as to where to even begin to understand the process. Can anybody get me started?	t5_2qmd0	True
1294100322.0	evp8q	PS3 Root Key Found	ethicszen	48	10	3		t5_2qmd0	False
1368893049.0	1ekxky	How does anyone actually afford IDA?	voltagex	63	21	143		t5_2qmd0	False
1357499772.0	162mng	Reversing a Firmware Uploader to get the Decrypted Firmware for a ST-Link/V2	s7master	49	9	2		t5_2qmd0	False
1351540039.0	12ajwc	How to start out in reverse  engineering? 	Help_I_Lost_my_face	52	14	48	"I'm sure this has been asked and answered, but I didn't see it in /r/ReverseEngineering.   This subject is something I'm very interested in and would eventually like to get into malware analysis.

Unfortunately, I have next to no real programming experience, but I've been trying to teach myself some of the higher languages to start out with and then switch to Assembly.  I've done some digital forensics work, worked a lot in system networking as well as a whole lot of electronic repair.  Does anyone have any useful advice? Languages to learn?  Programs to learn?  etc..."	t5_2qmd0	True
1349234350.0	10utth	Z3 is now Open Source(!!)	tylerni7	47	9	18		t5_2qmd0	False
1341848802.0	w9vzw	R4andom's twelfth tutorial on reverse engineering	RandomNetzley	60	16	2		t5_2qmd0	False
1337141872.0	tpgiv	Malware Analysis Course Lectures	maligare	44	7	17		t5_2qmd0	False
1335473512.0	su5jh	Decoder for the binary Valve Data Format	barneygale	53	9	4		t5_2qmd0	False
1333414244.0	rqety	/r/ReverseEngineering's Q2 2012 Hiring Thread	rolfr	47	5	18	"If there are open positions involving reverse engineering at your place of employment, please post them here.  The user base is an inquisitive lot, so please only post if you are willing to answer non-trivial questions about the position(s).

Please elucidate along the following lines:

* Describe the position as thoroughly as possible.
* Where is the position located?  Is telecommuting permissible?  Does the company provide relocation?  Is it mandatory that the applicant be a citizen of the country in which the position is located?
* If applicable, what is the education / certification requirement?
* Is a security clearance required?  If so, at what level?
* How should candidates apply for the position?

Readers are encouraged to ask clarifying questions.  However, please keep the signal-to-noise ratio high and do not blather.  Please use moderator mail for feedback.

If you use twitter, retweeting [this](https://twitter.com/#!/RolfRolles/status/186979206989754368) couldn't hurt.

See also:  [/r/netsec's Q2 2012 hiring thread](http://www.reddit.com/r/netsec/comments/romsb/rnetsecs_q2_2012_information_security_hiring/)."	t5_2qmd0	True
1309339419.0	ic5t6	"Blackhat Google SEO Poisoning of keyword ""patti labelle"""	_pusher_	44	3	0		t5_2qmd0	False
1308126912.0	i05oj	Intro to x64 Reversing [PDF]	rolfr	43	5	5		t5_2qmd0	False
1301935661.0	gifao	Interesting Behaviors in x86 Instructions 		42	2	5		t5_2qmd0	False
1293786893.0	eu3qz	PS3 private cryptography key obtained	ethicszen	44	4	9		t5_2qmd0	False
1367633635.0	1dnok3	"Epic ""cnot"" Writeup (highest value level from PlaidCTF)"	rolfr	49	12	1		t5_2qmd0	False
1363097553.0	1a5bl4	Notes on Intel Microcode Updates	simpleuser	44	2	2		t5_2qmd0	False
1353512010.0	13khtu	OllyDbg v2.01 beta, updated 4x -- a major update of the plugin interface.	g0dmoney	47	9	3		t5_2qmd0	False
1347647898.0	zw0g2	Tutorial on anti-debugging techniques	RandomNetzley	61	21	3		t5_2qmd0	False
1347384506.0	zpus0	All the buzz about tracking and privacy concerns aside, the top post of /r/Games offers a nice read about reverse-engineering a watermark function inside the WoW Game Client	RoLoLoLoLo	51	11	2		t5_2qmd0	False
1324752359.0	npc71	"""Out Of This World"" Code Review"	rolfr	58	14	1		t5_2qmd0	False
1323005506.0	mzq1d	Education	OpenSecurityTraining	50	9	15	"If you're someone who already has a reasonable grasp of reverse engineering and malware analysis, I need your help. I need you to help train more people like yourself.

More likely than not you're ""self-taught"". Except, when you were teaching yourself you were probably actually relying in large part on the help of others. They freely posted zines, articles, and blog entries. They and answered questions in forums, email lists, and in person. Eventually, once you were confident enough to believe you would be right more often than wrong, you might have tried to pay it forward and share your knowledge back to others.

If so, you're the type of person who is needed. We need people who want to make an impact by more rapidly helping educate those who want to learn. We all know that things like certifications and most college curriculums set a fairly low bar for the expectation of what people should know for security. Certainly in the area of reverse engineering there is almost nothing. Paid training classes can be good, but the cost can prevent people from getting all the training they really need.

I believe what's needed are many more people teaching trainings in person, while encouraging their top students to eventually also become instructors. This brings down costs, provides a well-structured learning environment with instant feedback, and results in the education of many more people. If you're a person who already knows the material, becoming an instructor should be a snap. All you need are class materials, and a venue. Finding venues is up to the instructors, but now there is a place that lesson plans and class materials can be stored:

www.OpenSecurityTraining.info

This site is meant to act as a repository for class material that have been used in computer security classes at least a day long. The material must be released under an open license to allow the most possible instructors to utilize and adapt the material. It can then be used by new instructors as-is, or piecemeal to enhance or speed the creation of other classes. I didn't want to widely promote the site until we had enough seed content, and now I think we're there.

But we need more content, and more instructors. If you have classes on any security subject that you currently or have previously taught, and you would like others to use the material, please consider contributing it. And if you're one of the people who already knows a great deal of the material currently posted there, please start thinking about how you could take the material and start teaching others in person, at your job, at conferences, or elsewhere. For more about why you should contribute, and why you should teach, please read this page: www.OpenSecurityTraining.info/Why.html

Thanks

Xeno Kovah"	t5_2qmd0	True
1320174239.0	lwqbn	How do programmers create add-ons for games like League of Legends that don't expose an API?	TheMagicHorsey	49	9	11	"The makers of League of Legends did not ship the game with a replay recorder or playback mechanism, but some fans wrote their own system for the game.  How do programmers figure out where/how to interface with a game like that which doesn't publish an API?

Do these programmers just sniff the packets that the game produces/receives to figure out what is going on?  What if these packets are obfuscated?  Or do they directly examine the memory image of the game as it is running?

What tools would you use for such analysis?"	t5_2qmd0	True
1300209145.0	g4it0	Backdoor.Prioxer!inf: “accidentally” the stealthiest file infector ever!	gnewman	44	3	2		t5_2qmd0	False
1285644322.0	djt1v	"""Hottest girls on facebook"" malware analysis"	NinjaYoda	47	8	2		t5_2qmd0	False
1344858018.0	y526i	Free Reverse Engineering Course on SecurityXploded website	makash	47	11	3		t5_2qmd0	False
1341008649.0	vtfea	R4ndom's 10th tutorial on beginning reverse engineering	RandomNetzley	56	16	3		t5_2qmd0	False
1340152974.0	vay3i	Welcome to computer security:  U.S., Israel developed Flame computer virus to slow Iranian nuclear efforts, officials say	rolfr	53	16	26		t5_2qmd0	False
1336462707.0	tcmt2	iOS Hacker's Handbook released today	rolfr	48	11	16		t5_2qmd0	False
1315315409.0	k6dpm	[pdf] very nice and simple opcode table	simpleuser	46	4	2		t5_2qmd0	False
1309302502.0	ibrcj	The Art of ROM Hacking	polsab	44	5	2		t5_2qmd0	False
1295427354.0	f508e	"Reverse-engineering.net has been forced to get 
closed."	silkut	45	6	7		t5_2qmd0	False
1295024762.0	f2b4w	My, what strange NOPs you have!		42	4	1		t5_2qmd0	False
1291041479.0	edbyy	antiflag.sys - Writing a kernel driver to remove the LLKHF_INJECTED flag	usualsuspect	42	5	4		t5_2qmd0	False
1290292592.0	e99le	"OllyDbg 2.01 (intermediate alpha) released - and 
OllyDbg 64 announced"	wtbw	43	6	21		t5_2qmd0	False
1289208901.0	e2usj	Corelan Team exploit development cheatsheet wallpaper	sanitybit	43	2	4		t5_2qmd0	False
1286532902.0	dohon	Linux debugger inspired by OllyDbg	mebrahim	41	6	14		t5_2qmd0	False
1374613560.0	1iwsh1	Baggage X-ray machine	kasbah	42	5	5		t5_2qmd0	False
1374351024.0	1ipmyz	Discoverer: Automatic Protocol Reverse Engineering from Network Traces	dgryski	40	6	6		t5_2qmd0	False
1368636838.0	1ee43g	The Bieber Algorithm	calley479	50	12	14		t5_2qmd0	False
1355419888.0	14sl35	a valid ELF/PDF/HTML/Java file	simpleuser	52	14	4		t5_2qmd0	False
1346789745.0	zcpvy	Tutorial: Cracking Visual Basic Binaries	RandomNetzley	58	20	3		t5_2qmd0	False
1333994221.0	s13v2	CVE-2012-0769: the case of the perfect info leak [PDF]	polsab	46	9	0		t5_2qmd0	False
1332383188.0	r7rj3	Not technical, but worth reading -- Meet The Hackers Who Sell Spies The Tools To Crack Your PC (And Get Paid Six-Figure Fees)	rolfr	52	14	10		t5_2qmd0	False
1321461796.0	meixt	Best Tutorials for learning how to crack in 2011.	excidius	44	7	37	Can any of you recommend some up-to-date tutorials to help some of us get started?	t5_2qmd0	True
1311025958.0	it7ju	Analysis of the jailbreakme v3 font exploit	polsab	43	3	1		t5_2qmd0	False
1292323951.0	elkgp	A pink $16 pocket spectrum analyzer	ethicszen	43	7	0		t5_2qmd0	False
1250129929.0	9a50j	Introduction to modern reverse engineering?		45	5	12	"Hi all,
I'm currently studying Computer Science and I've always known about debugging (but on a simple level).
I've been reading a lot about reverse engineering lately because I know almost nothing about software protection schemes and would like to know how they work, how to build my own (etc) and how to defeat them.
After doing research (even if small amounts), I haven't been able to find many resources that are modern (except for a few books which I plan to get). I realize assembly language is the standard, and I'm attempting to understand as much of it as I can, but would like to know if any of you have suggestions or resources I should check out in order to get into this field.

P.S. For the record, the only 'real' programming language I have experience in thus far is C, although I've fiddled with Python and a few scripting languages."	t5_2qmd0	True
1375314897.0	1jgi90	VideoCore IV Programmers Manual (Raspberry Pi)	hermanhermitage	46	8	6		t5_2qmd0	False
1372175568.0	1h1kpv	Hacking Java Bytecode for Programmers (Part4)	1107d7	42	9	2		t5_2qmd0	False
1368572606.0	1echez	Android Substrate (by Saurik)	sablefoxx	44	10	0		t5_2qmd0	False
1366986890.0	1d5lor	Extracting cached TrueCrypt passphrase using Volatility	x9090	44	9	11		t5_2qmd0	False
1353054333.0	13ah30	Patching old Linux binaries to work with recent libc versions	rolfr	42	5	2		t5_2qmd0	False
1349948754.0	11aw7r	Easily decompile an APK to Java code		50	15	3		t5_2qmd0	False
1341317306.0	vz3v6	Here's another subreddit for a bit more hands-on reverse engineering. (/r/uic/)	fsdfsdfsdfsdfsdfsdpf	43	4	10		t5_2qmd0	False
1338391264.0	uc769	Abusing Forced Inline in C	HectaMan	41	4	6		t5_2qmd0	False
1316712007.0	ko38r	Synalyze It! Hex-editor, allows you to create a grammar for binary files interactively...	g0dmoney	45	6	10		t5_2qmd0	False
1315402448.0	k7kdl	"2856 videos from Microsoft Research 
available online"	igor_sk	48	12	6		t5_2qmd0	False
1310015508.0	iirrx	Python arsenal for Reverse Engineering [PDF]	polsab	43	4	0		t5_2qmd0	False
1308686752.0	i5jhv	WinDbg From A to Z!	polsab	42	4	3		t5_2qmd0	False
1294609493.0	ez548	You Should Work for Symantec	rolfr	47	8	5		t5_2qmd0	False
1289912125.0	e6xgr	x86 assembler is not injective	accessomat	43	7	7		t5_2qmd0	False
1285923258.0	dlexa	Symantec W32.Stuxnet Dossier [PDF]	sanitybit	40	3	19		t5_2qmd0	False
1374746777.0	1j0p4e	Rigol DS2000 and DS4000 partially hacked! The Key generation algorithm has been reverse-engineered!	derpiderpiton	43	5	12		t5_2qmd0	False
1367395021.0	1dgy5c	Linux Syscall Reference	Trout_Tickler	42	9	2		t5_2qmd0	False
1360245345.0	182bf5	Easy 6502 	nullandnull	47	7	4		t5_2qmd0	False
1358111592.0	16id2t	How to create an anonymous IDA PRO database	0x0000EBFE	51	18	4		t5_2qmd0	False
1357271624.0	15xiq2	Beginning Reverse Engineering?	flareboy323	51	13	35	"I had a question about reverse engineering. I've been interested in it for an extremely long time, but never have found a way to get into it. For things like cracking programs and stuff, and even for simple stuff like creating game mods, or finding out how the game works (All of it's textures and all of that type of stuff).

The only tutorials I can find online are extremely old and un-helpful, things like ""Open the exe file in IDA and search for the string blablabla, and then just change it!"" or things that haven't worked since the 90s.

Because of the fact that I can't find any college classes on this or anything else like that, I haven't been able to find a place to learn Reverse Engineering. Would anyone here be able to help me?

Thanks a ton!"	t5_2qmd0	True
1341229960.0	vx57y	x86 API Hooking Demystified	jbremer	39	3	1		t5_2qmd0	False
1330387544.0	q8vaz	Google offers $1 million for Chrome exploits	darkry	48	10	7		t5_2qmd0	False
1327010516.0	onvz7	Frisbee Lite: a USB fuzzing tool	igor_sk	41	3	1		t5_2qmd0	False
1323029623.0	n020v	GCHQ CanYouCrackIt Solution explained	karmakit	44	8	10		t5_2qmd0	False
1321812028.0	mj5qj	Hopper, an IDA-ish disassembler for OSX (it does Windows binaries!)	abadidea	48	9	11		t5_2qmd0	False
1319833436.0	lskla	Skype Goes After Reverse-Engineering	5d41402abc4b2a76b971	44	7	5		t5_2qmd0	False
1311896694.0	j2oz1	Hacking TTF: the smallest font	igor_sk	42	9	3		t5_2qmd0	False
1289261634.0	e36ok	Administrivia:  /r/ReverseEngineering has reached 5,000 subscribers	rolfr	41	5	14	"The number's only significance is that 5,000 people simultaneously have reddit accounts and decided to subscribe to /r/ReverseEngineering.  There's no indication of how many of those accounts are ""regularly active"", nor of the number of people who lurk without creating an account.  However, according to reddit's traffic statistics, we've had about 5,000 and 5,500 ""unique"" visitors in the past two months, respectively, and 33,000 and 37,000 total page views in each of the same, respective months.

As usual, I'd like to thank the contributors, the readers, and the moderators.  Please keep the contributions coming; also, if you have any requests, questions, or suggestions regarding the content, this is a good thread in which to raise them."	t5_2qmd0	True
1366071408.0	1cfddg	Rewriting x86 Binaries Without Code Producer Cooperation [PDF, Ph.D. thesis]	rolfr	41	6	6		t5_2qmd0	False
1355133039.0	14ljdz	Defeating Windows Driver Signature Enforcement #3: The Ultimate Encounter | j00ru//vx tech blog	niko-r	42	7	0		t5_2qmd0	False
1351280978.0	1251vw	PS3: dumping the bootldr	igor_sk	42	3	0		t5_2qmd0	False
1345311064.0	yfo51	OllyDbg 2.01 beta2	newgre	49	11	5		t5_2qmd0	False
1341252212.0	vxmzr	/r/ReverseEngineering's Q3 2012 Hiring Thread	rolfr	46	12	24	"If there are open positions involving reverse engineering at your place of employment, please post them here.  The user base is an inquisitive lot, so please only post if you are willing to answer non-trivial questions about the position(s).

Please elucidate along the following lines:

* Describe the position as thoroughly as possible.
* Where is the position located?  Is telecommuting permissible?  Does the company provide relocation?  Is it mandatory that the applicant be a citizen of the country in which the position is located?
* If applicable, what is the education / certification requirement?
* Is a security clearance required?  If so, at what level?
* How should candidates apply for the position?

Readers are encouraged to ask clarifying questions.  However, please keep the signal-to-noise ratio high and do not blather.  Please use moderator mail for feedback.

If you use twitter, retweeting [this](https://twitter.com/RolfRolles/status/219854070645661696) couldn't hurt."	t5_2qmd0	True
1339448947.0	uwri7	Analyzing the MD5 collision in Flame [pdf]	simpleuser	39	2	2		t5_2qmd0	False
1330486937.0	qarv6	Help recover the last release of Cray OS	igor_sk	49	13	11		t5_2qmd0	False
1323723281.0	na1x6	Reversing Industrial firmware for fun and backdoors I	rolfr	41	10	2		t5_2qmd0	False
1322070534.0	mmx9o	CS640 - Advanced Compilers	digduggg	43	6	6		t5_2qmd0	False
1318705754.0	lddiw	the Portable Executable Format on Windows (binaries included)	simpleuser	41	4	0		t5_2qmd0	False
1294731155.0	f038l	Where to start in Reverse Engineering?	digduggg	41	5	14		t5_2qmd0	False
1243430709.0	8nm7u	Art of file - graphical interpretation of a file	cloudburst	37	4	5		t5_2qmd0	False
1352036412.0	12m06a	A simple PIN tool unpacker for the Linux version of Skype	joxeankoret	43	7	1		t5_2qmd0	False
1350949110.0	11wsp7	GameBoy Emulation in JavaScript	nullandnull	46	12	3		t5_2qmd0	False
1350512932.0	11nlsj	Securitytube Gnu Debugger Expert (SGDE) Course Videos 	jwcrux	37	4	1		t5_2qmd0	False
1347907773.0	101a5g	Introducing /r/RELounge, a subreddit for the non-technical side of reverse engineering and computer security	rolfr	41	6	0	"I started /r/ReverseEngineering for the purpose of disseminating highly technical information:  reverse engineering workproducts, tools, academic PDFs on the subject of advanced reverse engineering tool construction, etc.  But as time has progressed, things related to reverse engineering have been cropping up in other sources.  For example, these days there are often high-profile exposés in venues such as the New York Times about state-sponsored malware; sometimes a member of the security community has his or her (who am I kidding, his) research detailed in mainstream media sources; our industry might be the subject of political discussions, e.g. whether exploit sales should be regulated; and so on.  I hesitate to post these articles to /r/ReverseEngineering due to my desire to maintain the technical focus of that subreddit, but at the same time I feel as though subjects like these may be interesting to readers of /r/ReverseEngineering.

Therefore, the solution to this problem is to create a new subreddit specifically devoted to the ""non-technical"" side of reverse engineering.  Hence I introduce [/r/RELounge](http://www.reddit.com/r/RELounge).  The charter for this subreddit is fairly nebulous.  If it's in the mainstream media, post it to RELounge.  If it's ""technical"", but does not involve assembly language, low-level system programming, compiler internals, or mathematics (for example, writeups from the anti-virus industry which don't involve any binary analysis), post it to /r/RELounge.

For people who like to read /r/ReverseEngineering in either ""[new](http://www.reddit.com/r/ReverseEngineering/new)"" mode (i.e., only seeing the most recent submissions) or ""[comment](http://www.reddit.com/r/ReverseEngineering/comments)"" mode (i.e., viewing only the most recent comments), you can continue doing this for both subreddits at the same time with these combined [new](http://www.reddit.com/r/RELounge+ReverseEngineering/new) and [comment](http://www.reddit.com/r/RELounge+ReverseEngineering/comments) links.

Thanks for your attention and I hope /r/RELounge can become as worthwhile a destination as /r/ReverseEngineering.

Rolf"	t5_2qmd0	True
1342730040.0	wu3wz	R4ndoms fifteenth tutorial on reverse engineering	RandomNetzley	52	18	2		t5_2qmd0	False
1336141792.0	t6v76	Python program for reverse engineering/analysis of binary protocols.  Helps to identify where the locations of fields and their data types.	phreakocious	37	4	14		t5_2qmd0	False
1332953718.0	rhrgh	Reverse engineering the .ypk file format. Why are the PNGs coming out scrambled?	SKCIDLOL	41	7	20	"I am trying to reverse engineer the .ypk file format used in Yu-Gi-Oh! ONLINE 3 in order to extract some PNG images from it. I thought I had it figured out but the images are coming out scrambled. Is there some kind of encryption or compression at fault here?



Here's a sample of the binary file which contains two images. This is an identical copy of the first 211,649 bytes of data001.ypk.
[Test.bin](http://www.mediafire.com/?wbdlc0l5wl64666)



This is what the images look like when I extract them.
[Image 1 - 0000.png](http://i.imgur.com/N2Ke1.png)
[Image 2 - 3900_1.png](http://i.imgur.com/hIVYx.png)



Each image has a variable sized header before it. This is what I've worked out, but I'm unsure of its veracity.


    10 bytes constant, unknown
    08 bytes variable, unknown
    04 bytes (dword), Image data size + 5
    04 bytes (dword), Image data size - 15
    02 bytes (word), Length of image name
    02 bytes (word), Offset of image data from end of file name - 5



P.S. I originally posted this on r/learnprogramming, but someone suggested I post it here.

~~~

EDIT: More Image samples to show the variety of the corruption. In case it isn't clear, most all of the areas that appear white are fully transparent.


[4185_1.png](http://i.imgur.com/xsWzd.png)
[4243_1.png](http://i.imgur.com/OspQn.png)
[4527_1.png](http://i.imgur.com/jeaQy.png)
[4727_1.png](http://i.imgur.com/68NZZ.png)



If you're willing to download and install the game the whole 503MB binary file is located at ""C:\Program Files\Konami\Yu-Gi-Oh! ONLINE 3\package\data001.ypk"". A login is required to play, but not to download and install.


[This is the game installer](http://dlg.ygopkg.konamionline.com/ygopkg/yo3setup_20110728en.exe)

~~~

Solved: mmm_tacos has pointed out that these .ypk files are slightly modified [PKZIP](http://www.pkware.com/documents/casestudies/APPNOTE.TXT) [files](http://petlibrary.tripod.com/ZIP.HTM). With this knowledge the images inside can be successfully extracted with no corruption.


Thanks to everyone that took the time to reply."	t5_2qmd0	True
1330175710.0	q5epf	Opcodes' tables (instruction sets maps) of Android, Java, .Net, x86, x64	simpleuser	42	9	2		t5_2qmd0	False
1325017325.0	nsmzv	28c3 Live Video Streams	digduggg	39	7	3		t5_2qmd0	False
1318796983.0	led1p	Alex Sotirov's Intro to Static Reversing	dguido	40	9	6		t5_2qmd0	False
1316332585.0	kjdk4	Android &amp; ARM - and 8 part assembly walkthrough	wishi	43	7	2		t5_2qmd0	False
1312945247.0	je6rz	x86 code compression in kkrunchy	rolfr	39	3	3		t5_2qmd0	False
1311689446.0	j05wg	Reverse engineering the Airport Express	igor_sk	43	9	3		t5_2qmd0	False
1305190464.0	h9myi	Zeus Source Code	newgre	45	11	24		t5_2qmd0	False
1298988707.0	fv1om	bfcrypt - Open source crypto scanner	fwhacking	38	6	15		t5_2qmd0	False
1298107168.0	fofe6	Tracing - an ollydbg tutorial	simpleuser	38	6	3		t5_2qmd0	False
1270073674.0	bkvr1	Microsoft runs fuzzing botnet, finds 1,800 Office bugs	jsco	35	2	1		t5_2qmd0	False
1267153108.0	b6n99	A proposal to create a public repository of reverse-engineered documentation of Windows and other closed-source software.	ethicszen	35	1	8		t5_2qmd0	False
1376594239.0	1kfr48	Native x86 Decompilation Using Semantics-Preserving Structural Analysis and Iterative Control-Flow Structuring [PDF]	moyix	36	2	4		t5_2qmd0	False
1375989309.0	1jz3qv	Formal Specification of the x86 Instruction Set Architecture (Thesis, Ulan Degenbaev) [PDF]	igor_sk	41	5	8		t5_2qmd0	False
1371573918.0	1gldjz	Potential linux binary malware found, where should I start?	vsrz	38	5	23	"I found a particular binary on one of my systems and was hoping I could find someone to help me reverse it to find out what it is. Aside from the basic stuff (file, strings, md5+google search) I have found nothing on it. 

I believe it is malware because I found that it was being called by cron from a hijacked user account. It ran on my system for a few weeks.

It is not common that I find these so I've never had the opportunity to really dive deeply into one. Hopefully someone finds some interest. Thank you!

Upload: http://bit.ly/16e7eCh

"	t5_2qmd0	True
1366197718.0	1ciybs	/r/ReverseEngineering's Q2 2013 Hiring Thread	wtbw	52	17	17	"If there are open positions involving reverse engineering at your place of employment, please post them here. The user base is an inquisitive lot, so please only post if you are willing to answer non-trivial questions about the position(s). Failure to provide the details in the following format and/or answer questions will result in the post's removal.

Please elucidate along the following lines:

* Describe the position as thoroughly as possible.
* Where is the position located? Is telecommuting permissible? Does the company provide relocation? Is it mandatory that the applicant be a citizen of the country in which the position is located?
* If applicable, what is the education / certification requirement?
* Is a security clearance required? If so, at what level?
* How should candidates apply for the position?

Readers are encouraged to ask clarifying questions. However, please keep the signal-to-noise ratio high and do not blather. Please use moderator mail for feedback."	t5_2qmd0	True
1355297740.0	14ps4t	Pictoral guide to reverse-engineering a router PCB (physical delayering)	bushing	40	6	1		t5_2qmd0	False
1355160600.0	14m2b8	JEB the Android Decompiler in Action	j04n_	40	9	13		t5_2qmd0	False
1346550298.0	z7meh	Travis Goodspeed's Blog: Reversing an RF Clicker	rolfr	43	11	1		t5_2qmd0	False
1319107256.0	liko4	Deobfuscating malicious code: layer by layer	wishi	35	2	1		t5_2qmd0	False
1296153734.0	fa6sq	What is the smallest, simplest CPU that gcc can compile for?	sztomi	38	6	7	"[I asked a question on StackOverflow](http://stackoverflow.com/questions/4817950/what-is-the-smallest-simplest-cpu-that-gcc-can-compile-for) but it didn't seem to gain much attention. I thought I'd drop it here, maybe some of you have a good suggestion. 

I looked at ATTINY45 and seems simple enough but I wonder if there is anything even more simplistic.

Edit: Thank you guys for the many answers, I really appreciate it. I'll have some spare time in the weekend for my hobby projects, so I'll look into the suggestions in detail and will sure to post the results. "	t5_2qmd0	True
1289850323.0	e6jgt	##re on Freenode	gnewman	42	10	4	"Hey REddit, I've created a channel on Freenode in an attempt to cater to RE professionals.  A place where we can share knowledge, ask and answer questions, or just shoot the shit would be really nice.  I've registered ##re and submitted a GRF so that we can possibly get #re as our official channel sometime in the near future.  I hope to see some of you folks on there :)

Regards,
Greg

Edit:  Remember, until the GRF goes through for #re, it's ##re (pound pound re) so that we can have access to the topic and ops.  See you there!

Edit 2:  Wow, guys!  I didn't expect this kind of response!  At first glance, it seems like we might build a nice little IRC community!"	t5_2qmd0	True
1247007858.0	8z3xo	How many of you are using Linux to analyze Win32 binaries?		40	3	15	"I've been considering this for the past few days. I don't have any issues reversing and programming on Windows, but it seems like an interesting endeavor to do it from Linux (through either a VM or Wine).
Anyone have any comments/experiences they'd like to share?"	t5_2qmd0	True
1221242756.0	714tb	Wish fravia the best	rolfr	37	2	5		t5_2qmd0	False
1376492704.0	1kcnsp	trapcc: Computation through Intel MMU's fault handling mechanism (for obfuscation purpose)	perror	39	5	2		t5_2qmd0	False
1371074736.0	1g85lx	Differentiate Encryption From Compression Using Math	niko-r	38	8	15		t5_2qmd0	False
1370244467.0	1fkhvl	Windows Privilege Escalation - EPATHOBJ Exploit Public	w3rterz	42	11	1		t5_2qmd0	False
1368715237.0	1egaya	Introduction to Windows Kernel Security Research	polsab	41	12	0		t5_2qmd0	False
1361650577.0	193eom	Trying to reverse a old .COM binary and need some in depth information about DOS...	samuirai	37	4	11	"The binary is not publicly available therefore I NOPed the actual code.

[&gt; OnlineDisassembler with NOPs](http://onlinedisassembler.com/odaweb/disassemble/69e60906-f0d6-4a43-8f26-173d17f4f5fa?platformId=i8086#view/assembly-tab-item/offset/00)

The binary takes one argument and reads data from STDIN.
here is a commented version.

     0x00000000    cmp    sp,0xb139   ; ? why this compare
     0x00000004    jb     0x0000004a  ; jump below to exit 
     0x00000006    mov    bp,0x5d     ; ? why move bp after code segment
     0x00000009    mov    dx,0x152    ; buffer address for data
     0x0000000C    mov    cx,0xad39   ; max read length = 0xad39
     0x0000000F    xor    bx,bx       ; read from STDIN
     0x00000011    mov    ah,0x3f     ; ""Read File"" API Code
     0x00000013    int    0x21        ; DOS API Interrupt
      ...           ...    ...
     0x00000051    ret

later in the code, they make `lods` and `stos` from `dx (0x00000152)`.
`bp` is used like this in calculations `WORD PTR [bp+0x0]`.

**Please correct my following assumptions:**

 * The `cmp sp,0xb139` is like a check if it's a compatible DOS version or something like that?

 * I assume that DOS loads the binary and places the *command line arguments* behind the code segment? Maybe at `0x00000052` is `argc` and beginning with `0x0000005d` is `argv[]`?

 * I assume that DOS makes a data segment available for the code at `0x00000152` which can be used to read and write data.

 * This is an instruction in the code `lods ax,WORD PTR ds:[si]` (`si == dx == 0x00000152`). Let's assume it reads the arguments and at `dx` is the string ""ABCD"" located. `ax` should be `0x4142` afterwards, right?

Thanks for any help and information about DOS stuff :) I am happy with any URL, paper, ... what could help me :)


**UPDATE:** Thank you all for your help. I understood it to a level where I was able to rewrite it in python.  And I have learned so much more, thanks :)"	t5_2qmd0	True
1354189154.0	13zmh5	Send a payload from javascript by clicking a malicious link, which bypasses firewalls and IDS systems. (no need for flash, activex or applets)	goonmaster	38	6	12		t5_2qmd0	False
1353986629.0	13upp1	Life of an instruction in LLVM	rolfr	37	6	0		t5_2qmd0	False
1346348015.0	z353h	Yet another crackme challenge	advanced_reddit_user	38	6	6		t5_2qmd0	False
1312754729.0	jbtym	How to find 0-day in browsers	rolfr	37	7	2		t5_2qmd0	False
1310039422.0	iiycr	Durandal Project: A distributed GPU/CPU password cracker	samcrem	37	5	10		t5_2qmd0	False
1308490596.0	i3k7w	Random bit flips in hardware and security (Why ECC for Industrial PCs)	wishi	39	3	13		t5_2qmd0	False
1299233092.0	fx6rz	Extracting a 3DES key from an IBM 4758	fwhacking	34	5	5		t5_2qmd0	False
1296323430.0	fbefl	Homebrew CPU Blog		36	5	2		t5_2qmd0	False
1292201418.0	ekq9n	The Day MAME Saved My Ass (crosspost from /r/programming)	rolfr	41	6	6		t5_2qmd0	False
1288640332.0	dznk9	Google launches vulnerability rewards program for web properties including google.com, youtube.com, etc	darkry	37	6	6		t5_2qmd0	False
1284082332.0	dbvit	Porting from DOS to Windows	rolfr	36	6	3		t5_2qmd0	False
1283330669.0	d83uj	PSGroove, an open-source reimplementation of the psjailbreak exploit for AT90USB and related microcontrollers.	ethicszen	34	5	8		t5_2qmd0	False
1268432435.0	bcpw9	x86 Disassembly - wikibooks [PDF] 		33	1	3		t5_2qmd0	False
1245362571.0	8tq12	What are the best text for Reverse Engineering (from intro to advanced) I know of Shellcoder's handbook, but are there any hidden gems out there that you would take to a deserted island? Or should ignore books start from Phrack #1?	new_to_re	33	1	11		t5_2qmd0	True
1372374974.0	1h7n91	Administrivia: 20,000 subscribers, nearly five years of existence	rolfr	37	10	6	"Hi folks,

The reverse engineering reddit has just reached 20,000 subscribers.  While I'm not sure what that number means in absolute terms, it is nevertheless a nice and round figure.  The 10,000 mark came at New Year 2011/2012, so our growth has accelerated.  I would like to thank everybody who's contributed in a meaningful and positive way to this experiment, whether by posting links, or making comments, or writing material that has been featured here.  We're still going strong after nearly five years of operation, and I hope we can continue to be the Internet's most worthwhile destination for reverse engineering links and discussion.

Any suggestions or feedback on how to run this website for an even better experience would be appreciated.

Thanks again,

Rolf Rolles, creator and moderator"	t5_2qmd0	True
1367919583.0	1duq7l	DEFCON 16: Advanced Software Armoring and Polymorphic Kung Fu	kamicc	40	8	1		t5_2qmd0	False
1366070440.0	1cfc2e	[x/electronics] Reverse engineering the iPod Nano 6 LCD interface (mikeselectricstuff)	kasbah	37	6	2		t5_2qmd0	False
1357585165.0	164t1n	Writeup of a ASLR/PIE/NX/stack cookie-bypassing remote exploit against Asterisk	rolfr	44	9	2		t5_2qmd0	False
1356497799.0	15gc0j	The C64 PLA Dissected [PDF]	rolfr	37	9	3		t5_2qmd0	False
1356454755.0	15fbsm	NVidia Display Driver Service (Nsvr) Exploit	idiamin_	39	8	2		t5_2qmd0	False
1352363613.0	12ukra	A Critical Analysis of Dropbox Software Security [PDF, slides]	rolfr	39	7	4		t5_2qmd0	False
1351622104.0	12cmvl	Virtual PC vs. CPUID	waliedassar	42	9	10		t5_2qmd0	False
1331137021.0	qlv53	The Mystery of the Duqu Framework - More information on Duqu's unknown implemetation language	pwnwaffe	41	11	7		t5_2qmd0	False
1328109965.0	p66wh	Online free computer security class teached by Berkeley and Standford university teachers. Starts this month.	ar1vr	44	9	6		t5_2qmd0	False
1327452251.0	ovabz	A crackme challenge for OS X	sheafification	41	9	0		t5_2qmd0	False
1322413441.0	mqyg2	28C3 conference schedule	igor_sk	36	5	1		t5_2qmd0	False
1321667194.0	mhmc4	"attrition.org's InfoSec Institute roundup 2: plagiarism by Jack Koziol (the president) of many sources such as Sotirov &amp; Dowd and Blunden's ""The Rootkit Arsenal"", plagiarism by InfoSec Institute attributed to unwitting contractors, plagiarism by instructors, and 11 Better Business Bureau complaints"	fl0rid	42	7	4		t5_2qmd0	False
1318217561.0	l6o7c	Real-time Hacking of a C64	tontoto	36	7	2		t5_2qmd0	False
1315264343.0	k5t4c	Syncing Zune w/o the proprietary software - reverse engineering the MTPZ protocol	KBHomes	38	9	5		t5_2qmd0	False
1310546091.0	io9x3	CVE-2011-1281: A story of a Windows CSRSS Privilege Escalation vulnerability	_pusher_	35	1	0		t5_2qmd0	False
1297254247.0	fhyzh	Is there a reliable DLL injection technique?	usualsuspect	35	7	10	"I'm currently trying to write some tool and I learned the hard way that there doesn't seem to be any reliable technique for DLL injection.

I thought CreateRemoteThread() works pretty much all the time, but it simply doesn't. The simplest test case is packing notepad with UPX and then trying to inject a DLL after calling CreateProcess(""notepad"",CREATE_SUSPENDED). You always end up with a zombie process, no matter what.

What I'm exactly trying to do is injecting a DLL in a hooked CreateProcess function. I know Detours offers CreateProcessWithDll, but I don't want to use Detours. For once, I hate the detoured.dll marker and I'm sure patching it out isn't trivial at all.

So I'm stuck with homemade solutions. Googling suggested using WaitForInputIdle() for GUI processes to make it work, but in the end even this didn't launch an UPXed notepad.

My current approach: CreateProcess(CREATE_SUSPENDED), retrieving the OEP, overwriting it with EB FE (infinite loop) so I can let the process run and let Windows do its thing with initialization. After a small timeout, I suspend the main thread, inject my DLL, restore the OEP and call ResumeThread. In theory this works, but for one reason or another, UPX-notepad wins again.

Any ideas?

Edit: I feel stupid, but I made a mistake and now that it's corrected, the EB FE injection technique actually works. I run the target suspended, find out the OEP, write EB FE and let it run. This enables Windows to do its initialization. A generous Sleep(1000) later, the process should be looping as fast as it can. I then inject a LoadLibrary into the running process, suspend the thread, restore the OEP, call FlushInstructionCase() on it so there are no cache-related errors and then I resume the thread, unless the caller requested a suspended thread. Seems to actually work as planned!"	t5_2qmd0	True
1296842389.0	ffbgp	Comparing Windows kernel data structures over time	moyix	34	5	2		t5_2qmd0	False
1295182626.0	f392n	Technical Analysis of the Windows Win32K.sys Keyboard Layout Stuxnet Exploit	sanitybit	33	2	0		t5_2qmd0	False
1290621034.0	eb7f3	UAC kernel bypass burned on CodeProject! 	s7ephen	40	6	7		t5_2qmd0	False
1290098091.0	e85w3	Intel 8080 CPU Emulator - written in Javascript		35	7	1		t5_2qmd0	False
1262629321.0	algth	"I have a small challenge for you guys, if you're up for 
it."	Poromenos	32	2	53	"EDIT: I have written a small script to bruteforce WPA keys for Thomson/SpeedTouch routers from their SSIDs, you can find it here if you want it:

[Script to derive the WPA key for a Thomson/SpeedTouch router from its SSID](http://www.korokithakis.net/node/107)

--------

So, I have a router that includes telephony using SIP. The router connects to my phone company and converts my normal phone to a SIP phone.

The thing is, my mobile phone supports SIP over wifi as well and I would like to use it as a cordless phone when I'm home, but the company won't give me the SIP password or the password to the router, even though I bought it, so I am trying to reverse-engineer it.

The router is a Thomson TG782 (a.k.a. SpeedTouch). It uses some sort of encryption to encrypt my password with the router's serial number. I guess I could reset the router, log in as admin, replace the config with the encrypted password and read the decrypted one on the web interface, but it is too much of a hassle and I would not have internet access or phone during that period. Can anyone help me with the decryption?

I tried getting the router to encrypt some strings just to test, and this is what I got (the table is crypttext: ""plaintext""):

    C45B052831543A08 ""5""
    C2A118E2B5C4B516 ""55""
    4240563093758E0A ""555""
    84A52E4E314D35B9 ""5555""
    CE74F5ABBD788355 ""55555""
    646CFB9FB705CCC1 ""555555""
    0AD7529A3F317E1A ""5555555""
    3ECBA425474E3AFC ""55555555""
    3ECBA425474E3AFCC45B052831543A08 ""555555555""
    3ECBA425474E3AFCC2A118E2B5C4B516 ""5555555555""

I know this isn't XOR, but it doesn't look like AES either... Any ideas?

**EDIT:** Well, I just had the bright idea to use the telnet interface (where I've been dumping the encrypted config from all these days) to set the dyndns hash to the SIP hash and just see it decrypted in the HTML. It worked, I have the password. Why didn't I think of this earlier? :/ It would be nice to have a general way to decrypt all Thomson routers' passwords given the serial, but I can't find anything about the encryption algorithm..."	t5_2qmd0	True
1244733565.0	8row0	New phrack	rolfr	32	2	0		t5_2qmd0	False
1368900026.0	1el4ok	Rendezvous: A Search Engine for Binary Code	_rc	37	6	0		t5_2qmd0	False
1365895588.0	1cao94	Reversing A Botnet 2 - Electric Boogaloo	Av3ragej0e	37	7	14		t5_2qmd0	False
1361582097.0	1920nh	Adventures in Linux: Reverse Engineering Firmware	zharguy	36	6	1		t5_2qmd0	False
1359513696.0	17jcc1	Swann Song - DVR Insecurity	igor_sk	36	5	2		t5_2qmd0	False
1357060619.0	15rz49	My talk on Analyzing Malware in Memory is now mirrored online (video + slides)	transt	33	2	3		t5_2qmd0	False
1356150547.0	159ler	Binwalk 0.5 Release	niko-r	33	2	1		t5_2qmd0	False
1354818884.0	14e97g	Dexter - A static android application analysis tool	andyac	39	6	2		t5_2qmd0	False
1352839992.0	13540w	Pwning Multiplayer Online Games	N3mes1s	35	8	8		t5_2qmd0	False
1345261858.0	yewdf	R4ndoms Sixteenth Reverse Engineering Tutorial, Part 3- Bruteforcing	RandomNetzley	45	16	1		t5_2qmd0	False
1321190736.0	maozr	Using setusermatherror to disguise code flow.	quitelikeme	37	7	4		t5_2qmd0	False
1320578990.0	m2b5q	Duqu:New method of injection	inreverse	38	7	1		t5_2qmd0	False
1314060248.0	jr5qh	AAA Game Studio Anti-Cheat Engineering 	jlawniczak	36	6	18	"We are getting ready to launch our game Firefall (www.firefallthegame.com) and it is getting a lot of press and excitement. In that capacity we need someone to help us build our anti-cheat platform. Someone dedicated to writing the client-side and server side portions of anti-cheat. Preferably a senior windows programmer. The client scans memory and protects files and reports violations to the server. The server tracks those violations, elevates them to customer support and is also responsible for verifying the integrity of the client application and auto-updating that on a regular basis. We need a low level windows programmer with a passion for games.
Anyone interested who has a strong interest in Games and tackling this effort? We offer a competitive salary, an amazing product development team and the opportunity for financial rewards with a profit sharing program too.

Thanks and I hope to hear from you soon.

/Jeff

Jeff Lawniczak 
Director of Talent Acquisition 
Jeff@red5Studios.com 

949 870-0171
"	t5_2qmd0	True
1309188542.0	iae7m	The ARM Instruction Set [PDF]		32	6	1		t5_2qmd0	False
1293494309.0	esa3q	Building a USB protocol analyzer	sanitybit	31	1	0		t5_2qmd0	False
1292715636.0	eo3i7	VM Detection by In-The-Wild Malware	NinjaYoda	38	7	3		t5_2qmd0	False
1292364917.0	elv3e	All Your Baseband Are Belong To Us - over-the-air exploitation of memory corruptions in GSM software stacks [slides]	ketti	34	4	0		t5_2qmd0	False
1288920329.0	e1h8e	"repost from /r/linux: get $2,000 bounty for Kinect for 
Xbox 360 open source drivers"	shazzner	32	2	4		t5_2qmd0	False
1373614592.0	1i52ly	C4Decompiler Alpha 0.7.1 - some progress	CarstenC4	35	8	7		t5_2qmd0	False
1367554521.0	1dlmhr	Bochspwn: Exploiting Kernel Race Conditions Found via Memory Access Patterns	rolfr	39	11	3		t5_2qmd0	False
1367505020.0	1djw07	A binary analysis, count me if you can	jonathansalwan	34	4	4		t5_2qmd0	False
1359238309.0	17c453	Injecting 64-Bit DLL Into 32-Bit Process	waliedassar	34	5	5		t5_2qmd0	False
1350153064.0	11f9nb	Derbycon 2012 videos	igor_sk	32	3	0		t5_2qmd0	False
1342114091.0	wg960	Dumping Polymorphic Malware from Memory	mauvehead	33	4	4		t5_2qmd0	False
1341287875.0	vyn1e	Video of my RECON 2012 Keynote: The Case for Semantics-Based Methods in Reverse Engineering	rolfr	32	3	1		t5_2qmd0	False
1338137107.0	u7f47	An introduction to OllyDBG- a tutorial by R4ndom	RandomNetzley	43	14	6		t5_2qmd0	False
1333591569.0	rtzb0	Disassembling in IDA	brianethan	36	7	14	"Does anyone know how does IDA differentiate between data and code in its disassembling? Also, what happens if the entry point is missing? How does it know where code starts?

Thanks in advance!
"	t5_2qmd0	True
1329269958.0	pq0x8	Whirlwind Tour of ARM Assembly	roflmaoff	32	3	0		t5_2qmd0	False
1325887237.0	o5yhw	Firmware bugs considered enraging	igor_sk	34	3	0		t5_2qmd0	False
1324982652.0	ns6ja	"The Ultimate Anti-Debugging Reference [PDF via Google Docs]
"	advanced_reddit_user	35	3	1		t5_2qmd0	False
1324570301.0	nmq3a	Simple Virtual machine implementation	praddo	36	5	4		t5_2qmd0	False
1320836409.0	m5zc7	Exploiting Embedded Systems Part 4	igor_sk	39	12	0		t5_2qmd0	False
1319636176.0	lpnv3	Exploiting Embedded Systems Part 1	igor_sk	39	10	8		t5_2qmd0	False
1313989191.0	jqalh	A few pointers on getting started in RE?	queensgetdamoney	35	6	26	"Disclaimer: This is more than likely going to be a throwaway account, but I will check back up on this :)

Now that's out of the way,
I was just curious as to where is the best place to start in the field of RE. I'm very keen when it comes to pulling things apart physically and enjoy tracking malware changes on systems I come across (I work in support :P). I have a somewhat limited grasp on RE (I've gone through a few of Lena151's tutorials before) and am rather keen to pursue this as a hobby and even potentially career wise in the future. 
Any suggestions?
Cheers!"	t5_2qmd0	True
1308543215.0	i41p2	Job: Kaspersky Labs - Anti-Malware Researcher		37	7	2	"** Note ** I am not the recruiter. I'm posting this on behalf of someone who contacted me. Just trying to help out. 

* Details:
The Anti-Malware Researcher will conduct day to day research under the supervision of the Senior Anti-Malware Researchers to support the overall global research plan, and also support the Anti-Malware Research Team in their research initiatives and speaking engagements.

* Responsibilities:
Analyze malware and/or spam and/or phishing or any other malicious content under the supervision of the Senior Researcher and in conjunction with HQ initiatives.
Create generic behavior based malware detections in order to increasing the efficiency of the product line.
Manage regional research technical resources – servers, databases, and ensure that all collected data is available for sharing with HQ.
Maintain honeypots, web crawlers and all other data-collecting software as required by the Senior Anti-Malware Researchers and\or HQ.
Create content for Regional and Global purposes working with the Regional Content Editor.
     
* Qualifications:
We are looking for an intermediate level malware researcher with basic reverse engineering skills, who is looking for an opportunity to grow in a rapidly evolving company. The ideal candidate should have a passion for continual self improvement through continual acquisition of technical skills. A background in security is a plus, but applicable hobbyist experience is acceptable.
Experience in the IT security world.
Cursory knowledge of malware and things related to malware research and analysis.
Programming skills especially including C/C++ and Assembly language.
Good to fluent English.

* Education 
A bachelor’s degree in computer science or equivalent field is desired, but each candidate will be reviewed on their own merits and qualifying experience.

* Location: Bellevue Washington

Contact:
Sasha Yershov | Senior Recruiter | Kaspersky Lab, Direct: 781 503 
2674 | sasha.yershov@kaspersky.com
Cell 508 259 5552  Skype  sasha.yershov3 Fax: 877 396 9954
500 Unicorn Park Drive, Woburn, MA 01801 USA | www.kaspersky.com

 "	t5_2qmd0	True
1308235310.0	i18yb	Insecticides don't kill bugs, Patch Tuesdays do	polsab	35	7	0		t5_2qmd0	False
1306830053.0	ho3de	"Internals of Windows Memory Management
(not only) for Malware Analysis"	cwillems	31	1	1		t5_2qmd0	False
1303752898.0	gx3to	SWFREtools - SWF file reverse engineering tools		33	3	2		t5_2qmd0	False
1302524966.0	gnchi	OllyDbg 2.01 alpha 3 rlsed!	newgre	33	4	1		t5_2qmd0	False
1298667185.0	fsseo	Job openings for reverse engineers (ninjas only, please)	katiechante	47	15	68	"Hi Reddit :)

If you **like** coding in languages like assembly and C, we want to talk to you.  If you enjoy figuring out how things like your Operating System are working, on an intimate level, you are the kind of person we want.  If you like patching closed-source binaries, playing with binary protection schemes, or unpacking malware, you should contact me.

Or if you want something *challenging*, we've got *challenging* too.

If you're looking for a new job in kernel programming, static/dynamic reverse engineering or applied security research, **this is more important than your pedigree**. 

If you want marketing cheese about our competitive salaries, giant ping pong table, happy hours; email me, I've got that.

And here's some of the job, again, but in bullet-form:

* Triage and analyze binary code to determine its functionality and purpose

* Perform dynamic and static analysis of malicious binaries to determine its characteristics

* Learn new platforms, file formats and protocols as necessary

* Automate the analysis of malicious code

* Develop new malicious code analysis and detection tools.

But really, you should just skip all else and email me something interesting at katiechante@gmail.com

Common /r/ReverseEngineering, you know you want to."	t5_2qmd0	True
1298306878.0	fpmuc	Windows Internals Lectures	gljiva	33	4	6		t5_2qmd0	False
1296502226.0	fck63	The Honeypot Incident – How strong is your UF (Reversing FU)		30	1	4		t5_2qmd0	False
1291132378.0	edy0w	"IDA Pro 6.0 demo: Win32, Linux, OS X versions 
available"	igor_sk	40	8	21		t5_2qmd0	False
1283350065.0	d8743	Analysis of the PSJailbreak Exploit - Documentation from the development of the opensource PSGroove exploit.	phire	35	5	0		t5_2qmd0	False
1283189284.0	d7b5g	Homebrew Cray-1a		32	3	0		t5_2qmd0	False
1269901181.0	bjw64	George Hotz responds to Sony removing PS3 Linux support in a firmware update	ethicszen	39	7	3		t5_2qmd0	False
1268233238.0	bbmm1	"Preview of the new cross-platform IDA Pro GUI 
(using Qt)"	wtbw	32	3	4		t5_2qmd0	False
1259125845.0	a7xcw	X86/Win32 Reverse Engineering Cheat Sheet [pdf]		30	3	8		t5_2qmd0	False
1249944310.0	99djq	A Fistful of Red-Pills: How to Automatically Generate Procedures to Detect CPU Emulators [PDF]	cloudburst	31	2	0		t5_2qmd0	False
1221140888.0	70w0v	This sub-reddit needs an upside-down and backwards reddit alien icon!	Wriiight	38	8	20		t5_2qmd0	True
1370212381.0	1fjlak	OST Reverse Engineering Malware videos posted &amp; materials updated	OpenSecurityTraining	35	8	2		t5_2qmd0	False
1369061684.0	1ep2ur	Reverse Engineering a Mass Transit Ticketing System - TrainHack (Ruxcon2012) [Video]	perror	32	3	5		t5_2qmd0	False
1368658849.0	1eexvs	Recon 2013 Talks selection	hugo_fortier	32	4	8	"We have finalized the talk selection for Recon 2013(http://recon.cx):

- Apple iCloud services reversed inside out by Andrey Malyshev
- The Future of RE: Dynamic Binary Visualization by Christopher Domas
- Hybrid Code Analysis: Overcoming Weaknesses of Dynamic Analysis in Malware Forensics by Stefan Buehlmann and Jan Miller
- Taint Nobody Got Time for Crash Analysis by Richard Johnson and pa_kt
- Haow do I sandbox?!?! - Cuckoo Sandbox Internals by Jurriaan Bremer 
- New ways to manage secret for software protection by David Baptiste 
- Just keep trying ! Unorthodox ways to hack an old-school hardware by Bacura
- XNU Spelunking or Fuzzing the kernel inside your kernel by Jesse D'Aguanno 
- Inside EMET 4.0 by Elias Bachaalany
- OpenGarages: Vehicle Research Labs by Craig Smith (30 Minutes) 
- Hot-Wiring of the Future:! Exploring Car CAN Buses! by Grayson Zulauf, Christopher Hoder Theodore Sumers and Daniel Bilar (30 Minutes) 
- Wardriving from your pocket: Using Wireshark to Reverse Engineer Broadcom WiFi chipsets by Omri Ildis and Ruby Feinstein
- Hiding @ Depth by Josh Thomas (30 Minutes) 
- Reversing P25 Radio Scanners by Gabriel Tremblay (30 Minutes) 
- Hardware reverse engineering tools : new threats and opportunities by Olivier Thomas
- Teridian SoC Exploitation: Exploration of harvard architecture smart grid systems by Josh Thomas and Nathan Keltner
- Reversing HLR, HSS and SPR: rooting the heart of the Network and Mobile cores from Huawei to Ericsson by Philippe Langlois
- Reversing and Auditing Android's Proprietary Bits by Joshua J. Drake 
- In-depth Reverse Engineering of HackingTeam's Remote Control System by by Nicolas Brulez and Marta Janus 
- I got 99 problems but a kernel pointer ain't one by Alex Ionescu  
- Keep your tentacles off my bus, introducing Die Datenkrake by Dmitry Nedospasov and Thorsten Schroder  
- Reconstructing Gapz: Position-Independent Code Analysis Problem by Aleksandr Matrosov and Eugene Rodionov  
- Many More Tamagotchis Were Harmed in the Making of this Presentation by Natalie Silvanovich
"	t5_2qmd0	True
1367422359.0	1dhhx4	Avatar Rootkit Analysis by ESET	nullandnull	33	6	2		t5_2qmd0	False
1365598262.0	1c25ga	Disassembling, Decompiling and Modifying executables [x-post from /r/programming]	ffffdddddssss	36	6	2		t5_2qmd0	False
1361687846.0	194fci	"""Binary Analysis"" Isn't"	rolfr	35	6	10		t5_2qmd0	False
1353900245.0	13skhn	Python arsenal for RE	igor_sk	35	7	1		t5_2qmd0	False
1352132705.0	12o87i	Sophail: Applied attacks against Sophos Antivirus [PDF]	rolfr	38	9	3		t5_2qmd0	False
1348169595.0	107hp7	The source code for ROPC, a return-oriented-programming compiler (based upon CMU's BAP)	rolfr	36	6	5		t5_2qmd0	False
1347154390.0	zkzae	Help parsing raw binary data from magnetic credit card strip?	IanCormac	36	8	16	"I recently got one of those nifty Square credit card readers for iPhone (they're free) that allow you to use your iDevice as a credit card point of sale device. What's great is that these devices are super simple; just a coil and a resistor that go to the iPhone's microphone line. The movement of the credit card induces a current in the coil, which gets picked up by the iPhone.

Now, my Macbook uses the same microphone setup, so I was able to record the credit card swipe onto my computer. Looking at the waveform, it's easy to see the binary data. I wrote some sweet code that automatically detects the ""bitrate"" (which can change depending on swipe speed) and converts the audio data to binary, as well as some other nifty stuff. As far as I can tell, my code works very well. The results correspond with what I see in audacity. There is only minimal error in between swipes (which would probably be fixed by error checking algorithms in a real reader, or maybe more complex sampling algorithms)

Even when I swipe different cards and do a visual diff of the results, I can see that there are big sections of data that look exactly the same.

What I noticed was that the similarities in the data from different cards occur in multiples of 7 bits. This leads me to believe that I am reading track 1 of the card, which uses the DEC SIXBIT + odd parity format. However, the 7-bit samples I'm picking up don't seem to be of a consistent parity; some are even, some are odd. Track 1 is supposed to be odd parity. I tried shifting all 7-bit values by 1-6 bits (in case I dropped some bits somewhere), but this still didn't make it proper parity.

I also tried searching for individual letters (from my name), but I could not find some of them, and none of them in order. Again, I also tried shifting all 7-bit values. Also tried flipping byte order, polarity, etc. but with no success.

So, TL;DR

**I think I'm getting accurate binary data from a credit card, but it doesn't seem to match up to what wikipedia says should be there.**

Anyone have any advice or experience?

Also, I'm not trying to be a credit card skimmer or anything; If I wanted to, I already have working card reader equipment. This is just an attempt to make a very cheap POS platform on a normal computer or a raspberry pi or something.

**EDIT: Looks like the square readers might have recently been given built-in encryption hardware. Thanks for the tip torvold. I will take a look into that.**
It looks like there is some juicy microcontroller business going on in the Square readers now, which explains why my received data is not at all what I expected. 

The encryption being used doesn't seem to be very strong (extremely low or no cascade effect, very small sub-byte repetition, and low entropy of approx. 5.5 bits per byte). This is turning out more interesting than I thought. 

**EDIT 2/3: I am making some good headway with the audio port protocol. I've figured out the encoding scheme, and have figured out how to get good old 8-bit byte data from it. I have some theories to test, but it does look like the credit card data is encrypted, with what may be a randomly generated password. Every time I swipe the card there are a few small sections of data and one big section of data that is different. There are also a few sections that stay the same for any given card, so I know I'm reading it correctly. Anyway, it looks like some card details are sent cleartext, some encrypted. Figuring out the encryption is on the todo list.**"	t5_2qmd0	True
1343957023.0	xlhiv	Linux Nvidia driver privilege escalation PoC: 	virvdova	35	7	8		t5_2qmd0	False
1343766325.0	xgufd	Using SAT and SMT to defeat simple hashing algorithms	rolfr	34	7	11		t5_2qmd0	False
1341664746.0	w6ch1	Automated Generic Function Naming in IDA	nullandnull	33	4	1		t5_2qmd0	False
1339265927.0	utfum	IDA Toolbag v1.0 released	advanced_reddit_user	36	8	4		t5_2qmd0	False
1332926646.0	rhbu9	The Ultimate Anti-Debugging Reference, by Peter Ferrie (always links to the most up to date version)	QvasiModo	34	8	0		t5_2qmd0	False
1322499042.0	ms4yp	IAmA request: F-Secure employee attempting to download bitcoin wallets	FellowsOfData	49	21	20	"193.110.109.30 - - [09/Nov/2011:07:17:54 +0200] ""GET /wallet.dat HTTP/1.0"" 404 410 ""-"" ""Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.106 Safari/535.2"""	t5_2qmd0	True
1319444492.0	lmxfe	DECAC - a high level assembly language	wishi	39	7	5		t5_2qmd0	False
1317826238.0	l1qyn	"Windows SuperFetch file format - partial 
specification"	emulb	32	5	0		t5_2qmd0	False
1316744383.0	kom0a	Modifying the DD-WRT GUI	crudd	33	3	4		t5_2qmd0	False
1311629110.0	izjqj	IDA Pro Shortcuts [PDF]		30	3	2		t5_2qmd0	False
1310592930.0	iotmi	Hacking Vodafone Sure Signal (UMTS Femto cell)	wtbw	30	2	13		t5_2qmd0	False
1306028337.0	hh17t	Let's have fun with EICAR test file	5d41402abc4b2a76b971	33	5	5		t5_2qmd0	False
1305838986.0	hfcpd	Anti-Debugging - A Developers View	sanitybit	37	9	3		t5_2qmd0	False
1301845714.0	ghod4	27c3 Videos mirror - schedule here -&gt; http://bit.ly/gIQOWL	digduggg	33	3	1		t5_2qmd0	False
1294702993.0	ezuul	Four job openings for malware analysis at Microsoft	infosec_jobs	33	5	4	"If you are interested in applying your reverse engineer skills to malware analysis, there are 4 openings in the Microsoft antivirus research and response team. Locations are in Vancouver, Canada and Redmond, USA. If you are too lazy to click the URLs, send your questions/cv to bda@microsoft.com (even though he does not work on the antivirus team).

Vancouver, CA

https://careers.microsoft.com/JobDetails.aspx?ss=&amp;pg=0&amp;so=&amp;rw=1&amp;jid=33176&amp;jlang=EN
https://careers.microsoft.com/JobDetails.aspx?ss=&amp;pg=0&amp;so=&amp;rw=1&amp;jid=33180&amp;jlang=EN

Redmond, USA

https://careers.microsoft.com/JobDetails.aspx?ss=&amp;pg=0&amp;so=&amp;rw=1&amp;jid=33188&amp;jlang=EN
https://careers.microsoft.com/JobDetails.aspx?ss=&amp;pg=0&amp;so=&amp;rw=1&amp;jid=33187&amp;jlang=EN"	t5_2qmd0	True
1289582228.0	e57mg	Super secret AMD debugging mode slashdotts Woodmann :) [try harder]	wishi	35	5	3		t5_2qmd0	False
1255872734.0	9v857	Conficker C P2P Protocol and Implementation	wtbw	32	2	0		t5_2qmd0	False
1252561092.0	9j2ft	Over in /r/TreasureMaster, we've got a cool (at least I think so) reverse engineering project going on. We would definitely appreciate any help /r/ReverseEngineering wanted to send our way.	raldi	32	5	3		t5_2qmd0	False
1244057697.0	8pjqr	How I Hacked Hacker News	rolfr	34	7	0		t5_2qmd0	False
1241089090.0	8gpvi	Malware able to infect only right handed people	cavedave	33	3	1		t5_2qmd0	False
1240180388.0	8dqm4	So You Want To Be a Hacker? Part IV: Compression Formats	rolfr	29	1	2		t5_2qmd0	False
1374612535.0	1iwr0b	VUPEN Vulnerability Research Blog - Advanced Exploitation of Windows Kernel Privilege Escalation (CVE-2013-3660 / MS13-053)	rolfr	33	8	1		t5_2qmd0	False
1374581801.0	1ivoil	Practical Reverse Engineering: Using x86, x64, ARM, Windows Kernel, and Reversing Tools (pre-order, not yet published)	pwnwaffe	32	5	10		t5_2qmd0	False
1373412126.0	1hywvr	/r/ReverseEngineering's Q3 2013 Hiring Thread	rolfr	35	9	19	"If there are open positions involving reverse engineering at your place of employment, please post them here. The user base is an inquisitive lot, so please only post if you are willing to answer non-trivial questions about the position(s). Failure to provide the details in the following format and/or answer questions will result in the post's removal.

Please elucidate along the following lines:

* Describe the position as thoroughly as possible.
* Where is the position located? Is telecommuting permissible? Does the company provide relocation? Is it mandatory that the applicant be a citizen of the country in which the position is located?
* If applicable, what is the education / certification requirement?
* Is a security clearance required? If so, at what level?
* How should candidates apply for the position?

Readers are encouraged to ask clarifying questions. However, please keep the signal-to-noise ratio high and do not blather. Please use moderator mail for feedback.

If you use twitter, retweeting [this](https://twitter.com/RolfRolles/status/354743367126626305) couldn't hurt."	t5_2qmd0	True
1372753627.0	1hhi7b	Breaking a Toy Hash Function	rolfr	30	3	0		t5_2qmd0	False
1372432049.0	1h92ck	WoW64 internals: Tale of GetSystemFileCacheSize	emulb	31	4	0		t5_2qmd0	False
1363869186.0	1aq8j8	Analysis of a Windows Kernel Vulnerability: From Espionage to Criminal Use [PDF]	nullandnull	36	11	5		t5_2qmd0	False
1362412181.0	19n4ul	/r/rootkit - A new subreddit for technical discussion about rootkit research and development	stormehh	37	12	0		t5_2qmd0	False
1362326483.0	19kvyv	The 8085's register file	kasbah	32	4	0		t5_2qmd0	False
1355843719.0	151y9j	"Felix ""FX"" Lindner: Targeted Industrial Control System Attacks - Lessons from Stuxnet  (video)"	samcrem	37	10	0		t5_2qmd0	False
1354788283.0	14dlpv	Reverse Engineering Evernote Penultimate (or: When is a picture not a picture?)	polar	34	7	3		t5_2qmd0	False
1353945389.0	13te5f	/r/vrd/: Vulnerability Research and Development - A new moderated subreddit for high quality resources on technical topics related to bugs, vulnerabilities, and exploits in computer systems.	HockeyInJune	44	14	0		t5_2qmd0	False
1351997106.0	12lfpq	Defeating Windows Driver Signature Enforcement #1: default drivers	rolfr	37	10	0		t5_2qmd0	False
1351405453.0	127khf	Introducing the USB Stick of Death | j00ru//vx tech blog	rolfr	40	12	2		t5_2qmd0	False
1351362897.0	126l0p	Cross-VM timing attacks	igor_sk	33	5	0		t5_2qmd0	False
1345933064.0	ytq8y	W32.Changeup: How the Worm Was Created [PDF]	gljiva	30	2	0		t5_2qmd0	False
1345781009.0	yqizg	Python arsenal for reverse engineering [PDF]	rolfr	37	10	2		t5_2qmd0	False
1345458163.0	yimgq	Locating binary modifications using vimdiff	defragger	34	8	7		t5_2qmd0	False
1332795466.0	rerci	How do I go about unwinding an encrypted network protocol?	borick	34	7	12		t5_2qmd0	True
1324451538.0	nl08t	"""This resulted in perhaps our most critical discovery, remote ring0 code execution when a user visits a hostile website"" [2009]"	yuhong	33	5	0		t5_2qmd0	False
1320666043.0	m3f45	What is the state of the art in decompilers?	ReturningTarzan	31	5	28	I'm thinking especially of decompilers for Win32 executables, e.g. projects like [Boomerang](http://boomerang.sourceforge.net/), although that particular one seems to have died in 2006.	t5_2qmd0	True
1317241229.0	kugb0	Program Analysis and Optimizations	digduggg	31	4	4		t5_2qmd0	False
1308847120.0	i7a60	peepdf - PDF analysis and creation/modification tool		31	4	2		t5_2qmd0	False
1307899827.0	hxv4m	Crackmes.de mirror	tinou	32	4	10		t5_2qmd0	False
1305128985.0	h9079	BinVis - Binary File Visualization	quitelikeme	31	4	7		t5_2qmd0	False
1303855491.0	gy46j	pefile is a multi-platform Python module to read and work with Portable Executable (aka PE) files. Most of the information in the PE Header is accessible, as well as all the sections, section's information and data. 	mauvehead	33	6	11		t5_2qmd0	False
1303509176.0	gv8un	A Refined Decompiler to Generate C Code with High Readability [PDF]	rolfr	29	3	7		t5_2qmd0	False
1299469134.0	fyrh3	An Anti-Reverse Engineering Guide (2008)	FourFingeredMartian	30	3	9		t5_2qmd0	False
1285275774.0	di0s1	Stuxnet under the microscope :: PDF	psed	31	4	1		t5_2qmd0	False
1283030564.0	d6o4v	PSJailbreak Reverse Engineered	wtbw	32	5	6		t5_2qmd0	False
1271701465.0	bt7mz	Annotated x86 Disassembly		29	3	1		t5_2qmd0	False
1374451990.0	1is2we	Automated Deobfuscation of Android Applications by Jurriaan Bremer [PDF]	turnersr	32	7	6		t5_2qmd0	False
1373389428.0	1hy184	An Intro to Crypto Programming using Python	1107d7	36	13	0		t5_2qmd0	False
1372493352.0	1havtf	Recon 2013 slides	simpleuser	29	1	2		t5_2qmd0	False
1371545240.0	1gkoy5	Cisco in the Sky with Diamonds [PDF]	rolfr	27	1	3		t5_2qmd0	False
1369235595.0	1eu668	Building Custom Disassemblers - Instruction Set Reverse Engineering - [PDF]	nullandnull	32	4	1		t5_2qmd0	False
1367722527.0	1dpovu	64 bit debuggers for windows. Where they at?	Av3ragej0e	34	8	16	Other than windbg and VisualDux (which works, but is kinda buggy) what are some decent 64 bit debuggers for windows? I've been holding my breath for olly / immunity for years, but no dice.	t5_2qmd0	True
1365732400.0	1c6gz1	"Opensourcing ""Symbolic Exploit Assistant"" (SEA) and asking for collaboration"	galapag0	30	2	18		t5_2qmd0	False
1354390227.0	1444od	I just came across this obfuscated JavaScript malware	skeeto	38	13	7		t5_2qmd0	False
1349281665.0	10vr0c	DeCV — a decompiler for Code Virtualizer by Oreans « GDTR	Most_Likely_Drunk	31	7	1		t5_2qmd0	False
1348297876.0	10afln	A closer look at crankshaft, v8's optimizing compiler	rolfr	29	2	0		t5_2qmd0	False
1348080204.0	105ddm	Bypassing Intel SMEP on Windows 8 x64 Using Return-oriented Programming	rolfr	30	5	0		t5_2qmd0	False
1343315898.0	x6y7j	Solving gim913′s KeygenMe#01	emulb	28	1	0		t5_2qmd0	False
1341053863.0	vu61s	Analysis of a recent Facebook malware	ienvyparanoids	35	7	0		t5_2qmd0	False
1337818719.0	u1wli	Analyzing Binaries with Hopper’s Decompiler	sanitybit	34	8	1		t5_2qmd0	False
1328970734.0	pkrmh	Reversing Satellite Phones Firmware	cwillems	34	9	1		t5_2qmd0	False
1327751293.0	p0ev6	Windows Memory Layout Cheet Sheet - User and Kernel Spaces	wishi	32	4	1		t5_2qmd0	False
1319983934.0	lu2z2	OS X backdoor Olyx Reversing	RobinVP	30	3	3		t5_2qmd0	False
1315425276.0	k7xsx	Stack frame layout on x86-64	5d41402abc4b2a76b971	29	2	0		t5_2qmd0	False
1312546523.0	j9sg7	"Sophail: A Critical Analysis of Sophos Antivirus [PDF]
"	dimonio	35	9	41		t5_2qmd0	False
1310752269.0	iqllo	Radare2-0.8 Released :: The Open-Source Reverse Engineering Framework	vext01	32	7	1		t5_2qmd0	False
1303342670.0	guw1o	Hex-Rays is hiring	rolfr	29	1	1		t5_2qmd0	False
1295609730.0	f6f5s	How do I get started in vulnerability research?	quitelikeme	29	2	17	"I'd really like to get started in vuln research as I'd love to write my own first exploits. My problem is, there don't seem to be too much papers/articles that help you get started.

Don't get me wrong, there are of course lots and lots of papers/articles that explain how buffer overflows work, how format string vulns work, how to bypass ASLR or maybe DEP etc. The thing is, these are technical details and I've probably read 400 papers on how to overwrite the return address in the numerous exploitation papers/tutorials but this is not what I'm interested in. I've done reverse engineering and understand how BO and the rest of the usual suspects work, but I don't know how to do anything with my knowledge.

Is there anything that might go into detail regarding the actual workflow? I've read others sometimes grep sources for something, or maybe people actually read the whole source, or do people stumble upon most of the vulns by accident? Is there something that might kickstart my own research, maybe some paper/video of another beginner that explains how he found an actual vulnerablity (maybe wrote a fuzzer)?

My try at an analogy: It seems like everyone is teaching me how to build a motorcycle, yet no one thinks about telling me how to race one, but in the end, this is what matters and I'm having a hard time applying all the theoretical things I know.

Maybe someone has some links to hook me up, much appreciated!

Edit: What triggered the post was the recent article about beginner exploitation of MiniShare in this subbredit. It's typical, I'm told ""Go grab MiniShare X.XX"", it's vulnerable, see advisory ABC, now send it some bug input, overwrite stack, done. First exploit, yay..."	t5_2qmd0	True
1292431559.0	emakt	A Bluescreen By Any Other Color - Mark Russinovich 		31	6	2		t5_2qmd0	False
1291730303.0	ehndt	Knitting machine hacked to print video game screens.	s7ephen	30	5	1		t5_2qmd0	False
1271874335.0	bu8g6	Now it's official: SKIDROW released a cracked Assassin's Creed 2 (uses the new UbiSoft DRM)	quitelikeme	28	2	4		t5_2qmd0	False
1270578543.0	bn90t	Ksplice - Hello from a libc-free world! (Part 2)	__y	29	3	0		t5_2qmd0	False
1252428587.0	9ihrp	Software Cracking Primer using Ollydbg and a Crackme &lt;--- Video. Nice tute!	l33t-hax0r	33	8	0		t5_2qmd0	False
1250889361.0	9cxm6	Mistakes Microsoft Made in the Xbox Security System	rolfr	32	5	8		t5_2qmd0	False
1244635668.0	8rbu6	Chip Reverse Engineering (25th Chaos Communication Congress)	l33t-hax0r	27	3	1		t5_2qmd0	False
1375742494.0	1jrsk9	Trying to pair a male 30 pin to a female USB. Need some help. Picture explains.	Kwarter	39	15	22		t5_2qmd0	False
1375203343.0	1jcwzu	PE102 - a Windows executable format overview (as poster and booklet)	simpleuser	33	8	3		t5_2qmd0	False
1372314838.0	1h5x8e	Voltron - a hacky UI for GDB	phoenix89	30	5	1		t5_2qmd0	False
1371122174.0	1g9f53	Automatically Generate Puppet Manifests for any Machine	tbronchain	29	5	2		t5_2qmd0	False
1369778243.0	1f86qb	Hacking Java Bytecode for Programmers (Part3)	1107d7	37	9	18		t5_2qmd0	False
1368542489.0	1ebdza	basic null pointer linux kernel exploitation	blahfish	34	9	9	"I was reading a presentation on [kernel null pointer dereferences][1] and I was trying out the exercise bug1.c. I had to manually set my `vm.mmap_min_addr` to 0 using `sysctl vm.mmap_min_addr=0` and I tried to figure out kernel symbol information using root privileges.

    $ sudo grep prepare_kernel /proc/kallsyms
    c10761f0 T prepare_kernel_cred

    $ sudo grep commit_creds /proc/kallsyms
    c1075f80 T commit_creds

Now I have a couple of questions at this point: -

 1. `rasm2 -a x86 ""call 0xc10761f0""` gives me ""e8eb6107c1"". Why is it not ""e8f06107c1""? The case is similar with the address for commit_creds.
 2. When I wrote the exploit I noted that using ""e8eb6107c1"" always ended up jumping to ""prepare_kernel_cred+5"", on inspecting /var/log/syslog. I adjusted it to ""e8e96107c1"" and it suddenly works! Here I have a couple of doubts, why am I having to adjust the address of `prepare_kernel_cred`? Also, why is it that I dont have to adjust the address of `commit_creds`

I considered asking this at SO but then couldnt find an 'exploit' tag, so thought I'd post here.

  [1]: http://ugcs.net/~keegan/talks/kernel-exploit/talk.pdf"	t5_2qmd0	True
1367016484.0	1d6n5w	Beth Scott's Temporal Hex Dump		29	3	3		t5_2qmd0	False
1360690296.0	18dxxz	Solving |sas0|’s “The Game” crackme (.NET)	emulb	35	9	2		t5_2qmd0	False
1357828633.0	16bc9t	BinSlayer: Fast comparison of binary executables	samcrem	33	7	12		t5_2qmd0	False
1353268371.0	13es6w	VirtualBox CPUID Discrepancy	waliedassar	33	9	2		t5_2qmd0	False
1350152926.0	11f9jo	Hack in the Box 2012 Kuala Lumpur presentations	igor_sk	28	2	5		t5_2qmd0	False
1349115369.0	10rsit	/r/ReverseEngineering's Q4 2012 Hiring Thread	rolfr	32	6	13	"If there are open positions involving reverse engineering at your place of employment, please post them here.  The user base is an inquisitive lot, so please only post if you are willing to answer non-trivial questions about the position(s).  Failure to provide the details in the following format and/or answer questions will result in the post's removal.

Please elucidate along the following lines:

* Describe the position as thoroughly as possible.
* Where is the position located?  Is telecommuting permissible?  Does the company provide relocation?  Is it mandatory that the applicant be a citizen of the country in which the position is located?
* If applicable, what is the education / certification requirement?
* Is a security clearance required?  If so, at what level?
* How should candidates apply for the position?

Readers are encouraged to ask clarifying questions.  However, please keep the signal-to-noise ratio high and do not blather.  Please use moderator mail for feedback.

If you use twitter, retweeting [this](https://twitter.com/RolfRolles/status/252834513388974081) couldn't hurt."	t5_2qmd0	True
1347892665.0	100uy2	IE execCommand fuction Use after free Vulnerability 0day Analysis	cbolat	30	5	0		t5_2qmd0	False
1345480535.0	yj2sg	Ripping OAuth tokens (or other secrets) out of TweetDeck, Twitter.app, and other apps	pdq	30	5	0		t5_2qmd0	False
1341368856.0	w0frc	RFID Hack Project: Bus Ticket System	andrepcg	32	7	39	"Me and my friend are computer science students and we decided to work on a exciting project. We live in Portugal and our town has it's own bus system and they use RFID for the tickets (magnetic tickets were replaced recently).

Our plan is to understand how this system works, what information is stored on each card and how can we hack it for learning purposes.

Right now we're at information gathering stage and we need to learn everything we can before we jump right into it.

**Information about the tickets**

- Rechargeable (if we need more rides they recharge the ticket, we always keep the same one) -&gt; Read/Write?

**What we want**

- Read and decrypt the information (all the ticket content, not just the TAG or what it might be)
- Modify the information on the ticket (add more trips, valuable information the ticket might contain)
- Clone a ticket

**What we need to know**

- How can we detect the ticket frequency?
- How to know the tag (Mifare, ISO 14443, etc..) prior to buying the reader/writer?
- Ignoring the frequency, using a reader can we extract all the content from the ticket with no efforts? (talking about password, encryption, etc...)
- After we got the frequency, is it easier/cheaper to buy a RDIF read/writer or to build an arduino one?

Hope you guys can give me some information, I've already started looking around a lot of websites and I'm doing the best research I can before starting this. Thank you!


**PICS! (behind light)**

http://i.imgur.com/OnR5j.jpg

http://i.imgur.com/pGIQ4.jpg

As you can see, they're pretty flexible, it's just a piece of paper


------------------------------ **EDIT** ------------------------------

Good news everyone! So we found out that my town's bus system publishes a monthly magazine and in one of them they explain how the system works!

**Protocol:** ISO 14443B

**Frequency:** 13.56MHz

Tag: It might be Calypso............ :(

They have two types of tickets: a personal ticket, which has the name and photo of the person (for regular passengers) and a paper one (the one in the photo) for occasional passengers. Both have the same chip (and antenna) where **client data and transportation contracts are stored.**

**Under the Hood**

* PoS: There are stores across the city where we can acquire and recharge the tickets.

* Inside the bus: there's also a PoS working the same way as the stores. The on board ticketing system connects with the geo location system to acquire data about all the tickets inside that specific bus. The information acquired on board is automatically collected, over WiFi, in the central garage where the buses are stored (possibly at the end of the day) and that information is sent to the central system where all the data is processed (financial, operational, statistics...). Using the same communication method, information about rates, users etc.. is sent to the on-board system.

* Central System: system with high availability (24x7). The database contains all the necessary information for operational, accounting and statistic management. All the data corresponding to the transactions created from all across the ticketing network, are stored in the database where all the information can be analyzed with different purposes like client management, auditing, maintenance management, complaint management and fraud management. "	t5_2qmd0	True
1338442079.0	udfys	The Design of LLVM	rolfr	25	0	1		t5_2qmd0	False
1334980813.0	skul4	Malware Images	laks316	32	8	8		t5_2qmd0	False
1323478830.0	n6x7n	.NET deobfuscator - de4dot	de4dot	30	4	6	"This is a .NET deobfuscator. See https://github.com/0xd4d/de4dot

It supports the following .NET obfuscators:

* CliSecure
* Crypto Obfuscator
* Dotfuscator
* .NET Reactor
* Eazfuscator.NET
* SmartAssembly
* Xenocode

It has partial support for other obfuscators, but the result might not be runnable.

Depending on obfuscator, it will do one or more of the following:

* Rename obfuscated symbols
* Deobfuscate control flow
* Decrypt strings
* Decrypt and dump embedded assemblies
* Decrypt resources
* Decrypt methods
* Fix proxy calls
* Inline methods
* Remove error reporting code (added exception handlers)
* Restore field and method arg types
* Get rid of added obfuscator classes and methods"	t5_2qmd0	True
1317101684.0	ksnqd	Hyperelliptic curve crypto — Dcoder's keygenme #2	3157644382	30	5	2		t5_2qmd0	False
1317031413.0	krp0y	Defeating x64: Modern Trends of Kernel-Mode Rootkits	newgre	29	3	0		t5_2qmd0	False
1315496596.0	k8wts	Mebromi, a bios-flashing trojan | Norman Blogs	wishi	30	4	6		t5_2qmd0	False
1313916644.0	jpj6f	Tools for Firmware Reversing	sanitybit	30	5	2		t5_2qmd0	False
1308424891.0	i33e9	Cross-post from /r/gaming - Blizzard looking for anti-cheat engineer	quitelikeme	29	4	10		t5_2qmd0	False
1302866112.0	gqnw2	Shmoocon 2011 Crypto Pack Solved! And Pairings And SAGE!	falso	28	2	0		t5_2qmd0	False
1291130867.0	edxma	Flaws in Canon image verification system	dimonio	28	2	2		t5_2qmd0	False
1290573999.0	eaxhq	NIC firmware rootkit. Uploaded from userspace. Has DMA and talks to the network.	s7ephen	28	1	2		t5_2qmd0	False
1290276162.0	e9681	How to Get Started With Malware Analysis	jaymill	27	2	1		t5_2qmd0	False
1289498261.0	e4otw	WinAPIOverride32 : Free Advanced API Monitor, spy or override API or exe internal functions		25	0	3		t5_2qmd0	False
1279569934.0	crc8u	pescrambler - open sourced - Google Code		26	1	4		t5_2qmd0	False
1276077388.0	cd2o7	Analysis of a Zero-day Exploit for Adobe Flash and Reader	cli3nt	26	2	2		t5_2qmd0	False
1274167380.0	c5gh0	Ten years of innovation in reverse engineering	pengor	33	7	1		t5_2qmd0	False
1270740867.0	bo79r	Penetration Testing: Learn Assembly? [metasploit]		26	1	0		t5_2qmd0	False
1266319721.0	b2nbo	Reverse Engineering a Smart Meter	wtbw	28	2	0		t5_2qmd0	False
1260895061.0	aeygw	Intel Assembler Code Table - [PDF]		28	3	14		t5_2qmd0	False
1257297855.0	a0ow4	Chinese AV vendor caught with their pants down, warezing the signature databases of other vendors	rolfr	26	1	3		t5_2qmd0	False
1238906186.0	8a2qf	Fravia's still alive; nice picture of him with Richard Stallman	rolfr	26	1	0		t5_2qmd0	False
1374780837.0	1j1q6g	ZeroAccess Anti-Debug Uses Debugger	CecileMBAM	33	9	3		t5_2qmd0	False
1371957622.0	1gw2rn	Exploit Monday: Undocumented NtQuerySystemInformation Structures (Updated for Windows 8)	niko-r	36	12	0		t5_2qmd0	False
1368431173.0	1e8f73	x86(_64) disassembler in Lua - udis86 bindings	willsteel	29	6	1	"[http://ludis86.schmoock.net/index.html](http://ludis86.schmoock.net/index.html)

Simple Usage:

    local ludis86 = require(""ludis86"")
    local ud = ludis86.init_file_intel64(""YOUR.EXE"", 0x1000)
    while ud:dis() &gt; 0 do print(string.format(""+%04X %016s %016s"", ud:off(), ud:hex(), ud:asm())) end
"	t5_2qmd0	True
1368136000.0	1e119f	The Legal Regulation of Decompilation of Computer Programs: Excessive, Unjustified and in Need of Reform - Noam Shemtov [Thesis, PDF]	igor_sk	28	3	1		t5_2qmd0	False
1363380797.0	1adejw	Volatility Plugins Cheatsheet put together by Volatility devs [PDF]	transt	29	5	4		t5_2qmd0	False
1362742898.0	19wo4z	Exploitation on the OSX platform	blahfish	26	3	13	"As a hobby I've been reading OSX exploits. So far the contents I have browsed through(and am browsing through currently) include the following :-

- Very old exploits at exploit-db.com
- Few metasploit modules which seem to be present(the free version of msf, not the paid one)
- Reverse engineering notes at reverse.put.as

Are there any malware samples I should be checking out? Any suggestions on where I could proceed from here? thanks."	t5_2qmd0	True
1361302555.0	18u2oq	"Analysis of ""Super Password 1.0"".  (Remarks welcome...)"	bmantra	37	12	34		t5_2qmd0	False
1359491735.0	17ikwt	The next step to bug hunting?	00Blitz	28	6	12	"I believe the odds of some bug hunters reading this reddit are quite high. I would greatly appreciate if I (and all others) may query your experiences about this topic. Even a single query is appreciated!

After one has obtained the basics in x86 ASM, familiarity with tools such as [ImmDBG](https://www.immunityinc.com/products-immdbg.shtml)/[WinDBG](http://msdn.microsoft.com/en-us/windows/hardware/gg463009.aspx) and some knowledge on types of vulnerabilities,

* *how do you pick your target?*

Reward programs such as [ZDI](http://www.zerodayinitiative.com/advisories/upcoming/) and [EIP](https://www.exodusintel.com/eip/) are not clearly stating as to what products to aim for. Surely we can deduce a bit from the published advisories, but only very high level.

I see two flavours of targets:

* Browsers and their addons/extensions (such as Flash/Shockwave)
* Others

Especially the latter category is huge. Without any evidence and just based on gut feeling I feel that programs such as MS Word/Excel/PDF readers are targeted by allot of researchers. I'd rather go for some less known products, but 

* *which ones?*
* *Am I seeing monsters under the bed by thinking the odds of submitting a duplicate bug in those big programs is high?*
* *How often did you experience this?* 


**Slightly unrelated to the original question**

Anyone followed one of these courses/workshops and willing to share their experience? What was your entry level knowledge wise? What did you learn/gain most from it?

* [Exodus Intel - Breaking Binary Applications](http://blog.exodusintel.com/2012/12/17/exodus-intelligence-2013-training-courses/)
* [Attack Secure - Ninja Skills](http://attack-secure.com/index.php/ninja-skills/)
* Others?

"	t5_2qmd0	True
1358865684.0	1720xo	"Can a Program Reverse-Engineer Itself? by Antoine Amarilli, David Naccache, Pablo Rauzy, and Emil Simion [PDF] 
"	turnersr	33	7	8		t5_2qmd0	False
1355381509.0	14rvq1	Hacking Windows 8 Games	nick_name	27	3	2		t5_2qmd0	False
1353003679.0	1391wt	Buffer overflow and shellcoding tutorials 1 and 2	goonmaster	31	7	5		t5_2qmd0	False
1351945772.0	12k8gy	HDMI – Hacking Displays Made Interesting [PDF]	igor_sk	31	6	10		t5_2qmd0	False
1351639958.0	12d8wn	Reversing malware protocols with machine learning	rolfr	29	5	1		t5_2qmd0	False
1351243306.0	124713	Windows Operating System Internals Curriculum Resource Kit	ffffdddddssss	29	5	3		t5_2qmd0	False
1340611972.0	vkay2	Tutorial: Convert PE EXE to DLL	Aggrajag	27	1	5		t5_2qmd0	False
1339359541.0	uv0it	Unleashing Mayhem on Binary Code [PDF]	rolfr	27	1	5		t5_2qmd0	False
1337872046.0	u2u2z	Hack In The Box 2012 Amsterdam Slides (still being updated!)	fsdfsdfsdfsdfsdfsdpf	27	4	1		t5_2qmd0	False
1337290266.0	ts9xg	Can /usr/bin/python replace /bin/sh as all-time favorite execve() shellcode?	ikotler	33	7	3		t5_2qmd0	False
1327242023.0	orgcu	Finding Bugs in VMs with a Theorem Prover, Round 1 -- by me	rolfr	30	6	4		t5_2qmd0	False
1326272404.0	oc5j5	x86 Assembly and reverse engineering for beginners?	ehudt	37	13	12	"Do you know any good resources for learning?
I have knowledge of assembly (MIPS), and want to make it more pratical."	t5_2qmd0	True
1322906707.0	mym2e	A bit away from kernel execution	ar1vr	25	1	0		t5_2qmd0	False
1318063374.0	l4zgo	Malicious PDFs with LaTeX	wishi	28	2	0		t5_2qmd0	False
1317070503.0	ks6xm	Kernel Attacks through User-Mode Callbacks in win32k	yuhong	26	3	0		t5_2qmd0	False
1312749895.0	jbrzp	Attacking Clientside JIT Compilers	rolfr	26	2	0		t5_2qmd0	False
1311944200.0	j361j	IDA Pro 6.2 with database snapshots support	0xeb	30	6	15		t5_2qmd0	False
1311111814.0	iu7pu	Differentiating Code from Data in x86 Binaries [PDF]	rolfr	27	6	6		t5_2qmd0	False
1310925558.0	is4e5	Adventures with Radare2 #1: A Simple Shellcode Analysis	vext01	28	4	5		t5_2qmd0	False
1310267286.0	ilcc7	Reverse Engineering VxWorks Firmware	igor_sk	30	8	2		t5_2qmd0	False
1309942103.0	ihyru	Facebook Forensics Paper Published	_pusher_	29	4	4		t5_2qmd0	False
1309773361.0	igak8	  Mixing x86 with x64 code	_pusher_	30	5	0		t5_2qmd0	False
1308886030.0	i7s7r	Pinczakko's Guide to Award BIOS Reverse Engineering	dwdwdw2	28	3	6		t5_2qmd0	False
1306426106.0	hkqq1	HACKING AT MACH 2! [PDF]		29	5	1		t5_2qmd0	False
1302629029.0	gocr0	Analysis of ZeroAccess Rootkit - Prevx [PDF]	gnewman	27	3	3		t5_2qmd0	False
1301613288.0	gfwk7	REC decompiler is alive! (4.0 beta is out)	igor_sk	26	1	6		t5_2qmd0	False
1299874965.0	g25wd	Mac OS X Hacking - Snow Leopard Edition [PDF]		27	4	3		t5_2qmd0	False
1298204127.0	foyg5	Fixing a bug in a game without having the source code, possible?	Denvildaste	33	10	27	"One of my favorite games to play on LAN with friends is Command &amp; Conquer Generals: Zero hour, the game has a bug where the game mismatches and everyone gets disconnected, unfortunately the game is old and no longer supported by EA so there will be no patch to fix it.

Is it possible for me to fix this bug myself? what I had in mind is a modified executable that detects when a mismatch occurs, pauses the game copies the game state from the host to all the connected clients and resumes the game, or maybe add the ability to save/load multiplayer games, the question is, is it possible to do such things? and if so how hard is it? where do you recommend I start if I don't have much experience in this field?"	t5_2qmd0	True
1296086934.0	f9ojc	Good Windows Hex Editor?	emrikol	31	7	30	Can anyone recommend me a good text editor for Windows?  Preferably one that may use some of the features of Windows 7 to speed up my workflow?  I've been using my old copy of WinHex for what feels like ten years now and I think it may be time to upgrade.  I tried a newer version of WinHex a few months ago and there seems to be little changed in the way of UI.	t5_2qmd0	True
1295325708.0	f48gn	An Intro to Creating Anti-Virus Signatures		25	2	1		t5_2qmd0	False
1295092422.0	f2rum	Great moments in microprocessor history	rolfr	30	6	1		t5_2qmd0	False
1294439113.0	ey5na	Reminder:  Ghost in the Shellcode contest started 25 minutes ago	rolfr	27	3	8		t5_2qmd0	False
1294319091.0	ex7vn	Beginners Guide | The Binary Auditor™		29	5	7		t5_2qmd0	False
1293596012.0	eswh5	Adventures in analyzing Stuxnet (Bruce Dang from Microsoft) [VIDEO]	rolfr	27	2	8		t5_2qmd0	False
1292598935.0	enfkt	Silicon pr0n: hardware reverse engineering wiki	nmesisgeek	32	6	7		t5_2qmd0	False
1290810988.0	ec8ge	The OpenVizsla USB protocol analyzer is fully funded!  That was quick.  But the project leaders could still use additional support	rolfr	27	2	0		t5_2qmd0	False
1286048468.0	dlzh0	I believe I've found the JTAGs for AT&amp;T 3G MicroCell/Cisco Femtocell	GodRa	29	6	7	"Just following up on my [old post](http://www.reddit.com/r/netsec/comments/d7450/i_just_recently_got_my_hands_on_a_attcisco_3g/) in hopes of sparking some interest in hardware hacking. 

Just got around to looking at the docs again and it looks like the picoChip baseband processor is based on the ARM 926EJ-S processor, so that has a JTAG.

I've tested the resistance from Vss to various JTAG I/Os and this [photo](http://i.imgur.com/fljbN.jpg) is my guess of the JTAG pins.  The resistance information was based on the presentation by Gerrit van der Bij, ""[The Embedded JTAG interface HOWTO](https://har2009.org/program/attachments/127_JTAG-v2.0.pdf)"" :

&gt; •JTAG only has one output pin.
&gt; 
&gt; –The TDO pin: when JTAG is inactive, the TDO pin should NOT be driven.
&gt; 
&gt; –The resistance of the driver transistors when they are NOT driven is very large (&gt;10MΩ) to both power supply and ground.
&gt; 
&gt; •JTAG has 3 ""interesting"" input pins.
&gt; 
&gt; –To prevent drifting voltages on these pins, they are terminated via a resistor to either ground or the supply voltage. It is a very low resistance compared to that of the output (&lt;10KΩ)

It looks like a PCB pads for a regular 14-pin header socket found on some ARM-based boards.

Gonna get some newer USB JTAG connector to see if this is correct.  The [Segger J-Link EDU](http://www.segger.com/cms/j-link-edu.html) seems cool and is [pretty cheap](http://www.segger-us.com/jlinkjtagemulator.htm), $60.

Will also order a couple [four-wall headers](http://search.digikey.com/scripts/DkSearch/dksus.dll?Detail&amp;name=S9186-ND) to solder on the two 14-pin pads."	t5_2qmd0	True
1263740416.0	aqnu2	[fun!] metatrace, a C++ compile time ray tracer	wishi	28	3	3		t5_2qmd0	False
1248419879.0	943xf	self post:  administrivia	rolfr	28	3	9	"Some thoughts:  

This subreddit needs more contributions.  I'm thankful for everyone who does contribute, but as it stands I submit the vast majority of the entries.  We'd all benefit from multiple perspectives on reverse engineering, not just my crusty cracking/academic one.  There are 2220 subscribers to this subreddit at this moment, so I refuse to believe that none of you out there have a useful link to submit.

Remember to up-vote if you like a submission:  this subreddit is small enough that a single down-vote can doom a submission.  Much of the stuff I submit gets 1-3 upvotes and 1-2 downvotes.

As suggested by sanitybit below, we would have more of a community if people commented more on things.  I'm thinking also about an IRC channel?  Anyone interested?  Let's say EFNet #rereddit?

Amber, if you still read this reddit, contact me somehow.  I've fallen out of touch with you this year and I want to talk to you.

"	t5_2qmd0	True
1238569113.0	893ml	Keeping the Pirates at Bay:  Implementing Crack Protection for Spyro:  Year of the Dragon	rolfr	28	4	3		t5_2qmd0	False
1375742807.0	1jrsxp	A Tale of One Software Bypass of Windows 8 Secure Boot - BH2013 slides [PDF]	igor_sk	26	5	2		t5_2qmd0	False
1373756804.0	1i8s19	A symbolic execution engine for Python	turnersr	27	5	14		t5_2qmd0	False
1366089216.0	1cg0c1	The world's first compiler agnostic binary rewriter	AdamMiller	31	8	7		t5_2qmd0	False
1364571927.0	1b8w3x	Setting up a public malware sample exchange 	itsnotapt	34	11	25	"So, I'm going to start this off by saying, I dont' know how this is going to work, but I'm hopping as a community, we can put something cool together.

I'm currently scraping about 500Mb worth of samples a day on my own, outside of work, because of that, I'd like to find a way to share these with others.  On one hand, I could send them all to Virus Total and move on with my life.  However, there are a lot of folks, who are simply trying to get their hands on samples and I would like to help get my data into their hands.  

My current idea, is to setup an EC2 instance that is simply a drop point where I'll have the past week's worth of samples in archives.  If anyone has any suggestions or ideas, I'd love to hear them.

"	t5_2qmd0	True
1363710135.0	1allqd	Linux System Calls	igor_sk	28	4	7		t5_2qmd0	False
1362237025.0	19ivfa	.net reversing and IL modification. Good read :)	Av3ragej0e	32	9	9		t5_2qmd0	False
1356352884.0	15deku	UIC R.E. Academy	ffffdddddssss	25	1	0		t5_2qmd0	False
1354185991.0	13zl5f	Reupload video Using IDA Pro removed from Youtube	bolzano_1989	28	5	0	"Could anybody reupload the video ""Using IDA Pro"" removed from Youtube?
http://www.youtube.com/watch?v=K08Zw_l4xSw
I see this link in the beginner reddit thread."	t5_2qmd0	True
1351187175.0	122r0x	X86/ARM Emulator - CodeProject	nullandnull	28	5	0		t5_2qmd0	False
1351158414.0	12247t	Malwasm - Offline debugger for malware's reverse engineering	N3mes1s	28	5	3		t5_2qmd0	False
1350402492.0	11koyv	Abstract Interpretation - MozillaWiki	turnersr	27	2	4		t5_2qmd0	False
1349823682.0	117xen	Reverse Engineering Android: Disassembling Hello World	davtbaum	31	10	2		t5_2qmd0	False
1349317555.0	10wvxo	Free Lancing RE	redteamer	29	5	4	"I see that we have the quarterly hiring thread for companies to post about full-time jobs.  Would it be possible to have a similar thread to go to look for freelance and/or remote work?  

I apologize in advance if this is not the correct place to put this."	t5_2qmd0	True
1348505097.0	10edrp	Detecting Malware Hooks in the Windows GUI Subsystem	transt	36	14	0		t5_2qmd0	False
1346732336.0	zbiq1	Consonance, an IDA Color Scheme	sanitybit	28	5	4		t5_2qmd0	False
1344274869.0	xrx87	Solution for the ESET BlackHat US Challenge 2012	rolfr	28	3	1		t5_2qmd0	False
1340990271.0	vsx6y	"Flaws in PKCS#1v1.5 padding: SecurId 
token key extracted in 13 minutes"	igor_sk	33	9	0		t5_2qmd0	False
1340663478.0	vlhhl	Advanced Exploitation of Mozilla Firefox Use-after-free Vulnerabilities (MFSA 2012-22 / CVE-2012-0469)	bugslap	29	5	3		t5_2qmd0	False
1338560332.0	ufmo8	DEFCON 17: Reverse Engineering By Crayon: Hypervisor Based Malware Analysis and Visualization (Has some pointers for de-obfuscation)	GeminiVI	27	6	2		t5_2qmd0	False
1337856597.0	u2krs	Malware.lu - Repository of malware and technical analysis	rolfr	29	7	2		t5_2qmd0	False
1337397299.0	tu94f	PE Explorer Heap Overflow Vulnerability	waliedassar	27	3	2		t5_2qmd0	False
1319107183.0	liknd	The Art Of ELF: Analysises and Exploitations	wishi	27	4	0		t5_2qmd0	False
1314895781.0	k1gl5	"Android ""rip-off indicator"" of applications"	adesnos	27	5	0		t5_2qmd0	False
1308665268.0	i59bw	White Phosphorus Exploit Pack Sayonara ASLR DEP Bypass Technique	polsab	27	4	5		t5_2qmd0	False
1308602544.0	i4n03	Job: Blizzard Entertainment: Anti-Cheat Engineer	diff-t	39	12	6		t5_2qmd0	False
1307643246.0	hvpar	Reverse engineering a Wii game script interpreter, part 1	nepcoder	26	5	0		t5_2qmd0	False
1305665197.0	hdnnb	The Factorization of RSA768	bulibuta	26	2	2		t5_2qmd0	False
1303175238.0	gt7go	Compile-time String Encryption with C++0x	rolfr	27	4	9		t5_2qmd0	False
1299009406.0	fv9cd	Zynamics has been acquired by Google!	dguido	28	7	13		t5_2qmd0	False
1298881184.0	fu6rx	Return of Binary-Auditing!	imabrokendownload	30	6	1		t5_2qmd0	False
1297930597.0	fn2sv	Analysis of an MBR file system infector	SiberianJay	26	2	0		t5_2qmd0	False
1293918466.0	euo4g	Open-source PDF analysis tool	rolfr	26	2	0		t5_2qmd0	False
1273979723.0	c4nh4	Faster Universal Unpacker (FUU)	rolfr	24	2	2		t5_2qmd0	False
1267214299.0	b6y52	Assembly Primer for Hackers (Part 1)	Chomskyismyhero	28	3	5		t5_2qmd0	False
1263852051.0	ar6jy	BIOS Reversing	Havokeachday	26	3	0		t5_2qmd0	False
1223843978.0	76prn	VMware Backdoor I/O Port	doug11235	25	3	2		t5_2qmd0	False
1374177944.0	1ikyt4	Ken Shirriff's blog: Reverse-engineering the flag circuits in the 8085 processor	rolfr	26	4	0		t5_2qmd0	False
1372519563.0	1hbafa	The biological microprocessor, or how to build a computer with biological parts by GHG Moe-Behrens	turnersr	30	8	0		t5_2qmd0	False
1372028120.0	1gxm94	HexRaysCodeXplorer plugin / REhints.com	niko-r	25	4	0		t5_2qmd0	False
1370805657.0	1fzvce	pa_kt's half of the ASLR/timing attacks speech at SummerCon 2013 [PDF]	rolfr	25	2	0		t5_2qmd0	False
1368660918.0	1ef0d6	The Cray Files	nullandnull	26	5	1		t5_2qmd0	False
1364930085.0	1bj8cr	Firmware Analysis Tool Binwalk 1.2 released: recursive scanning, entropy analysis, plugin support	rayo2nd	25	3	2		t5_2qmd0	False
1364847689.0	1bg8jz	Android Application (Dalvik) Memory Analysis &amp; The Chuli Malware	jtsylve	37	13	0		t5_2qmd0	False
1363124230.0	1a68vq	So I got a UART and cracked open an Arris WBM760A Cable Modem. Here's where I am, where to next?	Z3tta	29	5	26	"So, being someone who can't resist picking up $1 embedded devices at yard sales, I came across an [Arris WBM760A](http://www.amazon.com/Arris-WBM760A-Touchstone-DOCSIS-Cable/dp/B006UK3K06).

Two visible screws on the bottom, take them out. Then the foot to the right of the LEDs covers a warranty sticker and another screw, take that out and you're home free.

Once you're in, you'll notice something beautiful. Four pinned headers, in a line, all giving out TTL voltages. I couldn't have done it without the help from [this tutorial over at dev/ttys/0](http://www.devttys0.com/2012/11/reverse-engineering-serial-ports/).

So the pins in order from RJ45 connector to the LEDs are [VCC, Tx, Rx, Gnd].

I hooked up a cheap $9 UART I got off of eBay, and set off to find the baud rate (I just manually guessed with putty), which turned out to be 115200. No parity, 1 stop bit, 8 data bits... seems standard. Anyhow, I logged my putty connection and was excited to get some output: http://pastebin.com/ScQ1YaP6

Now, what I've noticed is that there's a very short window where input is allowed. I hooked my multimeter to the tx line from my UART and noticed that at certain period of the boot cycle, I could type and it would display on putty, and you would see the change in voltage on the multimeter. However, after a point in time the tx line will just stay at a constant 1.625v (This could be off, I forget where I write things). So this lead me to test two.

Test two was the putty-paste test, where I reset the putty console, unplugged the modem, and loaded my clipboard with ""paste!\n"", with the \n not being literal of course. So I plugged in the modem and to my hearts content I right clicked that putty window, pasting input as quick as I could. What I found was input is allowed after 

    line 135: Freeing init memory: 76K

until the ending line.

I tried running processes, I tried things like 

    echo `cat /etc/passwd &gt; /dev/tts/0` &gt;&gt; /etc/scripts/z_arris_check.sh

I've tried, perhaps even crazier. Anyways, this is where I'm at. I wanted to write up my findings, my adventure (this is my first adventure with embedded device RE-ing), and hopefully I can get some feedback or insight where to head next.

Thanks for taking the time to read, I hope you got some enjoyment out of it."	t5_2qmd0	True
1361423035.0	18xqrb	Academic Research Project Ideas	ugrd	28	6	10	"Hi, this is my first post so be gentle.

I saw a post in another sub which inspired and I remember seeing a post somewhat similar to this posted here but being more focused on decompilation so I figured I would just make another.

I am a CS student, still in University trying to find an academic research project and I am looking for ideas.  I am interested in reverse engineering and program analysis.  I have some basic experience in re and malware analysis.  I am specifically interested in applications of theorem provers, SMT/SAT solvers, symbolic execution and model checkers, so I figured this is a good sub to post in.  Anyway, I would be very interested and grateful for ideas, open research problems, academic papers to read, general tips or anything that might help me settle on something that would be interesting.  

Thanks so much for your time."	t5_2qmd0	True
1357639666.0	166dqx	The future of protocol reversing and simulation applied on ZeroAccess botnet (29C3, CCC 2012)	samcrem	27	4	6		t5_2qmd0	False
1355519043.0	14v115	Research paper on RE law AmA	IncludeSec	34	11	11	"Hi folks, my company [Include Security](http://www.IncludeSecurity.com) does a good amount of RE work and we've teamed up with a prominent technology law researcher to create a current and relevant research paper on RE laws in the US. We hope to address some important topics/questions in the hobbyist, professional, and academic RE world.

So please ask all your questions here in this thread, **while this isn't a real-time AmA we'll do our best to address whatever questions/topics are up-voted the most in our research.** The paper will be completed in the upcoming months and we'll link to it on /r/ReverseEngineering [when we're done](http://i3.kym-cdn.com/photos/images/original/000/159/326/Op_will_surely_deliver_RE_Weird_Video_Game_Facts_Part_7-s500x375-138152.jpg).

We're sponsoring this research because we think it's interesting, it helps our business answer some questions we had ourselves, and it's a cool way to give back to the RE community.

Thanks for any input!"	t5_2qmd0	True
1351193476.0	122ydp	cucu: a compiler you can understand (1/3)	nullandnull	28	5	6		t5_2qmd0	False
1349315681.0	10wtil	Satellite baseband mods: Taking control of the Inmarsat GMR-2 phone terminal	aelfred	26	4	4	"Renowned reverse-engineers Alfredo Ortega and Sebastian Muñiz publish their latest work, RE and modification of IsatPhone Pro Inmarsat firmware, allowing them direct interaction with the satellite network.

Link: http://www.groundworkstech.com/blog/ekoparty2012satellitebasebandmods

Disclaimer: I'm Alfredo Ortega."	t5_2qmd0	True
1348684954.0	10ipzu	"Brute Force Scanning of Kernel Data Structure Instances Using
Graph-based Signatures"	dradu	25	4	0		t5_2qmd0	False
1346399281.0	z4ja5	a bit more of PE	simpleuser	26	2	1		t5_2qmd0	False
1345054135.0	y9tvx	Finding unknown algorithm using only input/output pairs and Z3 SMT solver	rolfr	27	3	5		t5_2qmd0	False
1344880907.0	y5lg9	Adding a message Box to a Binary Through DLL Injection	RandomNetzley	36	15	1		t5_2qmd0	False
1342657464.0	wsgfo	Exploit Mitigations in Android Jelly Bean 4.1	virvdova	26	2	0		t5_2qmd0	False
1339884793.0	v5kxo	"Designing a minimal operating system to emulate 
32/64bits code snippets, shellcode or malware in 
Bochs"	0xeb	30	6	0		t5_2qmd0	False
1339774888.0	v3k1n	CrowdStrike release CrowdRE collaborative RE plugin for IDA	hellixor	29	6	17		t5_2qmd0	False
1327916076.0	p2u9l	Free -Net Decompiler by JetBrains	wishi	26	5	9		t5_2qmd0	False
1327915975.0	p2u83	Arm v7 and v9 Opcode Map	wishi	27	7	2		t5_2qmd0	False
1325525628.0	nzxug	Executable and Linkable Format (ELF)	igor_sk	30	9	0		t5_2qmd0	False
1317130787.0	ksx5e	IO Smashthestack Challenges	samcrem	28	5	6		t5_2qmd0	False
1315051588.0	k3gie	Reversing C++ programs with IDA pro and Hex-rays	rolfr	27	4	0		t5_2qmd0	False
1306974457.0	hpidr	Where can I get some practice files for reversing with crackmes.de down?		23	0	11	I'm trying to get some foundational skills going this summer, but I don't have anything to practice with, and the only site I knew of is down at the moment. Any recommendations? 	t5_2qmd0	True
1305546805.0	hch4p	Finding and Understanding Bugs in C Compilers [PDF] +325 reported crashes  &amp; wrong code generation	wishi	23	0	4		t5_2qmd0	False
1304940015.0	h798y	PROTECTiON iD v6.4.0		24	2	4		t5_2qmd0	False
1304376001.0	h2n0x	"crackmes.de down - ""We received an abuse mail and had to close this site. Hopefully we are back soon!"""	quitelikeme	28	6	11	Yeah, let's see how long it takes for it to come back. I'd like to know more about the abuse mail, anyone knows what's going on?	t5_2qmd0	True
1303586123.0	gvveu	I don't know if r/ReverseEngineering is interested, but there's a fairly new subreddit called r/AskEngineers that may have resources you could use (or may serve as a venue to provide your expert advice)	Mumberthrax	27	4	0		t5_2qmd0	False
1301523589.0	gf1sm	Job posting:  developer of automated exploit generation tools	rolfr	23	2	3	"Job Opening (Staff Programmer) We're looking for great systems
programmers to work on automatic program exploitation and program
analysis problems. We need strong programmers with an emphasis on
systems-level knowledge (knowing how a program gets compiled
down, unix, etc.). Being able to reverse engineer binaries and
write exploits against program binaries is a plus. Experience
with writing compilers/optimizations, or program verification is
also a plus.  We write our code in C and OCaml. The position is
at Carnegie Mellon University in CyLab (www.cylab.cmu.edu) with
Prof. David Brumley.  You'd also be working with CMU PhD students
and undergrads. To get a sense of the security projects, visit
http://security.ece.cmu.edu. If interested, please apply at
http://www.cmu.edu/jobs to job listing 7993 or by this link:
https://secured.kenexa.com/cmu/cc/CCJobResultsAction.ss?command=ViewJobDetails&amp;job_REQUISITION_NUMBER=7993 ."	t5_2qmd0	True
1300437343.0	g6beq	Freemyipod (A reverse engineering of iPod devices)	samcrem	24	4	0		t5_2qmd0	False
1299686752.0	g0hua	Mac OS X Reversing Tutorial 		25	3	7		t5_2qmd0	False
1299496369.0	fyyck	BugChecker - open-source SoftICE lookalike for 2k/XP	rolfr	28	7	4		t5_2qmd0	False
1299099905.0	fw1up	Brilliant post on x64 analysis: Challenges of Debugging optimized x64 code	simpleuser	24	1	0		t5_2qmd0	False
1298596593.0	fs7qe	Understanding Swizzor's Obfuscation Scheme [PDF]	rolfr	22	1	1		t5_2qmd0	False
1296728137.0	fef6c	Shmoocon 2011 Crypto Challenge Pack	sanitybit	26	5	4		t5_2qmd0	False
1293675844.0	eteuq	IOCTL Fuzzer v1.2 - Fuzzing Tool For Windows Kernel Drivers	sanitybit	26	4	0		t5_2qmd0	False
1292076158.0	ek2k8	Hardware is the new software - Blackhat EU 2k10 by Joe Grand &lt;&lt; nice presentation	g0dmoney	25	5	5		t5_2qmd0	False
1290854113.0	ecfpk	Project Ubertooth, an open source wireless development platform that can be used for Bluetooth testing and research.	sanitybit	27	3	1		t5_2qmd0	False
1290661796.0	ebhkr	To whoever owns this site, thank you. I got a good laugh. 		34	11	9		t5_2qmd0	False
1286367496.0	dnjfr	Break Our Steganographic System!	cavedave	28	4	5		t5_2qmd0	False
1286311678.0	dn9in	6 Hex Editors for Malware Analysis	gnewman	24	3	6		t5_2qmd0	False
1285318790.0	di8sv	Visual DuxDebugger - Windows 7 64-bit Debugger	wtbw	24	1	1		t5_2qmd0	False
1285061571.0	dgrpj	"Hysterically funny advisory regarding an, uh, ""authentication scheme"" [PDF]"	rolfr	25	4	6		t5_2qmd0	False
1283910066.0	davx8	Can anyone in /r/ReverseEngineering recommend me a good book/resource to start learning about this stuff?		27	6	16	My Background: I'm about halfway through a BS in CS (and Math, fwiw). I'm proficient with C, C++, and Java.	t5_2qmd0	True
1282796025.0	d5k7n	Hindering debugging by doing nothing	bigmac	27	6	11		t5_2qmd0	False
1280332633.0	cuori	EthicalHacker: Intro to Reverse Engineering (Part 1)	Mindsketch	23	1	1		t5_2qmd0	False
1277934489.0	ckpb8	Linux System Call Reference	kernelgork	27	3	5		t5_2qmd0	False
1274742469.0	c7phm	Optimizing Code for x86 and x86-64 Family Microprocessors		24	1	1		t5_2qmd0	False
1272924471.0	bzlok	"Your computer is now stoned (...again!). The rise of
MBR rootkits [PDF]"	rolfr	24	2	3		t5_2qmd0	False
1271221621.0	bqm9o	Cracking the Nintendo Kernel for Homebrew	cydork	23	1	0		t5_2qmd0	False
1270701258.0	bnyyn	"George Hotz - OtherOS supported on 3.2100 - video demoing ""custom firmware"". "	ethicszen	27	4	0		t5_2qmd0	False
1265725932.0	azxca	"Modifying A UK Panasonic G10 Plasma Television
To Obtain Advanced Controls"	wtbw	25	4	3		t5_2qmd0	False
1259018670.0	a7gbq	Free stuff on Jan 7th from an online retailer :-O	Mad_Gouki	32	8	5		t5_2qmd0	False
1258486023.0	a5d99	RE-Google - IDA plugin	wishi	24	2	4		t5_2qmd0	False
1244751413.0	8rrtt	IDA v5.5 is scheduled for tomorrow	ilfak	25	4	1		t5_2qmd0	False
1239117760.0	8ao6k	Michelangelo source code	cavedave	23	0	2		t5_2qmd0	False
1237948877.0	8798t	The Beginners Guide to Codecaves	cloudburst	22	1	2		t5_2qmd0	False
1233954371.0	7vgzb	Classic Paper on Reverse Engineering Skype Part 2 [PDF]	rolfr	22	1	0		t5_2qmd0	False
1375741718.0	1jrrmu	PyBFD: A Python interface to the GNU Binary File Descriptor (BFD) library	igor_sk	23	4	1		t5_2qmd0	False
1373915898.0	1icxf5	How I found CVE-2013-1310 in IE6 and IE7	yuhong	33	12	0		t5_2qmd0	False
1373538485.0	1i2m5q	searching for a PCIe WiFi SOC	idaxivecro	24	1	5	"Hi, can anyone suggest me a PCIe WiFi SOC that uses a known isa? (eg, mips)
I'd like to try disassembling the firmware... I know I'm crazy, but you know, you could do many interesting things with a modified firmware"	t5_2qmd0	True
1373245905.0	1hu1u1	Coq: The world’s best macro assembler? by Andrew Kennedy, Nick Benton, Jonas Jensen, and Pierre-Evariste Dagand [PDF]	turnersr	31	12	1		t5_2qmd0	False
1372958731.0	1hn6pr	Thoughts of hiring someone skilled in RE?	fldash	29	6	8	"Is this legal? Is it frowned upon? Is there a place that hosts jobs for reversing? 

Long story short, Company of Heroes 2 had a -dev mode s few patches ago. They removed shortly before release because it because it could be used to hack Steam achievements. Understandable. They promised mod support eventually but who knows when.

I'm the creator of the persistent COH1 mod Europe In Ruins. I'm trying to get started porting it to COH2.  I have no interest in Steam achievements.

I have opened the EXE in Hopper.app and found an Misc_IsDevMode offset that is set to 0.  Changed it to 1 and patched the EXE. But it doesn't seem to do anything. Trying to attach a debugger is caught by the Sega DRM DLL and it's using more sophisticated methods than IsDebuggerPresent.

You can run mods without -dev if you package them.  I've also done this but there is some sort of CRC checks because my changes are read and I can see them in 1v1 skirmish vs AI, but the game abruptly ends around 30s into the match.

Anyway, I'm in over my head and would like help and willing to pay if someone could complete the task."	t5_2qmd0	True
1369644699.0	1f4nnw	AES Whitebox Unboxing: No Such Problem - [PDF]	0vercl0k	27	6	6		t5_2qmd0	False
1368495079.0	1eaai0	How to Read Picasa 3.9 Database and extract faces data	2xyo	29	6	0		t5_2qmd0	False
1367481568.0	1djgcg	2013 European LLVM Conference - Slide - Dagger: decompilation to LLVM IR slides	tiocsti	24	3	3		t5_2qmd0	False
1364369401.0	1b3l4y	Cross-referencing stand-alone Dalvik Bytecode	simpleuser	25	5	3		t5_2qmd0	False
1364262251.0	1b0jap	I found a IE9 info leak for ASLR bypass by just looking further at a W3C HTML spec bug...	yuhong	30	10	2		t5_2qmd0	False
1362618078.0	19tahv	REcon 2013 - CFP	turnersr	23	3	0		t5_2qmd0	False
1362450034.0	19ohhe	Binary Analysis Platform 0.7 released	edmcman	29	7	11		t5_2qmd0	False
1359662750.0	17nc1u	Debugging ring 3 part of PE/PE+ loader	emulb	27	6	0		t5_2qmd0	False
1355821065.0	151m5q	an overview of the Portable Executable and its malformations (video)	simpleuser	24	3	2		t5_2qmd0	False
1355645087.0	14xnuh	BugDbg , new x64 userland debugger from PESpin dev	niko-r	27	5	8		t5_2qmd0	False
1355323194.0	14q5jk	Hacking a wireless burglar alarm	fr0r	28	5	1		t5_2qmd0	False
1355111150.0	14l29h	"Pinlog: Tool for execution tracing and logging via Pin that can be imported into IDA.
"	niko-r	24	4	0		t5_2qmd0	False
1354640426.0	149oip	Windows 8 ASLR internals	Greg1221	29	7	2		t5_2qmd0	False
1354486526.0	1463ap	Doctoral Studentship in the Academic Centre of Excellence in Cyber Security Research [GCHQ-sponsored Ph.D. studentship for UK nationals]	rolfr	25	4	0		t5_2qmd0	False
1352531977.0	12yeu4	Defeating Windows Driver Signature Enforcement #2: CSRSS and thread desktops	N3mes1s	25	4	0		t5_2qmd0	False
1352230899.0	12qv4a	Lessons In Static Binary Analysis - Veracode	turnersr	32	11	5		t5_2qmd0	False
1350466808.0	11mfmb	"""new kind of copy protection"" being offered on reddit"	shrillthrill	44	23	20		t5_2qmd0	False
1347466516.0	zrscr	Using Volatility to analyze and enumerate Windows Desktops, Heaps, and Ransomware	transt	28	7	0		t5_2qmd0	False
1332925622.0	rhbfw	Anti-unpacker tricks, by Peter Ferrie (always links to the most up to date version)	QvasiModo	25	2	9		t5_2qmd0	False
1330282875.0	q6y8e	The dark side of RATP (Paris metro) tickets	ethicszen	28	8	2		t5_2qmd0	False
1328904840.0	pjszk	"Shmoocon 2012 ""Blocky"" (RE 400) Writeup"	rolfr	28	5	6		t5_2qmd0	False
1327857650.0	p1tq8	Homomorphic encryption libraries - libScarab (integer FHE) and shapeCPU (FHE VM, patented in Germany)	rolfr	28	6	3		t5_2qmd0	False
1325852635.0	o5cnj	x86 &amp; PE	cavedave	26	5	0		t5_2qmd0	False
1318543095.0	lbbmf	Derbycon 2011 Videos	igor_sk	24	2	0		t5_2qmd0	False
1317172573.0	ktl0i	Debugging Injected Code with IDA Pro	digduggg	27	5	2		t5_2qmd0	False
1315602236.0	kagmb	t2′11 Challenge	igor_sk	27	7	13		t5_2qmd0	False
1315052316.0	k3goz	rep movsb isn’t memcpy()	wishi	25	4	9		t5_2qmd0	False
1312993315.0	jepg5	IEEE to create anti-malware “packer” validation system	duppy	25	5	51		t5_2qmd0	False
1312307889.0	j6w95	"Practical C++ Decompilation: slides and video 
(Recon 2011)"	igor_sk	25	3	1		t5_2qmd0	False
1310538127.0	io7dt	a summary of PDF tricks - encodings, structures, javascript...	simpleuser	22	1	0		t5_2qmd0	False
1307976235.0	hyj7i	Debugger Canvas, a free Power Tool that adds Code Bubbles™ to Visual Studio for a new way to debug. [looks interesting]	atworkbored	25	2	7		t5_2qmd0	False
1306809899.0	hnx5l	Recon training -  Binary Literacy:  Static Reverse Engineering -  Rolf Rolles		22	0	10		t5_2qmd0	False
1306255414.0	hj0g5	Nick Harbour How to Break Disassemblers NoVa Hackers May 2011	wishi	25	4	9		t5_2qmd0	False
1305622620.0	hd8su	Analysis of the Obfuscations used by Win32/Alureon	newgre	21	0	2		t5_2qmd0	False
1304130099.0	h0la9	.NET Decompilation [PDF, Master's thesis]	rolfr	24	2	2		t5_2qmd0	False
1297553690.0	fka4u	The slides from RECon 2010 have finally materialized	rolfr	25	3	3		t5_2qmd0	False
1296666136.0	fdwan	.NET Reflector no longer free with version 7 due out in March	mauvehead	22	3	11		t5_2qmd0	False
1296579242.0	fd659	Deroko of ARTeam - Tools and Code Repo		23	2	1		t5_2qmd0	False
1296212224.0	fao03	Opensource cryptanalysis library	adesnos	25	4	2		t5_2qmd0	False
1292517067.0	emvkq	When A DoS Isn't A DoS - BreakingPoint		25	4	4		t5_2qmd0	False
1292267159.0	el5pe	Reversing C++ [PDF]	usualsuspect	25	4	0		t5_2qmd0	False
1291843735.0	eiiti	Program Obfuscation and Cryptography Course		24	3	0		t5_2qmd0	False
1291473494.0	eg4tz	USA v. Crippen — A Retrospective	sanitybit	23	4	3		t5_2qmd0	False
1288036239.0	dw8dt	ARM Linux Shellcode		27	6	0		t5_2qmd0	False
1285791923.0	dko95	reversing android apps  - blog	wishi	23	3	2		t5_2qmd0	False
1267826664.0	b9tfz	Creating the smallest possible PE executable		23	3	6		t5_2qmd0	False
1264646478.0	av0vt	26C3: cat /proc/sys/net/ipv4/fuckups - A Talk about some network related fuckups and how to exploit them in a theoretical attack against a company network (links to mpeg4 video of the talk at bottom of the page)	the-fritz	25	3	4		t5_2qmd0	False
1259058335.0	a7m76	Generating shellcode which looks like English text [PDF]	cdman	23	3	1		t5_2qmd0	False
1258672330.0	a67qq	API Monitor is a software that monitors and displays API calls made by applications.		24	4	10		t5_2qmd0	False
1257251749.0	a0huw	The Cost of Password Brute Forcing on Amazon's EC2 Cloud	facuman	23	1	3		t5_2qmd0	False
1256142020.0	9wbg6	"Reverse Engineering for Vulnerability Analysis 102 
(Silberman/Portnoy, video)"	wtbw	25	4	2		t5_2qmd0	False
1247058270.0	8z9zm	Graphical interpretation of a file - with depth information	irid	27	7	6		t5_2qmd0	False
1243373531.0	8nft4	Spotify vs OllyDbg	cloudburst	24	2	0		t5_2qmd0	False
1234115769.0	7vt4n	The StuffIt X archive format, and a request	MarshallBanana	24	3	9		t5_2qmd0	False
1375973915.0	1jyimb	Taint analysis and pattern matching with Pin - PoC for Fun	jonathansalwan	21	2	0		t5_2qmd0	False
1375381315.0	1jid9m	Sophos Discovers ZeroAccess Using RLO	CecileMBAM	28	6	1		t5_2qmd0	False
1374557218.0	1iv85n	All of my bugs.	commentguy123	27	6	10		t5_2qmd0	False
1371086775.0	1g8kzc	HDD Firmware: Where to Start	Habstinat	26	5	17	"    
As the owner of a Lemote Yeeloong and an ardent free software supporter, I won't lie: I like [free software](https://gnu.org/philosophy/free-sw.html), and I want all the software I run to be free. I've done some research on the components of the Yeeloong and, contrary to what most might think, I've discovered that even the Yeeloong isn't completely free, although it's still the closest thing we've got to it as of yet. There are two components which still contain nonfree firmware on the Yeeloong:

0. The embedded controller, and
0. The HDD (320GB SATA).

At least there's a start for the embedded controller, as a project to replace it ([OpenEC](http://wiki.laptop.org/go/OpenEC)) already exists and the gNewSense developers are working to port it to the Yeeloong. So let's make this post about HDD firmware.

After asking around a little, I was very suprised to find that not only do *all* HDDs and *all* SSDs require firmware, but also that not a single company has released or leaked their hard drive firmware source code, and not a single person has made any notable attempt to replace their hard drive's firmware with a custom-hacked-up-version of their own firmware. The effects of designing a free software HDD firmware replacement will not only be ethical, though; others have thought of a few pragmatic consequences:

* Prevent problems like [this firmware bug, which essentially bricks your HDD unless you have a serial adapter](http://hackaday.com/2012/07/30/recovering-from-a-seagate-hdd-firmware-bug/) from happening ahead of time
* Make data forensics easier by providing more detailed debug commands

I'm sure there are other practical benefits as well; you can think them up yourself. 

So what I'd like to do is reverse engineer current HDD firmwares to develop a free (as in freedom) replacement firmware for HDDs (and maybe also SSDs). The craziest part: Going into this, I'm so clueless that I don't even know the extent of the ambition in this project.

My question is explained in the title of this post -- Where do I start? Here's a brief description of my technical background so far:

* I own the ""The C Programming Language"" by Kerninghan and Richie (2nd edition) and I've read through and understand the basic core of C, although I haven't gotten into the later more in-depth chapters on pointers and other features yet.  
* I know the basics of GNU/Linux (Debian and Arch-based).
* I once tried to learn MIPS assembly via a Wikibook, but I was only able to grind through so much before getting confused and moving on. I think the book was designed more for those who already know another assembly language.

For those that don't know, the Yeeloong is a MIPS machine, so I don't know how valuable learning x86 assembly would be.

Am I correct in assuming that my first step would be building or buying an [RS232-to-TTL adapter](https://sites.google.com/site/seagatefix/) and testing out sending commands to my hard drive? Does anyone here know any information about the role of firmware on an HDD? What exactly does firmware need to do, and what can it optionally do? I suppose a large part of the job would be downloading, extracting, and decompiling firmware updates from WD's website; what machine language would you suppose they would be written in? Not x86, right? Has anyone had any similar experience and advice to share? 

I'm only a sophomore in highschool, so any pointers would be great. I anticipate myself having a lot of time to work on this throughout the school year; I already have allocated a lot of my schedule next year to an independent study, and the more I think about it the more I'd like to spend it working on this. 

Here are some random statistics on the HDD in the Yeeloong, if they're needed:

    # hdparm -i /dev/sda
    
    /dev/sda:
    
     Model=WDC WD3200BPVT-00HXZT3, FwRev=01.01A01, SerialNo=WD-WXS1E62PXXT9
     Config={ HardSect NotMFM HdSw&gt;15uSec SpinMotCtl Fixed DTR&gt;5Mbs FmtGapReq }
     RawCHS=16383/16/63, TrkSize=0, SectSize=0, ECCbytes=50
     BuffType=unknown, BuffSize=8192kB, MaxMultSect=16, MultSect=16
     CurCHS=16383/16/63, CurSects=16514064, LBA=yes, LBAsects=625142448
     IORDY=on/off, tPIO={min:120,w/IORDY:120}, tDMA={min:120,rec:120}
     PIO modes:  pio0 pio3 pio4 
     DMA modes:  mdma0 mdma1 mdma2 
     UDMA modes: udma0 udma1 *udma2 udma3 udma4 udma5 udma6 
     AdvancedPM=yes: unknown setting WriteCache=enabled
     Drive conforms to: Unspecified:  ATA/ATAPI-1,2,3,4,5,6,7
    
     * signifies the current active mode

    # lshw -class disk -class storage
      *-ide                   
           description: IDE interface
           product: CS5536 [Geode companion] IDE
           vendor: Advanced Micro Devices [AMD]
           physical id: e.2
           bus info: pci@0000:00:0e.2
           version: 01
           width: 32 bits
           clock: 33MHz
           capabilities: ide bus_master
           configuration: driver=pata_cs5536 latency=64 maxlatency=64
           resources: irq:14 ioport:1f0(size=8) ioport:3f6 ioport:170(size=8) ioport:376 ioport:4c60(size=16)
      *-scsi:0
           physical id: 2
           logical name: scsi0
           capabilities: emulated
         *-disk
              description: ATA Disk
              product: WDC WD3200BPVT-0
              vendor: Western Digital
              physical id: 0.0.0
              bus info: scsi@0:0.0.0
              logical name: /dev/sda
              version: 01.0
              serial: WD-WXS1E62PXXT9
              size: 298GiB (320GB)
              capabilities: partitioned partitioned:dos
              configuration: ansiversion=5 signature=73eefab3

Thanks an awful lot for helping me out, reverse engineering gurus of Reddit. "	t5_2qmd0	True
1370887001.0	1g23w9	Summercon 2013: Hacking the Withings WS-30	stormehh	25	5	0		t5_2qmd0	False
1370760441.0	1fyyrd	A Model for Self-Modifying Code [PDF]	perror	32	12	3		t5_2qmd0	False
1369344682.0	1exhkr	Analyzing HP Thinpro Firmware	FireFart	25	5	0		t5_2qmd0	False
1366575544.0	1ctgie	Hooked on Mnemonics Worked for Me: reiat.py - Using Data-Flow to Track Dynamically Loaded APIs	rolfr	26	6	3		t5_2qmd0	False
1365732666.0	1c6hbb	"""Bringing Dutch alarm systems to their knees"" - elementary mistakes in alarm communication protocols."	cybergibbons	24	4	0		t5_2qmd0	False
1361902946.0	199sgv	Symantec's dossier on Stuxnet 0.5, circa 2007 [PDF]	rolfr	23	3	0		t5_2qmd0	False
1360124397.0	17zbey	Trying to add extra code into a binary	sylocybin	27	8	4	"So I want to preface this by saying that I'm self-taught to a fair extent and still learning, so I apologize if I missed something obvious. I also apologize for the formatting; I haven't figured out how to paste blocks of fixed-width font...

I have a basic Hello World program in C (./hello), and I'm trying to add a section of code to it. My goal is to add code that will execute before the original program does.

I'm using objcopy to do this - first, I wrote assembly instructions (jump.s) to represent my added code (currently just a jump to 0x8048000), and assembled this with gcc -c jump.s. I then called 

    objcopy --add-section mysection=jump.o --set-section-flags mysection=alloc,code --change-section-address mysection=0xXXXXXXXX

where XXXXXXXX represents the largest address I see if I run ""readelf -S hello"" plus the size of that section (so the last section that has a nonzero value in the Addr field).

Unfortunately, if I change the entry point of the program to the beginning of mysection, the code that's there is not at all what it should be, even though if I look at it under gdb before running it, the proper instructions are there. Thus, something is happening before jumping to the entry point that overwrites the memory in that location.

Unfortunately, the only documentation I've been able to find of objcopy is a list of the command-line options (which are rather unclear to someone of my experience level), and I feel like I just have no idea what's going on anymore. If someone could at least point me in the right direction, that would be really helpful."	t5_2qmd0	True
1355996163.0	155sfu	de4dot v2.0.0 .NET deobfuscator/unpacker	3405	22	3	0		t5_2qmd0	False
1354203077.0	13zvwv	Interconnection of Gauss with Stuxnet, Duqu &amp; Flame	goonmaster	26	5	0		t5_2qmd0	False
1353420951.0	13ic6u	GCC Explorer (interactive compiler)	samcrem	26	4	5		t5_2qmd0	False
1351981303.0	12l1jw	an overview of the Portable Executable and its malformations	simpleuser	25	4	0		t5_2qmd0	False
1345326662.0	yg16c	Looking for a 'Reverse Engineer Wanted' list of sorts (volunteer/open source - not employment)	regrunt	25	5	6	"Does anybody know of any todo-lists with protocols/file formats for bored REs with too much free time? Ideally something a bit more accessible and in demand than old DOS business apps or the image format for some medical scanner (been there).

I know the first suggestion always is to 'scratch your own itch', but everything I use is either open source or at least open standards - so no itches. Over the years, I've cracked the encryption and analyzed the netcode of a handful of apps and games/MMOs, wrote viewers for their proprietary file formats, etc. and always greatly enjoyed doing that but that was usually just for me personally and I'd love to see someone actually benefit from this."	t5_2qmd0	True
1343510006.0	xba99	Detecting Uninitialized Memory Read Access Bugs using Pin (a la Valgrind)	rolfr	26	6	0		t5_2qmd0	False
1342657511.0	wsgh8	Introducing: IDAscope 	virvdova	28	8	1		t5_2qmd0	False
1342566820.0	wq8jf	Multi-platform Backdoor with Intel OS X Binary.	virvdova	23	4	1		t5_2qmd0	False
1340823663.0	vp66l	Analyzing PDF Malware - Part 3B (Shellcode Edition) - SpiderLabs Anterior	Rnast	25	5	1		t5_2qmd0	False
1340531002.0	viq86	Bypassing ASLR and DEP on Adobe Reader X	wtbw	25	6	0		t5_2qmd0	False
1340384850.0	vfymm	Binary-Code Obfuscations in Prevalent Packer Tools [pdf]	NateLawson	24	2	1		t5_2qmd0	False
1340046195.0	v8j7n	RECON 2012 Keynote: The Case for Semantics-Based Methods in Reverse Engineering	rolfr	27	7	2		t5_2qmd0	False
1339523974.0	uyafm	How to debug Windows services	Spirotot	23	3	7		t5_2qmd0	False
1333312158.0	rofoq	weekend du hack	igor_sk	22	2	1		t5_2qmd0	False
1332863359.0	rfz4c	Static Analysis of x86 Assembly: Certiﬁcation and Robustness Analysis [PDF]	rolfr	25	6	0		t5_2qmd0	False
1323566940.0	n7ztj	Starting a RE Blog	NickCano	27	8	11	So, I'm starting a Reverse Engineering blog. I already have two posts, and I will hopefully be posting much more material, tutorials and code. For anyone who is interested in checking it out and hopefully sharing it, here is the link: http://revpp.blogspot.com/	t5_2qmd0	True
1315496755.0	k8wxg	Inline Hooking in Windows [PDF]	wishi	26	7	1		t5_2qmd0	False
1314172899.0	jsoar	Valhalla VX zine, issue #1 (August 2011)	rolfr	24	4	7		t5_2qmd0	False
1312362670.0	j7l0t	BinDiff and BinNavi on sale again -- 200 USD and 400 USD respectively :-)	tdullien	25	5	28		t5_2qmd0	False
1308055497.0	hzcu4	OpenConﬂict: Preventing Real Time Map Hacks in Online Games [PDF]	rolfr	25	5	6		t5_2qmd0	False
1307461058.0	htsvw	What do your environments look like?	atworkbored	22	3	30	"What kind of computer, OS, is in use around here?  What method is used when reversing? Sandboxing (vm? software?)?  Other tips and tricks one might have picked up that they care to share to mitigate others from making the same?

Thanks all."	t5_2qmd0	True
1306361373.0	hk5bf	A Guide to Undefined Behavior in C and C++		21	1	0		t5_2qmd0	False
1306242033.0	hiv10	Recon 2011 lineup	igor_sk	22	4	4		t5_2qmd0	False
1304997240.0	h7ug9	API Hooking/In-Process Patching/Memory Reading in Python	digduggg	25	4	7		t5_2qmd0	False
1304609438.0	h4vgc	Adobe Flash Player 0-day Exploit Analysis (CVE-2011-0611) - Secunia		24	6	1		t5_2qmd0	False
1302731786.0	gpeiu	Sony settles its lawsuit against GeoHot, apparently also dismisses suit against fail0verflow members; no precedent set	rolfr	28	6	4		t5_2qmd0	False
1296341443.0	fbj1p	RECon will return in 2011	rolfr	24	5	0		t5_2qmd0	False
1295731787.0	f77oa	Black Hat DC 2011 Briefings - Papers &amp; Slides		23	4	0		t5_2qmd0	False
1293756015.0	etx9e	Console Hacking 2010 [PDF]	rolfr	22	3	0		t5_2qmd0	False
1293415387.0	eru1u	Embedded Analysis - 27C3 public wiki	g0dmoney	22	3	0		t5_2qmd0	False
1291583825.0	egot5	AEG: Automatic Exploit Generation [PDF]	rolfr	20	1	4		t5_2qmd0	False
1291040616.0	edbrx	Exploiting stack overflows in the linux kernel	cydork	24	2	6		t5_2qmd0	False
1289849096.0	e6j2c	Sunbelt Blog: How the TLD4 rootkit gets around driver signing  policy on a 64-bit machine	gnewman	20	0	1		t5_2qmd0	False
1285168314.0	dhdeh	Code Audits 101 		22	2	4		t5_2qmd0	False
1284841536.0	dfqez	"dirtyJOE - Java Overall Editor (editor and viewer for 
compiled java binaries)"	wtbw	23	2	0		t5_2qmd0	False
1284378056.0	dd5mg	 Emokit: Hacking the Emotiv EPOC Brain-Computer Interface	Omega191	24	4	3		t5_2qmd0	False
1284153442.0	dc9c2	Reverse engineering the latest Facebook worm	wtbw	24	5	0		t5_2qmd0	False
1283174931.0	d77n7	Taking apart an iStorage Disk Genie (including security mechanism analysis)		22	2	2		t5_2qmd0	False
1282171231.0	d2rss	Portable Executable File Format – A Reverse Engineer View [10MB PDF] 		25	3	1		t5_2qmd0	False
1280236315.0	cu7fw	Reverse Engineering the Master Boot Record | Rants, Rambles, and Rhinos	stkerr	25	4	8		t5_2qmd0	False
1279826804.0	csl2e	Any possibility of a Reverse Engineering class on UofR?	Mindsketch	22	1	16	I realize that there is a lot of information out there pertaining to Reverse Engineering but I think it would be interesting to have a class to share ideas, offer help, etc. I know myself and probably a few other people would be more than willing to sign up. Is there any way one of you reversers would be interested in doing such a thing? 	t5_2qmd0	True
1272512178.0	bxk9u	Administrivia:  the RE reddit has had its 1000th submission	rolfr	24	2	4	The reverse engineering reddit has just had its one-thousandth submission.  Thanks to everybody who helps make this place as hard-core technical as it is, particularly those who submit good content and/or engage in meaningful discussions, and also the readers and moderators.	t5_2qmd0	True
1271847158.0	bu1nl	HyperDbg	wishi	21	2	4		t5_2qmd0	False
1269795541.0	bjcq6	There's a party at ring0 (and you're invited) [PDF]	wtbw	23	1	5		t5_2qmd0	False
1267027369.0	b5ytu	Ask ReverseEngineering: How long does it usually take experienced reverse engineers to reverse an unknown packer/protection?	mahmoudimus	23	2	18	"I understand this is probably a function of heuristics, but I am currently tackling an unknown protection (something I discovered in the wild) that is proving harder than what I've previously encountered.

Besides stepping line-by-line in assembly, which is what I'm doing right now, are there any faster/more efficient ways to go about doing this?

Thanks!"	t5_2qmd0	True
1264093896.0	asgqp	Operation Aurora: Clues in the Code	rolfr	21	2	1		t5_2qmd0	False
1259951658.0	ab5u7	OllyDbg v2.0 Beta 2 Final Released [ZIP]	wtbw	22	2	2		t5_2qmd0	False
1256642353.0	9y766	Smashing Adobe's Heap Memory Management Systems for Profit -- a nice, meaty writeup on the recent PDF exploit	rolfr	22	4	0		t5_2qmd0	False
1240260503.0	8e0eu	Bit Twiddling Hacks	rolfr	20	0	0		t5_2qmd0	False
1373505064.0	1i1s4a	libFirm - graph-based IR, optimizations, and code generation C library	igor_sk	19	2	0		t5_2qmd0	False
1373245637.0	1hu1ix	Using Coq to generate and reason about x86 systems code by Nick Benton, Jonas Jensen, Andrew Kennedy [PDF]	turnersr	26	8	1		t5_2qmd0	False
1372454198.0	1h9uwz	Making an ARM TrustZone rootkit [PDF]	igor_sk	25	5	4		t5_2qmd0	False
1369168225.0	1esc56	Pwn2Own 2013: Java 7 SE Memory Corruption	f00sp4m	26	7	0		t5_2qmd0	False
1369143637.0	1erh0r	Tools for Examining XOR Obfuscation for Malware Analysis	perror	24	6	9		t5_2qmd0	False
1364312313.0	1b1nxy	Understanding DMA malware [PDF]	ffffdddddssss	20	1	0		t5_2qmd0	False
1363173340.0	1a7jws	A Novel Disassemble Algorithm Designed for Malicious File	simpleuser	27	10	5		t5_2qmd0	False
1361042928.0	18nfsi	A fun little tutorial	CrankyFlamingo	23	6	3	"Decided to check out the Cheat Engine tutorial - very fun, recommend it.
(Gets installed with the program. Be sure to un-tick the search bar optional addons)

http://www.cheatengine.org/
"	t5_2qmd0	True
1359397872.0	17fwf4	Reverse-engineering the Intel 8085 ALU	igor_sk	26	5	0		t5_2qmd0	False
1358099309.0	16hz9z	Test Suite for Disassemblers?	94c3	23	2	11	Is anyone aware of a test suite that can be used to evaluate a disassembler? In particular, I'm interested in the x86.	t5_2qmd0	True
1352723592.0	132657	An Example for Hidden NULL Pointer Bug	N3mes1s	28	9	0		t5_2qmd0	False
1352166325.0	12pbqv	SizeOfStackReserve As Anti-Attaching Trick	waliedassar	23	2	4		t5_2qmd0	False
1349885352.0	1199vh	Phalanx 2 Revealed: Using Volatility to Analyze an Advanced Linux Rootkit	transt	25	6	0		t5_2qmd0	False
1345840622.0	yru6p	Reverse Engineering Network Protocols	secunder	27	8	7	I'm fairly new to the reverse engineering scene (and programming in general) but find it to be extremely fun. I've found a large amount of resource for reverse engineering binaries. But is there a different method for reversing network packets? Such as using wireshark? Or is it easier to reverse the binary and see how it is constructing packets?	t5_2qmd0	True
1344303284.0	xss3i	CTF calendar and team stats	igor_sk	26	8	2		t5_2qmd0	False
1344124138.0	xox31	A new OpenSecurityTraining class on Malware RE	OpenSecurityTraining	21	4	3		t5_2qmd0	False
1344055736.0	xnpy7	Hex-Rays 2012 Plugin Contest still open	igor_sk	20	1	0		t5_2qmd0	False
1343331350.0	x7fea	"From Bahrain With Love: FinFisher’s Spy Kit 
Exposed? – The Citizen Lab"	igor_sk	23	5	0		t5_2qmd0	False
1342993938.0	wzezk	Help with Getting into the RE Industry	Chuuy	23	3	27	"I'm a 17 year old who is attending Bradley University next semester as a computer science major. I slowly started programming and reverse engineering on my own time about five years ago and I have learned that I have a true passion for these activities. However, even though I love programming, my true love is for reverse engineering. When I want to grow up, I want to be a reverse engineer.

The problem is that I have no idea how to get myself into that industry. Unlike programming in which programmers are literally everywhere, reverse engineers are rare. I have never met anybody who has interest in low-level code such as assembly, let alone a reverse engineer. I have searched for reverse engineering job applications and internships, but as you can imagine, these applications are rare and have high requirements. I simply do not know how to find an internship or entry-level job that can give me experience with reverse engineering.

Another problem is that I am not sure how to display my reverse engineering abilities. I have had a couple of programming jobs in the past and while I am sure that experience will help me find any type of job, I do not feel like it is enough to show employers that I am a competent reverse engineer. Most of the things I have reverse engineered include games, anti-cheats, a few viruses, a few applications, and a few crackmes. Apart from reverse engineering viruses, I do not believe any of the things that I have reverse engineered can be looked at as professional because my activities can be viewed as immoral or even illegal. Everything I have reverse engineered was primarily to learn and to practice something I enjoy doing, but also because I wanted to hack/crack an application or because I wanted to satisfy my curiosity. If programmers want to have something truly professional on their resume, they can always contribute to open source or start a project that can help people. I was wondering if there was something similar that a reverse engineer could do.

I was wondering if a professional within the industry could give a young reverse engineer some advice. Thanks for reading,
~Chuuy"	t5_2qmd0	True
1342388830.0	wlz4z	Rovnix bootkit framework updated. Details about polymorphic VBR encryption, hidden FS changes and new payload (by @matrosov)	virvdova	22	5	1		t5_2qmd0	False
1340657867.0	vlb6v	Compiler Internals: Exceptions and RTTI -- by igor_sk [PDF]	rolfr	20	1	1		t5_2qmd0	False
1337194325.0	tqclq	Intercepting System Calls on x86_64 Windows	jbremer	23	5	15		t5_2qmd0	False
1335927334.0	t2not	Lessons Of Static Binary Analysis [Video]	sourceconference	23	4	4		t5_2qmd0	False
1332065254.0	r1wif	Silicon Pr0n: IC Reverse Engineering Wiki	nmesisgeek	26	5	19	"Wiki for reverse engineering of ICs and electronics hardware. We're recruiting, contributors are welcome!

EDIT: The link got corrupted somehow, NoScript might have been at fault. http://siliconpr0n.org/"	t5_2qmd0	True
1331855577.0	qyky7	Pwn2Own Challenges: Heapsprays are for the 99%	rolfr	25	8	3		t5_2qmd0	False
1331669896.0	qv1bc	Hacking Windows CE driver implementations for fun and profit	BruceJillis	24	7	1		t5_2qmd0	False
1331029976.0	qk096	[video] Semi-Automated Input Crafting by Symbolic Execution, with an Application to Automatic Key Generator Generation	rolfr	20	2	7		t5_2qmd0	False
1328482614.0	pcdwn	OS X VM CrackMe	nilbytes	24	4	7	"I've written a small OS X VM CrackMe and am curious to see how easily people can break it. I've sent it off to a few people already but wanted to see what some of the RE minds here were able to do. Here it is: http://www.mediafire.com/?vr8zs43nfq0l8g8

Feel free to post name/code combos for proof or source to a keygen. I'm also willing to answer any questions about it so ask away."	t5_2qmd0	True
1327926443.0	p2xfp	Analysis-Resistant Malware [PDF]	rolfr	22	4	1		t5_2qmd0	False
1324321115.0	nirwd	Listing loaded shared objects in Linux	praddo	24	4	16		t5_2qmd0	False
1318437351.0	l9pfd	Static analysis for searching backdoors	XY2011	31	11	1	"Static analysis may be used both for good and for bad purposes. Since code analysis helps developers to detect buffer overflows, stack overflows and other similar defects, an intruder can also do such things. By studying weak points of software, a hacker can choose an object for attack faster. That is, he does not need to review a huge amount of code - a static analyzer will do a part of work for him. It will tell him where the code is especially vulnerable so that the hacker may go on to the next stage of his work, i.e. estimating if he can use the code defects found for his purposes and how.

It seems to me, many of the errors, described in these articles are vulnerable:

[Chromium]( http://www.viva64.com/en/a/0074/)

[Miranda](http://www.viva64.com/en/a/0070/)

[Apache HTTP Server](http://www.viva64.com/en/b/0105/)

What do you think of it?
"	t5_2qmd0	True
1314594828.0	jxomd	Open Source database of android malwares	adesnos	23	5	0		t5_2qmd0	False
1314187169.0	jss53	APKInspector Android GUI Tool	digduggg	26	5	0		t5_2qmd0	False
1313184205.0	jh5ib	New subreddit:  /r/RELeaks (see comment for details)	rolfr	26	8	5		t5_2qmd0	False
1311278976.0	iw58f	On the Vulnerability of FPGA Bitstream Encryption against Power Analysis Attacks [PDF]		23	5	1		t5_2qmd0	False
1309189728.0	iaerv	MS11-030: Exploitable or Not?		22	2	7		t5_2qmd0	False
1307996881.0	hysxk	Job: Security Analyst and an Atari 2600 Crack-me	dionthegod	22	4	13	"My company, Independent Security Evaluators, needs to fill some ""security analyst"" positions.  The positions require some reverse engineering skills.  That makes /r/reverseengineering a good place to search for candidates.

We're a small consulting company based in Baltimore, MD.  Moving to Baltimore is supposed to be required, but you never know.  If you only know Baltimore from ""The Wire"", don't discount it yet.  Send me an e-mail if your only hold-up is Baltimore.

The job is quite diverse.  Over the last year, this group has done a handful of binary DRM audits for consumer devices, a few desktop binary audits, some binary mobile application audits, a few source audits (C/C++/C#/Python) and 2 web app audits.  The ability to get into and understand an unknown codebase quickly is useful.  We also do some vulnerability discovery stuff, if you're into that.  The company was started by a Johns Hopkins professor and his students, so there is a focus on research and learning -- you will have some time each week to dedicate to research and publishing your work is encouraged.  A large majority of the jobs we get are interesting enough and weird enough to hold my fleeting attention.          

Feel free to send me an e-mail and we can discuss ISE further:
dion@securityevaluators.com
I'll also respond to comments on this thread.     

Much of the work we've done recently has been ""embedded"".  Lots of ARM, but we've done MIPS, SH4, and other weirder things in the past.  As an excuse to learn more about the Atari 2600, I created a crack-me to help you figure out if you'd like the kind of work we do.  It also lets you work on something that isn't locked into your preferred platform (unless you're some kind of weirdo).

The challenge can be found here:
http://pastebin.com/CtPKn9bp

NOTE: This little challenge isn't a required part of the application process to ISE.  I just wanted an excuse to spend my research hours playing with a video game system :)  Additionally, if you like the crack-me, then you should like the job.

Ops, I assume job postings are alright.  If not, no hard feelings when you delete the thread.

EDIT 1:
We don't do cleared work and, AFAIK, there is no plan to go that route.
"	t5_2qmd0	True
1305502957.0	hc4yt	Nintendo 3DS Security	dionthegod	24	6	3	"I've read that the 3DS contains some security features to brick a device found to be using a pirate cart or firmware (see: http://ds.ign.com/articles/112/1124753p1.html).

I've done a very small amount of searching with no luck; does anyone have any pointers to information about the 3DS hardware/firmware features present?

I'm not interested in cart piracy. I *am* interested in accurate and detailed information about the system and it's capabilities."	t5_2qmd0	True
1304412421.0	h30g0	How do *you* transfer knowledge from one IDB to another ?	simpleuser	23	3	10	"there are many possibilities, but I would like to know which one *you* actually use: Flirt ? .MAP ? export .IDB to .IDC ? Bincrowd ? Python script ? CollabREate ?
and what do you transfer:
only names and comments ? + enum and structs ? more (register renaming, code collapsing...) ?"	t5_2qmd0	True
1301560896.0	gfeec	PE Infector - simple Windows PE infections	wishi	22	2	0		t5_2qmd0	False
1300464441.0	g6ifa	StraceNT - A System Call Tracer for Windows 		22	1	5		t5_2qmd0	False
1296803305.0	ff26v	Alternatives to IDA?	someone13	23	5	15	"So, I was wondering recently if there were any good alternatives to IDA for static analysis?  I'm not too worried about disassembling anything except PE files on Windows, so does anyone know of or use anything else?  I also don't mind if it has no debugger - I'm solely concerned with static analysis.

Slightly related to this: does anyone know the algorithm (general idea, specifics, any information at all) that IDA uses?  The free version won't let me disassemble itself, so I'm unable to determine what type of algorithm it uses.  It's clearly some type of recursive disassembly, not linear-sweep, and it is pretty good at dealing with ""broken"" code.

Thanks in advance!"	t5_2qmd0	True
1294567130.0	eywvc	Geohot releases PS3 3.55 jailbreak	ethicszen	30	10	3		t5_2qmd0	False
1293942633.0	eusrf	Android Reverse Engineering Primer	sanitybit	22	4	0		t5_2qmd0	False
1293236182.0	er3zx	Any good jobs in binary analysis and software security?	danreynaud	24	6	24	"I'll start: as an associate specialist in binary analysis at UC Berkeley, I earn $48k a year. It's not great given the price of housing in the Bay Area but it's a temporary academic position and the actual work is fantastic. I would be glad to hear about how other people are doing.

EDIT: this post is not about getting a new job, it's about the people out there doing this professionally. Please describe:

* your current job title
* your income
* the pros and cons of your current position"	t5_2qmd0	True
1288810961.0	e0rp0	JaZeus: When Zeus meets Java 	inreverse	22	3	0		t5_2qmd0	False
1285670374.0	djxji	GPU assisted Malware	wishi	22	4	3		t5_2qmd0	False
1279436266.0	cqu0n	Good Resources for Learning Reverse Engineering?	aw4lly	21	2	11	"Hey,

I'm looking at learning how to reverse engineer software and was wondering how I should go about learning. What tips and tricks people have that helped them to learn.

I was also wondering what resources people use. What software, forums, websites, tutorials etc help you in reverse engineering software.

Thanks
"	t5_2qmd0	True
1267768346.0	b9iez	AskREddit: Ubisoft's new DRM, any idea how it was broken?	voltagex	23	5	22	"From what I have read:

* Safedisc was initially emulated, then removed from games

* Starforce was run and broken in some kind of VM 

* Steam's DRM can be un-linked from an executable somehow.

Does anyone have any ideas how Ubisoft's new scheme was broken? I find all this stuff incredibly interesting, it's just a shame it has to be so shady and 'underground'"	t5_2qmd0	True
1266141698.0	b1w00	"Reverse Engineering the iPod Shuffle 3G headphone 
remote protocol"	wtbw	21	2	7		t5_2qmd0	False
1260372363.0	act4o	Ask RE Reddit: I'm writing a disassembler, what are the features you would like to have?		23	4	32	"Ideas are welcome. Patchs and code are more than welcome :)

For early access to a very ""green"" version of it you can go to:

http://github.com/agustingianni/Disassembler"	t5_2qmd0	True
1259185363.0	a870n	EasyHook - The reinvention of Windows API Hooking		20	2	2		t5_2qmd0	False
1256381203.0	9xazo	Toad Houses Disassembled  - Programming stuff	wishi	20	0	0		t5_2qmd0	False
1253147824.0	9lapy	It's Christmas, kiddies -- BitBlaze's Vine was released today	rolfr	23	2	4		t5_2qmd0	False
1248579632.0	94lsk	winternals (sub-reddit): Windows OS internals and programming		22	1	0		t5_2qmd0	False
1248461132.0	94a41	Pex - Software Cracker?	reidhoch	28	8	1		t5_2qmd0	False
1242133451.0	8jtou	Reverse-Engineering DOS 1.0 - Part 2: IBMBIO.COM	phn1x	23	4	1		t5_2qmd0	False
1233954357.0	7vgz7	Classic Paper on Reverse Engineering Skype Part 1 [PDF]	rolfr	19	1	0		t5_2qmd0	False
1223384837.0	75oz4	How We Learned to Cheat at Online Poker	cavedave	22	3	1		t5_2qmd0	False
1222249143.0	737le	coca-cola vending machine manual (pdf)	cavedave	24	3	3		t5_2qmd0	False
1374786773.0	1j1yds	Kryptonite, an proof-of-concept, open-source, LLVM obfuscating compiler	rolfr	22	3	0		t5_2qmd0	False
1370871554.0	1g1kq7	Diablo Is A Link-time Optimizer for Obfuscation and more...	perror	23	3	1		t5_2qmd0	False
1370420679.0	1fpl23	AntiTaintDroid (a.k.a. ScrubDroid) source code released	nick_name	25	5	2		t5_2qmd0	False
1368699221.0	1efyf7	NoSuchCon 2013 talks	igor_sk	22	4	0		t5_2qmd0	False
1367886413.0	1dtv54	Revisiting Mac OS X Kernel Rootkits [PDF.ZIP]	rolfr	24	6	11		t5_2qmd0	False
1364455242.0	1b5zbt	an ANTLR grammar to parse x86 assembler instructions	simpleuser	25	8	12		t5_2qmd0	False
1364412023.0	1b4m15	IDA Pro plugin for identifying functions on C++ and COM objects virtual tables	srw	25	7	8		t5_2qmd0	False
1362660400.0	19ubu2	IDA: What's new in 6.4.130306	simpleuser	27	8	19		t5_2qmd0	False
1362157365.0	19gye4	The source code of DroidScope has been released.	hengyin	23	4	0	"If you read the paper ""DroidScope: Seamlessly Reconstructing the OS and Dalvik Semantic Views for Dynamic Android Malware Analysis"" published in USENIX Security and like to use it, it is available now:
https://code.google.com/p/decaf-platform/
"	t5_2qmd0	True
1361820975.0	197iev	Injecting a DLL in a Modern UI Metro Application	srw	30	11	0		t5_2qmd0	False
1360622130.0	18c4uv	New industry &amp; academic conference, Recent Advances in Reverse Engineering (R.A.R.E.), call for papers announced	rolfr	22	5	2		t5_2qmd0	False
1359648436.0	17mucd	Hidden Markov Models To Detect Metamorphic Malware by Venkatachalam and Stamp [PDF]	turnersr	25	7	0		t5_2qmd0	False
1359444397.0	17hhpt	Wow64-Specific Anti-Debug Trick	waliedassar	26	7	0		t5_2qmd0	False
1357638010.0	166cyw	An Analysis of the PlugX RAT	llkc	20	4	4	"In this blog post, we deliver an analysis of PlugX, a Remote Access Trojan which has seen increasing use in recent targeted attacks. We offer new insights into the development and deployment of this RAT, describe the functionality of its plugins, detail several interesting mechanisms which it employs to evade antivirus software and User Access Controls, and explain how to decode on-disk artifacts or C&amp;C traffic of PlugX.

http://lastline.com/blog.php"	t5_2qmd0	True
1357585340.0	164t97	Software Similarity and Classification [Book]	samcrem	24	6	6		t5_2qmd0	False
1354955501.0	14hp9h	Windows Internals: SkipThreadAttach	waliedassar	22	5	0		t5_2qmd0	False
1354343967.0	143eku	Z3Py - guide	erseal	21	5	0		t5_2qmd0	False
1353235924.0	13e7zm	Why do my strings look like strings and not like strings?	AaronOpfer	27	9	4	"So I'm debugging this application that has chat functionality. I set a conditional logging breakpoint on the function I believe is responsible for printing the chat text on the screen. I noticed some extraordinarily strange behavior regarding its parameters.

Sometimes, when the username or message of the speaker are short strings, pointers to the strings themselves are passed to the function. So the stack appears to be something like 

    RETN to Address
    UNICODE ""User""
    UNICODE ""Test""
    ...

So far so good. Except that I noticed that sometimes I didn't get this parameter format. Other times it looks like this...

    RETN to address
    0xAABBCCDD ; pointer to some memory structure
    0xEEFFGGHH ; pointer to some other memory structure

Yeah, just some totally arbitrary pointers. Except that I investigated more closely, and following those pointers gives me a structure that's about 0x30 bytes in size (IIRC), the first four bytes of which is typically a pointer to the unicode string, or just some garbage bytes. About +0x24 into the structure is a DWORD that has the string length, and zero is a valid value for it (which is why that pointer can have garbage in it I guess). I am pretty certain that this structure is a C++ STL string (it's using the MSVR100 runtime). 

So here's the question:

Why does this function receive C-style strings when the strings are &lt;8 characters long, and otherwise receive pointers to structures that represent strings (probably STL)?

Is this an optimization in the MS runtime? I guess a 7 character + one null character string would take up exactly 16 bytes, and anything longer than that seems to be shoved into this weird string structure. Maybe it reallocates things from heap memory into larger pages after a certain size? It's confusing because I don't understand how the code can tell when it has received one parameter type over the other."	t5_2qmd0	True
1351630910.0	12cxrw	Fuzzing/Reversing an API for a PCI Card		21	3	10	"I recently inherited an older PCI card from a company that no longer exists.  The card is designed to do high frequency cryptoprocessing and I thought it would be fun to tinker around with it and make some C apps using its API.  Unfortunately, the API is not readily available and the company isn't around to provide it.  

What are some tools I should look at using for trying to fuzz out commands from it?  It's a PCI card that also has a serial interface for the API.  "	t5_2qmd0	True
1351564407.0	12beud	Binary code obfuscation through C++ template metaprogramming [PDF]	rolfr	21	3	1		t5_2qmd0	False
1351529428.0	12a6xm	Ending the Love Affair with ExploitShield – Trail of Bits	dguido	22	3	0		t5_2qmd0	False
1350821373.0	11uaer	Picture authentication in Canon DSLR (Original Decision Data): the next step after Elcomsoft presentation, some code and pictures samples to play with it. 	lclevy	25	7	0		t5_2qmd0	False
1348259150.0	109l2w	Results of Hex-Rays' Plugin Contest for 2012	rolfr	20	2	0		t5_2qmd0	False
1346617328.0	z8tdc	What hardware is needed for ROM dumping?	heapface	32	13	6	"I recently got into re-making old classic GBA games in C using either SDL or Allegro, and using some sprites I found online. However, I wanted to know HOW these sprites actually get extracted and how to reverse engineer a ROM.

I have been searching for a few hours on some hardware to acutally **dump** my ROM (GBA) and have only come upon software... which is no help since I don't have it dumped onto my PC yet.

-- The only thing I found was [this](http://www.gameboy-advance.net/flash_card/game_bank.htm) but I don't know if that is what I am looking for.

So, I decided to come here, and see if any of you clever people knew what kind of hardware I would need to dump a ROM (or to help me out), export it to my computer, and have fun with it.

Any help appreciated.
Thanks"	t5_2qmd0	True
1344527831.0	xxzyg	maximum possible code execution in the PE header	peterferrie	21	3	4		t5_2qmd0	False
1342930840.0	wyd75	Pedram is soliciting comments regarding the future of OpenRCE	rolfr	24	5	16		t5_2qmd0	False
1341798172.0	w8xjd	Day 2 Intro RE videos posted	OpenSecurityTraining	21	2	0		t5_2qmd0	False
1341612772.0	w5fwr	furnace-avm2: ActionScript3 VM static analysis library, decompiler and deobfuscator.	postmodern	19	0	0		t5_2qmd0	False
1340318072.0	velt2	Modifying Binaries: Adding a Menu Item To An Existing Binary	RandomNetzley	32	14	3		t5_2qmd0	False
1336180054.0	t7qsa	Help needed for a beginner. 	ptremblay87	26	10	22	"Hi ! I'm new to reverse engineering and I reversed the game Solitaire on Windows 7 with IDA Pro 5.2. I have some questions for you guys : 

1) How can I break on any key pressed event ? I tryed to break on every GetKeyState() and it don't break. I also tryed TranslateMessage() but the only one that break does it every time in a loop. There is no GetAsyncKeyState(). 

2) Is there any way to set a breakpoint on every occurence of a function call like in Ollydbg ? I can't manage to find a way in IDA Pro. 

3) Is there any good online tutorial that I can read to learn more about Reverse Engineering ? I found http://www.codebreakers-journal.com/ and I want to know if you guys know others tutorials like this. "	t5_2qmd0	True
1335147879.0	snj93	Solaris 2.5.1 and 2.6 crashes on modern Intel CPUs	yuhong	21	3	0		t5_2qmd0	False
1333047482.0	rjn79	OllyDbg Resource Table Parsing Integer Overflow	waliedassar	23	4	0		t5_2qmd0	False
1330479702.0	qalld	Discovering JTAG pinouts	igor_sk	22	4	0		t5_2qmd0	False
1325776346.0	o4084	Reverse Engineering Wargame	pwnwaffe	26	8	9		t5_2qmd0	False
1323370709.0	n55ix	How to hide injected DLL in Windows	praddo	23	6	1		t5_2qmd0	False
1323166742.0	n2dgj	Attacking Intel TXT® via SINIT code execution hijacking	gannimo	23	7	2		t5_2qmd0	False
1320756913.0	m4qsg	Sleepy -  Code Profiling software	digduggg	24	6	0		t5_2qmd0	False
1320418267.0	m0bj5	Can you crack it?	n3zumi	21	4	18		t5_2qmd0	False
1320342446.0	lz7tj	Analyzing an executable file	NotSoNoveltyAccount	26	8	15	"I have an executable file here and I want to figure out some information about it such as the compiler used, resources, etc.  I know there's a number of programs out there which can do this, but for some reason they've slipped my mind.

I really need to know what language this executable is written in, and I know there's tools to do this and much more, but what are they?"	t5_2qmd0	True
1318275097.0	l7e4s	"New features in Hex-Rays Decompiler 
1.6"	igor_sk	20	4	0		t5_2qmd0	False
1315586901.0	ka6yy	"D-Link DCS-2121 and the state of 
embedded security"	igor_sk	20	3	2		t5_2qmd0	False
1313369259.0	jivn8	Malware Analysis Challenge to Strengthen Your Skills	5d41402abc4b2a76b971	22	5	3		t5_2qmd0	False
1309247399.0	ib4bw	GDB init (with colored registers) for Mac	wishi	21	3	2		t5_2qmd0	False
1300315144.0	g5gwr	TDL3, Faizan Haider, Fahim Shamshad, Mohammad Faheem, Raymond Davis		21	2	9		t5_2qmd0	False
1300276482.0	g52wv	Static Analysis of x86 Executables (Doctoral Dissertation, September 2010) [PDF]	samcrem	19	3	3		t5_2qmd0	False
1293851485.0	euez9	How can I get an entry job in reverse engineering or computer security in the Bay Area, and how much would I earn?	moving2bayarea	22	3	20		t5_2qmd0	True
1292832856.0	eoo6z	Last chance to fund OpenVizsla	rolfr	19	1	6		t5_2qmd0	False
1291838044.0	eigz2	On the effectiveness of DEP and ASLR [MS Blog]		20	2	0		t5_2qmd0	False
1290017602.0	e7mn6	Any beginners intreseted in group study or collective learning?	NinjaYoda	26	7	12	"I am really interested in Reverse Engineering. I got myself [Reversing: The secrets of Reverse Engineering book](http://www.amazon.com/Reversing-Secrets-Engineering-Eldad-Eilam/dp/0764574817) and finished the first chapter. Its seems really promising albeit challenging. Is there some one who has just started or wants to start but don't wanna row the boat all by yourself?    


Working in groups always makes you learn more by answering questions or clearing your doubts. It makes you go an extra mile sometimes and there is always the fun part or knowing some one going through the same pain. We can share interesting challenges, articles or whatever we can find. Help fellow friends stay motivated and focused.

  
**Also, advance reversers are always welcome to pitch in and contribute as they feel.**"	t5_2qmd0	True
1289972710.0	e7dmf	RevEng: What are you working on right now?	Cm7b5	21	1	18	"What are you working on right now?  Be specific if you can, obscure if you can't.

I'm reversing the firmware of an RTU in a SCADA system.  It's m68k-based.  I had to break out some old-school m68k documentation."	t5_2qmd0	True
1289346637.0	e3qon	Kernel 0-day - read the uninitialized bytes of the kernel stack	bigmac	19	1	5		t5_2qmd0	False
1288974495.0	e1qzn	DTrace - Applied Reverse Engineering on OSX [PDF]		20	3	0		t5_2qmd0	False
1288201228.0	dx9wh	Hosting backdoors in hardware		23	5	0		t5_2qmd0	False
1283870379.0	damou	Anyone knows of good universities where one can do a master's degree on reverse engineering, vulnerability research and static/dynamic code analysis?	gbr0101	24	5	9	"Anyone knows of good universities where one can do a master's degree on reverse engineering, vulnerability research and static/dynamic code analysis?

Here follows the ones I know, with its respective research groups:

- University of California - Berkeley (BitBlaze and WebBlaze groups)
- University of California - Santa Barbara (Return-oriented programming, etc)
- CMU - CyLab
- Stanford University (Danwson Engler et al)
- Loria - France (http://lhs.loria.fr/)

Thanks."	t5_2qmd0	True
1280784260.0	cwkg5	IDAQ: The result of 7 months at Hex-Rays	cloudburst	20	1	0		t5_2qmd0	False
1280451754.0	cvaru	Crash Analysis with BitBlaze [PDF, Whitepaper]	rolfr	18	1	3		t5_2qmd0	False
1279370150.0	cqmd7	"Game Hacking for beginner with Video and Source 
Code. Will be suitable for beginners."	Gamerr	24	7	0		t5_2qmd0	False
1279037014.0	cp3b3	How to really obfuscate your PDF malware	rolfr	20	1	0		t5_2qmd0	False
1278888591.0	coffn	Romhacking.net - Documents		20	1	1		t5_2qmd0	False
1269984485.0	bkdjy	An analysis of fuzzing 4 products with 5 lines of Python (Charlie Miller's CSW presentation)[PPT]	jsco	23	4	5		t5_2qmd0	False
1267126641.0	b6iax	Blog post on discovering MS10-009 via diffing and triggering it with scapy	rolfr	19	1	1		t5_2qmd0	False
1266366421.0	b2woj	Filling Adobe's heap	wishi	18	2	0		t5_2qmd0	False
1261081053.0	afv5e	IDA 5.6 beta available; this is the feature list	rolfr	19	2	2		t5_2qmd0	False
1249852352.0	99129	Testing CPU Emulators	phn1x	20	3	1		t5_2qmd0	False
1248904008.0	95sd5	Black Hat USA 2009 Papers &amp; Slides	cloudburst	20	3	1		t5_2qmd0	False
1222724116.0	749qo	Return-Oriented Programming [PDF]	rolfr	20	3	5		t5_2qmd0	False
1372352451.0	1h6stc	Reversing and Auditing Android's Proprietary Bits	jduck1337	20	4	4		t5_2qmd0	False
1372036108.0	1gxuo5	Python bindings for the Hexrays Decompiler	turnersr	20	3	0		t5_2qmd0	False
1371732987.0	1gq2vs	Stack Analysis of x86 Executables [PDF]	perror	27	8	0		t5_2qmd0	False
1371564527.0	1gl24n	FuzzBALL binary symbolic execution tool was open sourced	galapag0	21	3	1		t5_2qmd0	False
1371337673.0	1gfabk	Skype binary	huyvun	31	13	7	Skype's anti-reverse engineering technology is very strong - do you know if they built their own code, or use an existing libary .	t5_2qmd0	True
1370848931.0	1g170k	Concolic execution - Taint analysis with Valgrind and constraints path solver with Z3	jonathansalwan	24	8	7		t5_2qmd0	False
1370820479.0	1g0dfr	Dion Blazakis' half of the ASLR/timing attacks speech at SummerCon 2013 [PDF]	rolfr	19	3	0		t5_2qmd0	False
1369949227.0	1fd2p2	Sally: A Tool for Embedding Strings in Vector Spaces	laks316	22	6	3		t5_2qmd0	False
1366860060.0	1d258y	Axel Simon's research group published the beginnings of an x86 static binary program analysis framework	rolfr	22	6	2		t5_2qmd0	False
1366298321.0	1clymv	Noriben – Your Personal, Portable Malware Sandbox	grecs	18	3	2		t5_2qmd0	False
1365577406.0	1c1sl4	Made a GitHub repo for Hopper Disassembler scripts. For anyone doing binary analysis on OS X these sure come in handy.	phracker	23	7	2		t5_2qmd0	False
1363822817.0	1ap4lw	Intel SIMD architecture [PDF, slides]	rolfr	23	4	0		t5_2qmd0	False
1361977377.0	19bv54	Binwalk v1.0 now has Python support	jwcrux	23	7	5		t5_2qmd0	False
1358469563.0	16sb5q	A Real Random VirtualAlloc	waliedassar	26	7	0		t5_2qmd0	False
1356062850.0	157ivl	Valhalla VX Zine Issue #3	rolfr	22	5	0		t5_2qmd0	False
1354835929.0	14etic	2012 LLVM Developers' Meeting Presentations Slides and Video	HockeyInJune	20	3	0		t5_2qmd0	False
1354224277.0	140jhd	Tools for file entropy and analysis?	jerzmacow	24	6	13	I was wondering if there are any well known tools that help with examining an arbitrary file to get clues as to what it actually is. Carving is really useful, but what if it's plaintext that's just bitshifted or a simple crypto algorithm? Are there any tools that analyze data for entropy and patterns?	t5_2qmd0	True
1353795413.0	13qcrq	SuppressDebugMsg As Anti-Debug Trick	waliedassar	21	2	0		t5_2qmd0	False
1353307298.0	13fuek	Windows Kernel Font Fuzzing and Exploitation	N3mes1s	24	5	0		t5_2qmd0	False
1352908201.0	136nw5	MUI files under the hood	N3mes1s	20	2	1		t5_2qmd0	False
1351473908.0	1290fk	10 years later, which vulnerabilities still matter? [PDF, slides]	rolfr	21	3	1		t5_2qmd0	False
1350411592.0	11kylx	Reverse Engineering Poison Ivy's Injected Code Fragments 	transt	24	6	0		t5_2qmd0	False
1348781988.0	10l2h2	Understanding TLS Callbacks	RandomNetzley	36	19	1		t5_2qmd0	False
1346978497.0	zha9s	Cracking Visual Basic Binaries, Pt. 2	RandomNetzley	34	19	3		t5_2qmd0	False
1346357967.0	z3gh3	Understanding the Dalvik Virtual Machine	virvdova	19	2	1		t5_2qmd0	False
1344898485.0	y64xu	Leaking information using timing attacks on hash tables, part 2	rolfr	19	3	0		t5_2qmd0	False
1344170148.0	xpns7	Simple Bug Finding Tools: Fugue (I)	joxeankoret	21	4	4		t5_2qmd0	False
1342657529.0	wsgi0	Windows 8 and Safe Unlinking in NTDLL	virvdova	20	3	0		t5_2qmd0	False
1340762516.0	vnvo8	CreateRemoteThread vs. RtlCreateUserThread	waliedassar	19	4	0		t5_2qmd0	False
1340679242.0	vlxqy	Pwnie Awards 2012 nominations open; submit your favorite stuff	rolfr	20	2	0		t5_2qmd0	False
1340340688.0	vf766	Electronic voting machine reversing	sergio_rivaldi	22	5	3		t5_2qmd0	False
1338242228.0	u9b8x	Flame: Massive cyber-attack discovered, researchers say	newgre	23	6	3		t5_2qmd0	False
1338030188.0	u5usg	Formal verication of machine-code programs [PDF, Ph.D. thesis]	rolfr	21	4	2		t5_2qmd0	False
1337663037.0	tyt0k	Administrivia:  if you're going to report something, send moderator mail describing why you did it	rolfr	24	5	2	Many comments and submissions that are innocuous end up getting reported to the moderators.  For example, [this comment](http://www.reddit.com/r/ReverseEngineering/comments/tsavj/so_you_like_reversing_and_know_stuff_about/c4pfv9w) and [this submission](http://www.reddit.com/r/ReverseEngineering/comments/tqclq/intercepting_system_calls_on_x86_64_windows/).  Reddit provides no facilities for determining who reported it or why they did so.  Help us help you:  if you feel like it doesn't belong for some reason (beyond personally disliking it), send moderator mail after reporting it.	t5_2qmd0	True
1335833025.0	t0prb	Linux Memory Images (with kbeast rootkit)	andrewtappert	18	1	2		t5_2qmd0	False
1334097022.0	s3avr	OllyDbg NumberOfSections Crash	waliedassar	21	5	0		t5_2qmd0	False
1332402378.0	r83tj	"Static detection of C++ vtable escape vulnerabilities 
in binary code [PDF]"	igor_sk	24	5	6		t5_2qmd0	False
1330548931.0	qbu1m	"Infosec Southwest, ""information security and hacking conference held in Austin, Texas"", march 30 - april 1, registration open"	crymsen	20	5	0		t5_2qmd0	False
1329165756.0	pny8r	Reverse Engineering of Binary Device Drivers with RevNIC [PDF]	roflmaoff	22	7	3		t5_2qmd0	False
1326312588.0	ocsda	Starling Technique and Hijacking Kernel System Calls using Hardware Breakpoints 	digduggg	23	6	1		t5_2qmd0	False
1326012644.0	o7svl	Portable Executable oddities (with binary and source) [updated]	simpleuser	23	6	0		t5_2qmd0	False
1324841282.0	nqdrh	Students hack powered wheel chair, make wireless, stream video content	TheArchitect11	24	7	3		t5_2qmd0	False
1323915156.0	nd7fm	Debugger friendly for Ollydbg Users for x64?	AaronOpfer	20	3	14	"I've grown to like Ollydbg a lot and even use it to debug programs when I have the source available. I also find its method of making patches to running programs to be very straight-forward and simple. Unfortunately, it simply doesn't work on 64-bit processes.

Does anyone have any debuggers they suggest for people looking for something very similar to ollydbg but capable of debugging 64 bit processes?"	t5_2qmd0	True
1320152327.0	lwd9w	Android Reverse Engineering Wiki	technoskald	24	6	1		t5_2qmd0	False
1317687188.0	kzxr5	fastBT - The Fast Binary Translation Framework	clampwick	19	3	4		t5_2qmd0	False
1316563481.0	km5qm	Volatility 2.0 Vscan virus scanning plugin	digduggg	20	2	2		t5_2qmd0	False
1316017976.0	kfhta	[hiring] Root Labs Seeks Lead Engineer for Code Analysis Product	NateLawson	22	4	4	"[(Complete job posting here)](http://rootlabs.com/developer-job.html)

We are a fully-funded startup building a web-based service for analyzing and searching code. You will be in charge of building a large, distributed computing system for parsing and indexing code for our search engine. We've been creating the code analysis tools for existing customers, and we need you to build the automation framework to help us scale.

This is not yet another project to mine social networks to create ads! Some of the capabilities you will implement are:

* Nearest-neighbor search in high dimension (or knowing how to avoid this by projecting to a lower dimension)
* Classifying code by various metrics
* Map/reduce deconstruction of complex queries
* Distributed computing design, cluster management, software deployment, load balancing 

**Requirements**

Exceptional at:

* Python or Ruby
* C/C++
* Unix programming (Linux and/or FreeBSD)
* Working independently to solve problems, manage time, and be self-motivated 

Good working understanding of:

* MySQL or PostgreSQL
* Key/value stores, especially Riak and Redis
* Cluster management and Unix admin (Fabric and Chef)
* Compilers, linkers, and language toolchain internals in general 

Strong interest in:

* Low-level computing (assembly language, linkers/loaders, compiler optimizer design, intermediate languages)
* Using the right algorithm and implementation for the right problem. Knowing how to do profiling and basic statistics to make that choice.
* Machine learning: clustering, classification (locality-sensitive hashing, SVMs)
* Distributed systems and fault-tolerant computing (BigTable, GFS, Dynamo, and similar designs)
* At least one assembly language (x86 preferred)

We're only interested in people who produce working code and deploy it. This is not a research position involving modeling and R. We're a fast-paced company -- if you run into a problem, it's often best to come up with a heuristic and continue around it. You don't have to implement program analysis tools yourself, but you'll be building tools in Python and C/C++ that analyze the data we've extracted from the code.

Interested? Email a resume and links to code you've written to engineer-job@rootlabs.com

More info: http://rootlabs.com/developer-job.html"	t5_2qmd0	True
1313459161.0	jjzsa	Reverse Mode: Reversing DELL's DRAC firmware		18	1	4		t5_2qmd0	False
1310474246.0	incu4	Windows x64 Shellcode	polsab	19	1	0		t5_2qmd0	False
1309458163.0	idgya	New debugger disassembler x64	C_REV	21	4	2		t5_2qmd0	False
1309316622.0	ibxpt	Kivlad v0.1 source code, a native decompiler for Dalvik binaries	rolfr	18	1	0		t5_2qmd0	False
1302277503.0	glj1l	Virtual USB Analyzer - Tutorial		18	2	0		t5_2qmd0	False
1300847723.0	g9eh5	Recon registration open! 	crymsen	18	1	9		t5_2qmd0	False
1297182617.0	fhkw2	Hex-Rays Bug Bounty	rolfr	23	4	10		t5_2qmd0	False
1293596958.0	eswps	AutoDiff - Automated Binary Differential Analysis 		19	2	0		t5_2qmd0	False
1291950574.0	ejbcj	Ask Reddit: CUDA programming	ynoise	20	5	7	"I recently purchased a NVIDIA GTX 465 GPU and, despite playing games, I want to put it to better use in RE. Because I'm very short of ideas I kindly ask your help ;) 


My own (possibly dumb) ideas are: 


1) Code a POC virus that runs on the GPU (has anyone done it before?);

2) Port ssdeep to CUDA just to learn the basics of CUDA programming;

3) Code a basic fuzzer (mainly for fuzzing video and image formats I guess)."	t5_2qmd0	True
1291050266.0	edeb7	ESET Crackme Contest		19	0	6		t5_2qmd0	False
1289637727.0	e5j2p	"Step-by-Step Reverse Engineering Malware: 
ZeroAccess / Max++ / Smiscer Crimeware Rootkit 
- Part One"	wtbw	21	3	6		t5_2qmd0	False
1289581889.0	e57jc	Malicious PDFs find a novel way of running JavaScript	wishi	22	4	0		t5_2qmd0	False
1289559395.0	e52pl	Reverse Engineering of hardware? Where to start?	aw4lly	18	3	7	"Hey everyone,

I read a post on here about hacking the Boxee Box today which got me thinking again about something I've been interested in for quite a while.  Reverse Engineering of Hardware. 

I was wondering if anyone on here has done any hardware reverse engineering and would have any advice where to start or if they know of anywhere I could learn how to do it, hardware/software I should have, easy devices to start on, tutorials, anything would be amazing. I've done a lot of embedded programming on Microcontrollers and FPGA's but really just don't know where to start with it.

Any help you can give would be amazing.
"	t5_2qmd0	True
1287767661.0	duyg5	Adobe Shockwave player rcsL chunk memory corruption 0day 		18	2	3		t5_2qmd0	False
1287058888.0	dr4nf	Linux GLibC Stack Canary Values	sanitybit	19	2	0		t5_2qmd0	False
1286987988.0	dqqpr	Reversing for Vulnerability Analysis (part 2) with Aaron Portnoy and Peter Silberman	dguido	21	6	2		t5_2qmd0	False
1280163114.0	ctv9a	"New RE exemptions to the DMCA (jailbreaking, 
phone unlocking, dongle cracking, vuln research?)"	wtbw	22	6	5		t5_2qmd0	False
1277514390.0	cj501	IDA Pro 5.7 released - what's new	igor_sk	19	3	9		t5_2qmd0	False
1271952766.0	buos4	Programming from the Ground Up [PDF]		17	1	0		t5_2qmd0	False
1271199679.0	bqi9t	Integrated Circuit Reverse Engineering		17	0	1		t5_2qmd0	False
1269910536.0	bjxvc	Taking apart the Energizer trojan	wtbw	17	0	0		t5_2qmd0	False
1268084826.0	baucl	Compiler Optimizations for Reverse Engineers	rolfr	17	1	3		t5_2qmd0	False
1265361291.0	ayd7d	Hacking the Amazon Kindle DX	cavedave	19	1	0		t5_2qmd0	False
1263823103.0	ar0aj	Recommendation on a good Linux hex editor?	Poromenos	21	4	39	Do you guys know if Hiew runs in Linux? Which hex editor do you use?	t5_2qmd0	True
1256192652.0	9wjjx	Viva La Revolución	cloudburst	24	7	7		t5_2qmd0	False
1247762986.0	91tgj	BlackBerry Spyware Dissected	rolfr	21	4	0		t5_2qmd0	False
1247070322.0	8zcao	Source Code of Several Atari 7800 Games Released	rolfr	21	5	1		t5_2qmd0	False
1244669625.0	8rh9d	Nice example of a high-quality disassembly	rolfr	17	2	2		t5_2qmd0	False
1244542844.0	8qzk0	"Hi Reddit, I'm reading ""The Blue Nowhere"" by Jeffery Deaver. It's flawed but I'm enjoying it. It's a fiction about hackers, the internet, programming and other cool stuff. It even contains some intel asm :) Are there any other such 'hardcore' books ?"	mco	20	4	8		t5_2qmd0	True
1223969039.0	77021	The Viral Darwinism of W32.Evol	rolfr	18	2	0		t5_2qmd0	False
1374973752.0	1j6x48	Dynamic Analysis and Debugging of Binary Code for Security Applications [PDF]	rolfr	20	4	0		t5_2qmd0	False
1374761433.0	1j10by	Christopher Domas The future of RE, Dynamic Binary Visualization	ezrakh	17	2	9		t5_2qmd0	False
1374177866.0	1ikypa	The slides of my talk at LSE summer week 2013 - Software testing and concolic execution	jonathansalwan	21	4	0		t5_2qmd0	False
1373560296.0	1i37bl	Basic Reversing - WebEx One-Click Password Storage	foundstone	21	4	4		t5_2qmd0	False
1373496723.0	1i1hjx	Is it possible to become good at RE without being good programming?	fierycatnet	26	9	35	"Right now I am teaching myself how to program while working on CS but I am also interested in security, malware, reversing. I've been dabbling with many things and tools but somethng spark my interest in RE again.

So my question is, would it be possible to get good at REing without being good at programming? I can put together some basic scrips and I am still learning more but the thing is, I have more of analytical mind. I like to analyze data, research, and put the puzzle together. I don't know a lot about REing but it seems like I am more inclined towards braking things and messing with existing code base rather than making something on my own from scratch. I have more difficulties starting a project or writting a paper, I could spend hours on the way I want to express my idea and how to present it but I am pretty quick on extracting data, understanding underlying concepts and etc. Would it be safe to say that maybe RE, malware analyst, pentest, etc. would be a better fit for me? Any of you guys who are not stellar programmers doing RE work for a living? I am not afraid of some C code or whatever, I'd just rather not write it. If I do need to write something, I prefer high level language like Ruby/Python and libraries."	t5_2qmd0	True
1370878197.0	1g1s40	Constructing control flows graphs of binary executable programs at post-link time. US Patent 7,207,038 [PDF]	perror	21	4	5		t5_2qmd0	False
1370001426.0	1fedfa	Call For Papers - Ekoparty security conference 2013	galapag0	19	3	0		t5_2qmd0	False
1369025230.0	1eodd8	x86obf - virtualizer binary sample	tzubcic	20	4	6		t5_2qmd0	False
1365088072.0	1bnx3m	Use-after-frees: That pointer may be pointing to something bad	polsab	24	8	1		t5_2qmd0	False
1363626697.0	1aj7y7	Using Mono Cecil Decompiler within Windbg to decompile IL	igor_sk	19	4	0		t5_2qmd0	False
1363300122.0	1ababo	a schizophrenic PDF, working differently on 3 different viewers	simpleuser	21	4	5		t5_2qmd0	False
1358973314.0	1755wo	Extracting Hidden API-Hooking BHO DLLs with Volatility	transt	23	6	0		t5_2qmd0	False
1358926328.0	1741o3	Polymorphic engine	DuncanMcloud	24	7	8	"Hello Friends,

Can someone point me to articles / papers / code on writing polymorphic engines? I've done some searching and was not happy with the quality of results from Google."	t5_2qmd0	True
1358607590.0	16vkxk	It's not much but I have written a short guide about the interactive Hopper Disassembler [PDF]	kracksundkatzen	20	5	2		t5_2qmd0	False
1356060419.0	157gbi	JEB vs. JAD vs. JD output comparisons	rolfr	21	6	6		t5_2qmd0	False
1355277260.0	14p7zy	RE IRC channels?	Greg1221	18	2	26	I'm looking for some IRC channels to talk with like minded people. Any that you guys frequent? 	t5_2qmd0	True
1354583078.0	148faa	Xbox 360 controller on Windows	voltagex	24	9	30	"Has anyone worked much with the Xbox controller on Windows? I've got most functions working with SharpDX, but the ""guide"" (centre) button isn't exposed at all

Does anyone have any ideas how it works? 

The software is here: http://download.microsoft.com/download/6/9/4/69446ACF-E625-4CCF-8F56-58B589934CD3/Xbox360_64Eng.exe and the exe I'm most interested in is XboxStat.exe - it responds to the guide button being pressed.

The function may also be hidden in one of the xinput*.dll files, c.f. https://github.com/mendhak/xbox-controller-off/blob/master/XBoxControllerOff/Program.cs

"	t5_2qmd0	True
1353339523.0	13gc7e	Windows Kernel Reference Count Vulnerabilities — Case Study	N3mes1s	21	4	0		t5_2qmd0	False
1352597515.0	12zn43	History Of Decompilation	turnersr	19	3	0		t5_2qmd0	False
1352387269.0	12uxbm	How to build IDA processor modules under Linux?	tripsandleaves	21	7	3	Hey guys. So i just finished writing a sample ida processor module for a small VM. I have implemented all the parts(ins,reg,ana,emu,out) and successfully build the .ilx. However, I cant get IDA to display my module in the processor drop down menu. Reading the IDA Pro Book, Eagle says that IDA needs a description string within the module to be able to load the processor module. A utility is supplied with the IDA SDK(I am using 6.2), called mkidp.exe which is supposed to insert this description string within the PE header of the module. Yeah, PE. But I just built an ELF module. How else do I get IDA to recognize my module? TLDR; First time IDA(6.2) proc mod writer in Linux, cant get IDA to recognize module in dropdown, What am I doing wrong? 	t5_2qmd0	True
1351522610.0	129zi3	Unpacking Dynamically Allocated Code	ffffdddddssss	20	3	5		t5_2qmd0	False
1351278185.0	124yx7	Slides for the Ruxcon Breakpoint conference	rolfr	18	2	0		t5_2qmd0	False
1350235708.0	11gu5x	Malware Muncher: Using DLL Injection to Automatically Unpack Citadel	malwareanalyst	27	10	3		t5_2qmd0	False
1349451603.0	10zvxk	Recovering memory mapped files from the Windows cache manager	transt	27	10	0		t5_2qmd0	False
1348845218.0	10mdgc	PAGE_EXECUTE_WRITECOPY As Anti-Debug Trick	waliedassar	20	5	3		t5_2qmd0	False
1348108284.0	10673u	Random thoughts about writing an IDA processor module	rolfr	22	5	0		t5_2qmd0	False
1346884212.0	zf0og	Camouflage in Malware: from Encryption to Metamorphism [PDF]	rolfr	24	8	0		t5_2qmd0	False
1345245305.0	yei5t	Baseband Attacks: Remote Exploitation of Memory Corruptions in Cellular Protocol Stacks	mageek	20	5	0		t5_2qmd0	False
1344627126.0	y0g0k	Enhanced Operating System Security Through Efficient and Fine-grained Address Space Randomization [PDF]	rolfr	21	4	0		t5_2qmd0	False
