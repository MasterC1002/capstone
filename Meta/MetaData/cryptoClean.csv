created_utc	id	title	author	ups	downs	num_comments	selftext	subreddit_id	is_self
1372359186.0	1h729g	Cryptographer Bruce Schneier joins Electronic Frontier Foundation board	cameronj	168	21	11		t5_2qq4h	False
1375537352.0	1jmj0l	‘Encryption is a human right’: Wikipedia aims to lock out NSA	whitefangs	143	19	26		t5_2qq4h	False
1373576811.0	1i3wjj	Snowden leak: Microsoft added Outlook.com crypto backdoor for Feds	UncleSteveFarr	133	21	17		t5_2qq4h	False
1366436237.0	1cq6xb	CipherCloud abuses DMCA Takedown on StackExchange discussion of their cryptography	sablefoxx	98	9	3	"Discussion: http://meta.crypto.stackexchange.com/questions/250/ciphercloud-dmca-notice

Original thread: http://i.imgur.com/8r9cDxS.jpg"	t5_2qq4h	True
1375217611.0	1jdhpl	Hi, I'm a contributor to Tox, and we would love to have the help of /r/crypto	12_year_old_girl	125	40	40	"As you may have seen in a variety of websites and subreddits (including [here](http://www.reddit.com/r/crypto/comments/1jcn6r/your_thoughts_on_these_crypto_plans_for_a_project/) on /r/crypto), recently we have started a FOSS project named ""Tox"" which aims to be a replacement to Skype and is currently in pre-alpha.  If you haven't heard of us, please check out our [website](http://tox.im/).

Such a program has a heavy emphasis/reliance on crypto, and we would absolutely love for the help and constructive criticism of the community at /r/crypto.  There are a variety of ways to find us:

*         Reddit: /r/projecttox
*         GitHub: https://github.com/irungentoo/ProjectTox-Core
*         IRC: #tox @ irc.freenode.net (port 6697 for SSL)

Break it, hack it, constructively criticize it, etc...the more the merrier!"	t5_2qq4h	True
1366234908.0	1ck8iu	"The NSA have declassified 23 years of ""Cryptolog"", a newsletter by and for their cryptanalysts and spies."	binlargin	94	9	7		t5_2qq4h	False
1301423212.0	ge3sq	FBI wants public help solving encrypted notes from murder mystery	postermmxvicom	96	14	71		t5_2qq4h	False
1308946797.0	i8dl1	Truecrypt user held in contempt	samuelt	92	10	9		t5_2qq4h	False
1349212318.0	10u5rp	Keccak selected as SHA3	ctz99	84	11	13		t5_2qq4h	False
1374506673.0	1iteh4	Encryption Works: How to Protect Your Privacy in the Age of NSA Surveillance	randomhumanuser	84	10	21		t5_2qq4h	False
1365721342.0	1c62ek	Zerocoin is a new cryptographic extension to Bitcoin that (if adopted) would bring true cryptographic anonymity to Bitcoin. It works at the protocol level and doesn't require new trusted parties or services.	whitefangs	98	23	2		t5_2qq4h	False
1301591023.0	gfnhd	Did yahoo user 'John' crack the encrypted notes that the FBI released to the public to help solve a murder?	postermmxvicom	87	17	3		t5_2qq4h	False
1372928716.0	1hmi6w	DecryptoCat: decrypt crypto.cat	meskio	79	8	12		t5_2qq4h	False
1366049170.0	1ceiay	"""Hacking Secret Ciphers with Python"" 415 pages, 1700 lines of code, free to download. 100% of proceeds go to the EFF, Creative Commons, and Tor Project."	AlSweigart	82	14	7		t5_2qq4h	False
1348488845.0	10e09q	SHA-3 to Be Announced	stalled	73	8	2		t5_2qq4h	False
1293922076.0	euosn	Reddit Modern Cryptography Tutorial (RMCT) - Series Announcement	crypto_tutor	82	19	12	"After reading the recent discussions about what people would like to see this subreddit cover, it appears that a large proportion of (commenting) users are relatively inexperienced with regards to cryptography but appear willing to learn.

Because of this, I have decided to make this pseudonym account to hopefully guide you through the process of learning modern cryptography.  I aim to do this through a series of posts to this subreddit.

Now I already know that there are numerous 'Introduction to Cryptography' tutorials available on the net.  These appear in various forms including audio, video and lecture notes.  However, my aim is to guide this series based primarily on feedback from other users, making this a much more 'interactive' tutorial than the existing static 'one-way' methods.  I will refer to other materials where appropriate and I think they are of good quality.

I aim to require as little prerequisite knowledge as possible, as I will try to explain everything as the series of posts progresses and the topics arise.  Some of the topics I hope to cover include:

* Symmetric block ciphers.
* Block cipher modes of operation.
* Methods of cryptanalysis (including linear and differential cryptanalysis).
* Hash functions.
* Message Authentication Codes (MACs).
* Asymmetric encryption schemes.
* Implementing cryptography.
* Breaking cryptographic implementations.

I *do not* aim to cover what cryptography is nor cryptography in a historical context.  This is a topic that has been covered many times and the Wikipedia pages for these are pretty good (links: [Cryptography](https://secure.wikimedia.org/wikipedia/en/wiki/Cryptography) and [History of Cryptography](https://secure.wikimedia.org/wikipedia/en/wiki/History_of_cryptography))

However, I feel that I must warn you that some of the topics we will (hopefully) cover may be advanced and require time to think about.  Unfortunately, there is no way around this, but each person may pick and choose which areas they would like to research more thoroughly.

For those that are wondering about myself and my motivations for doing this: cryptography is a major hobby of mine and I have spent a number of years working on the topic.  I feel that cryptography is one of the few areas where multiple interesting topics (such as computer security, mathematics, computer programming and privacy) all mix together and interact.

Thus, I hope users on this subreddit will appreciate this method of learning and the process will be enjoyable for everyone involved.  Please give feedback on the posts I write as this is extremely valuable.  Let me know if you think the topic is not explained adequately, too difficult, too detailed, requires too much prerequisite knowledge etc.  I will also attempt to answer questions where I can.

Please note that I am doing this in my limited spare time and so I cannot guarantee timely updates or even guarantee that the series will run for any significant period of time.  All I can commit to is that I will give it my best shot with the time I have available.

edit:

## Posted parts

[RMCT1 - Introduction to Symmetric Block Ciphers and DES](http://www.reddit.com/r/crypto/comments/euwzj/rmct1_introduction_to_symmetric_block_ciphers_and/)"	t5_2qq4h	True
1347933729.0	1021yi	Frequency analysis of numerical passwords.	sfuerst	77	14	12		t5_2qq4h	False
1341499902.0	w2tzq	John the Ripper now able to crack office files and use GPUs	TheloniusPhunk	77	14	4		t5_2qq4h	False
1331053892.0	qkcmr	Stanford's free online crypto class is (finally) live. There's still time to register.	B-Con	70	6	16		t5_2qq4h	False
1333453465.0	rr1l5	Poker is hard, especially for cryptographers	hanomalous	69	6	0		t5_2qq4h	False
1371117248.0	1g9c9u	Coursera: Dan Boneh's Cryptography I starts on 17/06	White_Sox	70	7	20		t5_2qq4h	False
1373468710.0	1i0edc	Documents Reveal How the NSA Cracked the Kryptos Sculpture Years Before the CIA | Threat Level | Wired.com	dgryski	69	10	4		t5_2qq4h	False
1348147136.0	106v1t	Nice explanation of RSA Encryption (video)	skoshidog	69	13	12		t5_2qq4h	False
1330063331.0	q3qc5	U.S. Court of Appeals: forcing a suspect to give up a decryption password violates the Constitution.	chakalakasp	61	8	3		t5_2qq4h	False
1364845023.0	1bg1ot	xkcd is asking you to break their hash	unampho	69	12	29		t5_2qq4h	False
1371768143.0	1grb38	Leaked NSA Doc Says It Can Collect And Keep Your Encrypted Data As Long As It Takes To Crack It	goonsack	61	10	51		t5_2qq4h	False
1340230991.0	vcny9	Part 1: Intro to Cryptography | Journey into Cryptography | Khan Academy	Robbi00	58	4	8		t5_2qq4h	False
1371806728.0	1gsati	Open-source system for verifiable online elections	habeanf	60	7	22		t5_2qq4h	False
1370983495.0	1g5bpu	How fucked is the SSL encryption?	whitefangs	70	22	27		t5_2qq4h	False
1323009590.0	mzr81	How (not) to use symmetric encryption	cryptoguy	57	2	3		t5_2qq4h	False
1373358193.0	1hx9x5	Anatomy of a pseudorandom number generator – visualising Cryptocat’s buggy PRNG	meskio	60	10	17		t5_2qq4h	False
1363785842.0	1ansvw	Formerly Top Secret NSA Cryptologs From 1974-1997	Thirsteh	57	7	8		t5_2qq4h	False
1334188827.0	s59et	TIL there is a list of specific people you may not share PGP source code with.	somehacker	62	9	19		t5_2qq4h	False
1376523782.0	1kduh5	How Egyptian police quickly cracked journalist’s computer password	malcarada	59	12	26		t5_2qq4h	False
1314738398.0	jzg3x	Pakistan to ban encryption software	Brovvnout	53	6	13		t5_2qq4h	False
1350993268.0	11xwwh	Why custom crypto is bad. Australian researchers crack metro-card system.	enferex	52	7	2		t5_2qq4h	False
1329262980.0	ppv54	"A flaw in generating random RSA keys exists in the wild and has produced thousands of ""weak"" keys that offer almost no security."	B-Con	52	6	27		t5_2qq4h	False
1308594606.0	i4j4x	Lifetimes of cryptographic hash functions	SparxNet	56	6	5		t5_2qq4h	False
1340059040.0	v8w2h	This is the most intuitive visualization of Diffie-Hellman Key Exhange I've ever seen.	indefinitearticle	53	9	9		t5_2qq4h	False
1376601529.0	1kg1bb	Google confirms Java and OpenSSL crypto PRNG on Android are broken	ZeroCoolMurphy	61	13	3		t5_2qq4h	False
1365014819.0	1blrvu	Peter Gutmann's Godzilla Encryption and Security Tutorial (900+ pages!)	algrym	55	8	2		t5_2qq4h	False
1373097580.0	1hqnro	I found these Khan Academy videos to be very helpful [Khan Academy: Applied Math - Modern Cryptography]	CyberNixon	49	2	3		t5_2qq4h	False
1354496357.0	146cgi	Julian Assange: Cryptographic Call to Arms	krimms	61	16	15		t5_2qq4h	False
1293971733.0	euwzj	RMCT1 - Introduction to Symmetric Block Ciphers and DES	crypto_tutor	55	13	17	"# RMCT1 - Introduction to Symmetric Block Ciphers and DES

## Administrata

As this is the the first post in the series I have had to take a guess on what level to write for.  Because of this, this post is a bit tentative and all feedback is extremely valuable.  Please let me know your feedback on this post by leaving comments below.  Have you found it too easy? too brief? too much detail? too short? too long? etc.  Some feedback on how fast people would like the series to go would also be appreciated.

Also, feel free to ask questions about the topics discussed in each post and hopefully either myself or another knowledgeable user will be able to answer.  You may feel you want to perform some research yourself and try to answer them.  I strongly encourage this as it is usually the process of actively seeking, thinking about and explaining to others that greatly increases the chances of understanding and rememembering.  Besides, we might get into some interesting topics of discussion.

Additionally, note that I have emphasized terms that I feel are important by placing them in *italics*.

## What is a Symmetric Block Cipher

A symmetric block cipher is best explained by breaking down and explaining the individual words (working backwards, from right to left):

* Cipher - A method of enciphering (encrypting) data.
* Block - The method works with data in blocks ('chunks') of a specific size.
* Symmetric - The method is symmetrical in that it uses the same key for both encryption and decryption.

Thus, combining the above, a symmetric block cipher is *a method of encrypting fixed-size blocks of data where the same key is used to both apply and remove the encryption*.  Henceforth I will not explicitly state symmetric and you may assume that when I refer to a block cipher it is symmetric.

Symmetric block ciphers are one of most commonly used cryptographic primitives.  They are used to encrypt both data in storage (file encryption, drive encryption) and in transit (TLS/SSL).  They can even be turned into PRNGs and stream ciphers by using specific block cipher modes of operation, however, this is something that we will not cover at this time.

The easiest way to think of a block cipher is as a black-box:

                     Key
                       |
                       |
                      \/
    Plaintext --&gt; BLOCK-CIPHER --&gt; Ciphertext

Where:

* Plaintext (p) is the unencrypted message we wish to encrypt.
* Ciphertext (c) is the encrypted message returned from the cipher.
* The Key (K) is the set of parameters that tells the block cipher how to encrypt the data.

Using the abbreviations above this can also be written c=E(K,p).  Which means that c (the ciphertext) is the result of applying an encryption function (E) with the parameters K (the key) on an input p (the plaintext).  Likewise, decryption can be written p=D(K,c).

The mapping of the inputs to outputs is controlled by the secret key.  We will not use the term secret key in further posts to refer to the encryption key for symmetric ciphers (preferring instead, 'key') as this may cause confusion later when we discuss asymmetric encryption schemes.

Mathematically, a block cipher can be thought of as a function which applies a invertible bijective mapping of a set of inputs to a set of outputs.  Bijective means that each output is mapped to only a single input (so two inputs will never result in the same output).  This makes sense when you think about it, as if more than one input results in the same output you would not know which would result is the correct plaintext when decrypting.

When looking at block ciphers in this abstract way it becomes clear that while a block cipher is just a 'simple mapping' between its inputs and outputs, this mapping is the only part that provides the security of the cipher.  Thus, the relationship between the key and the internal mapping must be non-trivial for the cipher to be secure.

## Block Cipher Parameters

Each block cipher has a number of parameters which can affect its security.  The two main parameters are:

* Block length - This is the size of the message upon which the block cipher will operate.  It is usually specified in bits.
* Key size - This is the length of the encryption key.  Again, it is usually specified in bits.

The block lengths for current modern ciphers are usually 128 bits of data.  For messages that are longer than a single block (the majority of cases) a cipher *mode of operation* is required.  Modes of operation will be something that we will return to at a later date.

The key size for modern ciphers is usually 128 or 256 bits in length.  As many other cryptographers have mentioned beforehand: a larger key does not necessarily mean that a cipher is secure, however a shorter key does mean that it is less secure due to the possibility of *brute force attacks*.

## DES and Feistel Ciphers

The first modern real block cipher was the [Data Encryption Standard, DES](http://en.wikipedia.org/wiki/Data_Encryption_Standard).  This is a cipher with a 64 bit block length and an effective 56 bit key.

DES is a type of *Feistel cipher*.  A Feistel cipher is where a relatively simple function is applied to the data multiple times (it is a type of *iterated block cipher*).  Many modern ciphers are iterated block ciphers.

In the case of DES, the input is split into two 32-bit halves.  Then, for each round (iteration), a *round function* is applied to the right half using a *subkey*.  This is then XORed with the left half and the two halves exchanged.  This is performed 16 times (16 rounds, each with a different subkey).

Note that the two halves are *not* exchanged after the final round.  This makes the whole construction the same for both encryption and decryption and therefore makes implementation easier.  As we will return to later, a simpler scheme with an easier implementation usually leads to a more secure system as the number of bugs are reduced.

Due to the short 56 bit key the security of DES is not really suitable for use today.  Thus the recommendation is not to use DES for any new implementations and only use it where backwards compatibility is required.

## Coming next

Coming next: More on Feistel Ciphers and DES

## Further Reading

* [http://en.wikipedia.org/wiki/Cryptography](http://en.wikipedia.org/wiki/Cryptography)
* [http://en.wikipedia.org/wiki/Data\_Encryption\_Standard](http://en.wikipedia.org/wiki/Data_Encryption_Standard)"	t5_2qq4h	True
1376156554.0	1k3jo2	Math Advance Suggest RSA Encryption Could Fall Within 5 Years (xpost from /r/bitcoin)	verandaguy	54	11	11		t5_2qq4h	False
1376316130.0	1k7g6h	Lavabit Architecture	whitefangs	48	7	5		t5_2qq4h	False
1372484708.0	1haqas	Encryption Has Foiled Wiretaps for First Time Ever, Feds Say.	CrackHeadRodeo	51	9	10		t5_2qq4h	False
1365417210.0	1bwrm4	/r/crypto and /r/cryptography seem rather similar. Wouldn’t is be more useful to simply merge the two?	heeb	54	10	16		t5_2qq4h	True
1291936507.0	ej7m2	SHA-3 finalists	B-Con	49	5	6	"I just recieved the following e-mail, sent out to all members of the NIST hash-forum mailing list. It announces the finalists for the SHA-3 competition. I just received this e-mail, the SHA-3 website isn't even updated yet.

---

NIST has selected five SHA-3 candidate algorithms to advance to the third (and final) round:

·         BLAKE

·         Grøstl

·         JH

·         Keccak

·         Skein

 

The selection was challenging, because we had a strong field of fourteen hash algorithms remaining in the SHA-3 competition that were very strong contenders for the hash function standard. Security was our greatest concern, and we took this very seriously, but none of these candidates was clearly broken.  However, it is meaningless to discuss the security of a hash function without relating security to performance, so in reality, NIST wanted highly secure algorithms that also performed well. We preferred to be conservative about security, and in some cases did not select algorithms with exceptional performance, largely because something about them made us “nervous,” even though we knew of no clear attack against the full algorithm.

 

Performance is multidimensional: no algorithm excelled in every dimension.  Every second-round candidate achieved at least tolerable performance on mainstream desktop or server systems, although the performance range was significant.  There were bigger differences on constrained platforms and in hardware, where area is as much a performance factor as speed.  A couple of algorithms were wounded or eliminated by very large area requirements – it seemed that the area they required precluded their use in too much of the potential application space.  Some algorithms allowed very high levels of fine-grain parallelism that could be realized well with hardware, some exploited parallelism with vector units, and some seemed to fully exploit the considerable parallelism that can be achieved by conventional superscalar arithmetic logic units (ALUs) that can simultaneously launch several instructions per clock cycle.  Several algorithms also exploited the power of 64-bit-wide ALUs.

 

No algorithm survived to become a finalist that did not have a clear round structure that could be readily adjusted to trade security for performance.  NIST eliminated several algorithms because of the extent of their second-round tweaks or because of a relative lack of reported cryptanalysis – either tended to create the suspicion that the design might not yet be fully tested and mature. NIST was generally comfortable with tweaks to the number of rounds or to constants, but more suspicious of changes that seemed to affect the structure of the compression functions.

 

Some teams announced the tweaks that they would make if they were selected for the final round.  NIST evaluated the second-round submissions, but not the proposed tweaks.  However, we did consider whether the best attacks on some of the candidates seemed amenable to mitigation by a simple modification.

 

NIST also considered diversity in the selection of the finalists. The selected five finalists incorporated a number of new design ideas that have arisen in the last few years, such as the HAIFA and sponge hash constructions.  The finalists include designs whose nonlinearity is based on the AES S-box, on a smaller (4- or 5-bit wide) S-box efficiently implemented as a sequence of basic logical instructions, and on the interaction between addition and XOR operations.

 

NIST thanks the submitters of all fourteen second-round candidates. Every second-round candidate was a very professional effort, and every candidate had strong features to recommend it.   We also thank the many individuals and organizations who helped with the cryptanalysis of the candidates, or who provided performance data from their own implementations of the candidate algorithms. This selection would not have been possible without their help.

 

NIST will publish a report on the selection of the SHA-3 finalists in the near future that explains the rationale for the selections on an algorithm-by-algorithm basis.

 

If tweaks are being considered for the final round, the submissions are due on January 16, 2011. Specific submission requirements will be provided to the designers of the five SHA-3 finalists.

 

Bill Burr

 

William E. Burr

Manager, Cryptographic Technology Group

NIST"	t5_2qq4h	True
1339742238.0	v32pt	Megaupload and their 150TB of encrypted disks	DasWood	44	5	23	150TB of data by my arithmetic is a bit over 2^43 blocks of data at 128 bits. Is this enough data for any ciphertext only attacks on AES 128? I am assuming that the data would have to use ECB or some other very simple mode of operation to preserve the ability to access data randomly.  Would this allow the appearance of the general structure of the data on the disk or glean any other kind of information?	t5_2qq4h	True
1369807588.0	1f95fw	TIL: Fedora is attempting a grand unification of crypto libraries/support in the linux ecosystem, at least for their distro!	ivosaurus	49	9	9		t5_2qq4h	False
1360362783.0	185qaz	DHS Watchdog OKs ‘Suspicionless’ Seizure of Electronic Devices Along Border	whitefangs	48	6	11		t5_2qq4h	False
1352832858.0	134vht	All the crypto code you’ve ever written is probably broken	EquanimousMind	51	8	45		t5_2qq4h	False
1351862776.0	12igof	"S. Carolina Gov. Nikki Haley on Encryption: ""It's very complicated... there's a lot of numbers involved with it."""	GunkertyJeb	46	5	5		t5_2qq4h	False
1337891345.0	u3bbn	German Intelligence Agencies claim ability to break PGP	sublimepua	55	16	38		t5_2qq4h	False
1324566377.0	nmntu	TrueCrypt: still murky, or well trusted?	memechaser	48	9	31	"A while ago I used TrueCrypt, but there are several reports (inc. the wikipedia article) about the background of the devs, lack of regular OSS standards (version control repo, BSD or GPL...) etc.

Does all this still stand, or is it all a bit tinfoil hat?

Has the code been reviewed by experts, and is it generally trusted by the community?"	t5_2qq4h	True
1351125885.0	121eov	The most dangerous code in the world: validating SSL certificates in non-browser software	gmcabrita	49	7	2		t5_2qq4h	False
1343487635.0	xasme	Why has anonymous p2p messaging not gotten more attention lately?  Here's an abandoned project that seems exactly what the oppressed are looking for...	mnp	42	3	24		t5_2qq4h	False
1336742241.0	ti3z7	Does there exist any cryptographic algorithm which encrypts data in such a way that it can only be decrypted after a certain period of time?	cruise02	44	4	6		t5_2qq4h	False
1312586848.0	jac4e	"Oslo terrorist Breivik seems to have left codes in ""Manifesto"". Join the mailing list and help with the analysis. (repost from /r/netsec)"	hst	48	12	4		t5_2qq4h	False
1308211266.0	i12hn	Reverse engineering of the NSA's public key	isisgrimalkin	44	6	15		t5_2qq4h	False
1375195982.0	1jcn6r	Your thoughts on these crypto plans for a project someone made intended to be an open source Skype replacement?	erikano	60	21	14		t5_2qq4h	False
1374698064.0	1izaw0	NSA, crypto, and bananas	veorq	41	5	12		t5_2qq4h	False
1372219318.0	1h34p9	SSL: Intercepted today, decrypted tomorrow	gorske	42	3	11		t5_2qq4h	False
1367541656.0	1dl7bl	Slashdot: IBM Researchers Open Source Homomorphic Crypto Library	bradn	47	6	33		t5_2qq4h	False
1346546377.0	z7j3z	Introduction to Cryptography - A video lecture series by Professor Dan Boneh	Ruxias	48	7	4		t5_2qq4h	False
1376581570.0	1kfaai	Encryption is less secure than we thought: For 65 years, most information-theoretic analyses of cryptographic systems have made a mathematical assumption that turns out to be wrong.	paffle	61	23	10		t5_2qq4h	False
1375630210.0	1joll4	The Factoring Dead: Preparing for the Cryptopocalypse	whitefangs	46	7	8		t5_2qq4h	False
1370953403.0	1g473o	﻿Why is it privacy *vs.* security? Can't we have both?	nzvthf	48	10	52	"To illustrate the point I wrote up an example based on the call log analysis 
done by the government, as best I understand it.  The write up explains how 
analysis of call logs could be done while preserving privacy to varying 
degrees, by hashing the phone numbers.  Here it is:

Call log analysis could be implemented using a three party system.  The 
providers, the obfuscating agents and the analysts.  The providers would 
provide the phone numbers to the agents who provide hashes to the analysts 
and keep the randomly generated keys in escrow.

The agency specializes in obfuscating the phone numbers to specifications 
defined by the  analysts __and__ parties concerned with privacy. The keys in 
escrow would require oversight and due process to use.

The hashing specifications would govern the data transformation, hashing
algorithm, key size and the like.  For example: 
    
    {xxx-yyy-zzzz} -&gt; {{SHA1(xxx)}, {SHA1(yyy)}, {SHA1(zzzz)}}

Using different keys for area code, exchange and digits would make it possible 
to apply different policies to each.  It would also make it possible to 
correlate based on each.

Using a one-way hash would require the analyst to suspect wrongdoing, get the 
key, generate the hash and match it to reveal the phone number.

If this works then using hashing and storing the keys in escrow to ensure 
separation of duties is a viable way to do call log analysis with sufficient 
countermeasures to preserve privacy.  So why isn't it being done this way?"	t5_2qq4h	True
1360574310.0	18auh0	TextSecure was recently put back on the market. It provides seemless Public Key Crypto SMS and is open source. Check it out!	ivosaurus	44	8	22		t5_2qq4h	False
1359047105.0	1774me	Open Letter to Skype from Internet Activists, Journalists and Academics	whitefangs	46	9	3		t5_2qq4h	False
1346788460.0	zcoko	Keynote at Crypto2012: The End of Crypto	haakon	45	9	1		t5_2qq4h	False
1322598278.0	mtqh6	"Digital Fortress: ""I really could not recommend this book less, and am considering sending Dan Brown a bill for the time I spent reading it."""	B-Con	42	4	14		t5_2qq4h	False
1375717403.0	1jqu3x	Distributed Homomorphic Encryption Adder	mtlion	43	9	3		t5_2qq4h	False
1373814435.0	1ia0ub	Technical feasibility of decrypting https by replacing the computer's PRNG	lucb1e	42	8	6		t5_2qq4h	False
1360870523.0	18j6m8	Password Hashing Competition	dchestnykh	52	16	5		t5_2qq4h	False
1351589502.0	12bwvh	Crypto Website	gcov2	46	8	11	"I once found a crypto website which was amazing. It showed how to implement some algorithms (I think in C) and also how to attack some of the stuff.
I only remember that it has a dark background, I think black and looked like it was designed in the 90s. Yellow font colour and the table of contents was on the left. Please help me! I've been googling for days. :("	t5_2qq4h	True
1350762078.0	11t6hy	Security Flaws in the TSA Pre-Check System and the Boarding Pass Check System	VersalEszett	42	8	7		t5_2qq4h	False
1340633668.0	vklx8	Microsoft to ban keys less than 1024 bits	williamshatnersvoice	46	9	26		t5_2qq4h	False
1375103872.0	1j9vli	Simplifying OTR deniability	whitefangs	42	6	5		t5_2qq4h	False
1361848107.0	198hx8	Introduction to Cryptography and Data Security - Ruhr University Bochum, Germany (23 Lecture playlist)	DrAwesomeClaws	44	6	1		t5_2qq4h	False
1341966815.0	wcwu5	Cryptanalyse a William Gibson poem (author of Neuromancer, etc.), and win all his books	quinndupont	41	3	2		t5_2qq4h	False
1339123206.0	uqx8i	Flame and MD5 collisions	B-Con	44	6	4		t5_2qq4h	False
1334895601.0	sj479	Two 70-year-old papers by Alan Turing on the theory of code breaking have been released by GCHQ.	cryptobeast	45	6	4		t5_2qq4h	False
1310005826.0	iins6	Ed25519: high-speed high-security signatures (fast elliptic-curve signatures from the guy who wrote qmail)	AdShea	36	0	0		t5_2qq4h	False
1374127347.0	1ijjxu	Interesting read by Asange.	skijeeper	48	13	4		t5_2qq4h	False
1376232161.0	1k58li	"Colin Percival's response to ""The Factoring Cryptopocalypse"" and the surrounding media frenzy"	ReidZB	46	10	0		t5_2qq4h	False
1359916477.0	17tffa	NTRU is an asymmetric (public/private key) cryptosystem. It has two characteristics that make it interesting as an alternative to RSA and Elliptic Curve Cryptography: speed and quantum computing resistance	whitefangs	44	8	3		t5_2qq4h	False
1349463556.0	1107zo	Schneier on Security: When Will We See Collisions for SHA-1?	sigzero	43	9	6		t5_2qq4h	False
1347394143.0	zq5jo	Why is my online banking less secure than my battle.net and gmail account?	Uprock7	51	15	36	Compared to my Blizzard Battle.net account, my steam account, and my gmail account, the security on my online banking is pretty pathetic. I realize banks are not tech companies, but shouldn't they be prioritizing adoption of better security measures? I use PNC, and I wish they would give me the option to purchase a key fob for logging in. 	t5_2qq4h	True
1346869351.0	zekv3	New Attack Uses SSL/TLS Information Leak to Hijack HTTPS Sessions	TheloniusPhunk	40	7	0		t5_2qq4h	False
1328900291.0	pjp8x	As Iran Cracks Down Online, Tor Tests Undetectable Encrypted Connections - Forbes	wtfomglolz	35	2	4		t5_2qq4h	False
1302522519.0	gnbwz	"Random versus Encrypted Data
"	DrWhax	36	4	2		t5_2qq4h	False
1374845192.0	1j3fsp	/r/AskCrypto: What is your job, and what is your education level?	cryptoquestion	44	10	24	"I'm interested in hearing about /r/crypto reader's jobs, and the formal education you have. 

I am a CS student, going into my junior year- I am very interested in pursuing a professional career in cryptography, but I am finding it difficult to begin gaining research experience at my university. As such, I'm concerned about the requirements of grad school for a career in this field, or my ability to start a career with only a bachelor's degree. My GPA is a 3.5, with some development work experience, but no formal research yet. I'm unsure about how far fetched grad school is considering this.

I'd be very interested in hearing from readers of this subreddit about my question, and I'd be very appreciative of any advice.

Edit: Thanks everyone for the replies. I'll continue reading any new posts!"	t5_2qq4h	True
1358907383.0	173hie	Mega: A word on cryptography	whitefangs	45	10	7		t5_2qq4h	False
1356126354.0	158yvy	BLAKE2 — improved version of SHA-3 finalist BLAKE, now faster than MD5	dchestnykh	39	6	21		t5_2qq4h	False
1353756371.0	13plu9	Pond, or how to better organise a discreet relationship with the Director of the CIA	dchestnykh	38	5	5		t5_2qq4h	False
1350436867.0	11lra3	Quantitative Analysis of the Full Bitcoin Transaction Graph, Dorit Ron and Adi Shamir	Julian702	35	5	3		t5_2qq4h	False
1348610068.0	10h1hs	Good explanation of fully homomorphic encryption	cryptolite	37	5	3		t5_2qq4h	False
1329846883.0	pzkj8	52 Things People Should Know To Do Cryptography	B-Con	39	8	4		t5_2qq4h	False
1372662838.0	1hewtd	SSL/TLS &amp; Perfect Forward Secrecy	whitefangs	37	7	18		t5_2qq4h	False
1370608239.0	1fuvtn	Good secure private chat room software?	vbuterin	41	6	30	"Does anyone know of any good programs that can create a secure, private chat room between a medium-size (eg. a few dozen) group of people? We're looking for something with the following properties:

1. Nearly instantaneous, and designed for chatroom use; something like BitMessage, with its deliberately slow message creation time, won't cut it
2. The underlying encryption relies on either encrypting all messages with every group member's public key or negotiating (N^2 -N) / 2 symmetric keys for every pair of people in the group (or some other similar construction). Having a single room private key doesn't cut it because it would be too easy for that information to fall into the wrong hands and if a leak was discovered there would be no way to correct the problem without relying on an outside channel.
3. Easy to use.
4. Multiplatform (ie. Windows, Mac, Linux, ideally Android too)

We've looked at Pidgin, Cryptocat, Bitmessage and a few others, and so far haven't found anything that gives us what we need. Anyone have any other suggestions?"	t5_2qq4h	True
1366592268.0	1cu142	You Should Do The Matasano Crypto Challenges (x-post /r/netsec)	mwielgoszewski	38	9	20		t5_2qq4h	False
1362883609.0	1a0602	Here come the encryption apps!	whitefangs	38	7	0		t5_2qq4h	False
1356782744.0	15mei0	The anatomy of a bad idea - W3C Web Cryptography API	chipsa	40	6	5		t5_2qq4h	False
1347106587.0	zjwtd	Cryptoparties, danger, and why you (the hacker) should help.	EquanimousMind	41	6	5		t5_2qq4h	False
1329176083.0	po799	[PDF] A cryptosystem proposed to the NSA by John Nash in 1955, recently declassified	fuckingbagre	37	5	14		t5_2qq4h	False
1375455119.0	1jkeoj	Ask /r/crypto: is data compression now a very dangerous thing to combine with encryption?	api	41	8	31	"Given the CRIME and now BREACH attacks against SSL, I am now wondering: is it now very unsafe to combine compression with encryption?

Both attacks (BREACH is just a CRIME variant) exploit the fact that compression can leak information about a message by way of the size of the compressed output.

Abstracting further, we could state this as a rule:

*Any transform applied to plaintext prior to encryption that modifies the size of the plaintext in response to its content could potentially leak information about the plaintext.*

Thoughts?

Edit: I ask because I'm considering yanking compression from [this](https://github.com/zerotier/ZeroTierOne). Seems to me that in a virtual IP network it'd be very easy to execute a variant of CRIME using ICMP PINGs or similar. Yikes. Seems like this would impact OpenVPN, IPSec, meshnets, Tor, all kinds of stuff. Seems particularly dangerous for meshnets, Tor, and similar, since executing an oracle attack is easy in such environments."	t5_2qq4h	True
1354920422.0	14gw9a	Defcon 17: Cracking 400,000 passwords, and how to explain to your roommate why the power bill is so high.	Synchronizing	48	17	2		t5_2qq4h	False
1346899194.0	zfgoh	An interesting movement gaining momentum is cryptoparties, which is about learning and sharing fundamental survival skills.	EquanimousMind	33	2	3		t5_2qq4h	False
1345564764.0	yl2tn	How to Explain Zero-Knowledge Proofs to Your Children (from pioneers of zero-knowledge proofs)	B-Con	34	4	2		t5_2qq4h	False
1343797175.0	xhorf	NIST was supposed to announce SHA-3 this June, does anyone know what's going on?	ShapeFantasyScads	34	4	28		t5_2qq4h	False
1341739807.0	w7t7g	Crypto and US customs?	icanhazthrowaway92	39	6	66	I'm currently setting up a new laptop. For obvious reasons, I like having some crypto software installed, in particular GPG/Enigmail, TrueCrypt and the Pidgin OTR plugin. I'm a citizen from a european country, and I'm expecting to have to visit the US in the future for professional reasons, probably having to bring along my laptop. Should I expect trouble with customs when having the above software installed?	t5_2qq4h	True
1306816457.0	hnze6	What's good starting material for crypto (Books, lectures etc.)	LSD_Sakai	41	9	17	So i've become really interested in crypto thanks to Steve Gibson over at TwiT and the Security Now Podcast. I'd love to get closer to crypto vidya. How did you guys get into crypto and what materials helped you get there?	t5_2qq4h	True
1374949518.0	1j66td	Applied Cryptography Engineering	dgryski	33	2	15		t5_2qq4h	False
1358585081.0	16vak5	"Building Mega: Ars’ pre-launch interview with Kim Dotcom.
New service is bulletproof, says Dotcom - the most lawyered-up startup ever"	whitefangs	43	10	25		t5_2qq4h	False
1350342481.0	11jdsk	A Reddit numbers station?	api	38	7	19		t5_2qq4h	False
1312115773.0	j4spp	Found this near a 'Haven' holiday park in Hastings, Sussex (South England) 	monkey_in_shoes	43	10	2		t5_2qq4h	False
1308844126.0	i78ma	Bob sends a message to alice [x-post from r/geek]	LSD_Sakai	36	8	6		t5_2qq4h	False
1301450325.0	gedw5	FBI wants public help solving encrypted notes from murder mystery [Original source]	The-Cake	33	2	6		t5_2qq4h	False
1351101218.0	120mfq	Attacking TrueCrypt - The H Security: News and Features	coerciblegerm	42	10	15		t5_2qq4h	False
1343156715.0	x35rj	Four theories on the cryptography of Star Trek	jfdm	41	13	4		t5_2qq4h	False
1310559240.0	iod5j	140bit near collision found in SHA-1	subxorror	33	6	2		t5_2qq4h	False
1376209395.0	1k4wi9	Bitmessage: Choice Of A Rightly Paranoid Generation	whitefangs	42	11	0		t5_2qq4h	False
1365823699.0	1c91pa	New Website for Learning the Basics of Cryptography	learncrypto	39	11	5		t5_2qq4h	False
1363121634.0	1a65cl	RC4 is kind of broken in TLS	B-Con	33	4	14		t5_2qq4h	False
1362163891.0	19h6hf	A primer on elliptic curves	lisper	34	7	6		t5_2qq4h	False
1361840124.0	1987eb	Spideroak debuts Crypton, framework for end-to-end encrypted cloud applications	whitefangs	34	10	8		t5_2qq4h	False
1344954084.0	y7bpz	"World-class cryptos wanted: Researchers seek help decoding ""encrypted warhead"""	EquanimousMind	40	12	11		t5_2qq4h	False
1333637578.0	ruoa6	How China Is Blocking Tor | arXiv - pdf		36	8	5		t5_2qq4h	False
1326728011.0	ojcvl	FBI OpenBSD Backdoors and RSA Cipher Vulnerability	pwnwaffe	41	10	6		t5_2qq4h	False
1325880835.0	o5tnv	Crypto StackExchange in Beta -- needs some lovin'	dgryski	30	3	1		t5_2qq4h	False
1325166438.0	nuweo	What's happened in 'practical' crypto in 2011	cryptoguy	29	2	3		t5_2qq4h	False
1308097261.0	hzvd3	An inexpensive hardware RNG that feeds /dev/random in Linux (this is old news, but new to me)	puffybaba	32	3	7		t5_2qq4h	False
1375305099.0	1jg55j	Salted Password Hashing - Doing it Right	blowupbadguys	39	15	7		t5_2qq4h	False
1372435106.0	1h964f	Question about when governments or authorities start to ban general encryption...	eitauisunity	36	8	37	Are there methods that will allow you to asymmetrically steganographically encrypt something such that my encrypted traffic looks like legitimate non-encrypted traffic?	t5_2qq4h	True
1362645076.0	19u4ci	New Crypto Library: Sodium. API-compatible, cross-platform implementation of NaCL released yesterday. 	pacohope	32	5	6		t5_2qq4h	False
1361977216.0	19buz7	Experts Say It's Time to Prepare for a 'Post-Crypto' World	vestige	49	21	19		t5_2qq4h	False
1360933297.0	18kujs	Why I hate CBC-MAC	vestige	36	10	5		t5_2qq4h	False
1357243306.0	15wl3l	"""A flash proxy is a miniature proxy that runs in a web browser. It checks for clients that need access, then conveys data between them and a Tor relay."""	whitefangs	36	10	1		t5_2qq4h	False
1355081476.0	14k5jl	The CryptoParty Handbook - A digital security &amp; privacy primer	krimms	36	8	6		t5_2qq4h	False
1347905576.0	1017rj	Google and Mozilla's web cryptography API gets first working draft	B-Con	34	5	10		t5_2qq4h	False
1339092876.0	uq4vm	"CWI cryptanalyst discovers new cryptographic attack 
in Flame spy malware "	wtbw	30	5	4		t5_2qq4h	False
1334053688.0	s2crq	Dining cryptographers problem	dchestnykh	30	3	1		t5_2qq4h	False
1324451827.0	nl0dz	Whisper Systems TextSecure is now FOSS	throwawayagin	29	2	2		t5_2qq4h	False
1313076852.0	jfriy	Hackers crack crypto for GPRS mobile networks	TheloniusPhunk	28	2	2		t5_2qq4h	False
1294955787.0	f1tnr	Cracking WPA-PSK in six minutes for $1.68 worth of time on Amazon EC2	rd4	33	6	18		t5_2qq4h	False
1250598244.0	9bp64	512 bit RSA key used for TI-83+ code signing factored by single desktop CPU in 73 days	randombit	28	2	0		t5_2qq4h	False
1372764161.0	1hho1z	Breaking a Toy Hash Function.	notlostyet	30	4	3		t5_2qq4h	False
1371537303.0	1gkk6v	Cryptography is a science, not engineering	timoh	33	7	18		t5_2qq4h	False
1361044362.0	18nhdp	Bitmessage is a P2P communications protocol used to send encrypted messages to another person or to many subscribers	whitefangs	36	10	26		t5_2qq4h	False
1344954199.0	y7bu1	Public Key Cryptography: Diffie-Hellman Key Exchange - YouTube	wtfomglolz	30	3	3		t5_2qq4h	False
1340563050.0	vj7cb	Impossible Differential Cryptanalysis Tutorial	jkthecjer	32	8	1		t5_2qq4h	False
1310947736.0	isd2y	Cryptography	taozero	31	7	2		t5_2qq4h	False
1309422539.0	id3g8	TIL: Kryptos, a statue at the CIA in Langley, contains 4 encrypted messages. The statue is 20 years old, but only 3 sides are solved.	brich	36	11	15		t5_2qq4h	False
1294808348.0	f0p61	TrueCrypt identification string...	paulcap	36	8	26		t5_2qq4h	False
1375390586.0	1jiql1	Crypto Gains Ramp Up Calls to Get Ahead of Inevitable RSA Algorithm Downfall	InfectiousFelonius	33	6	16		t5_2qq4h	False
1374297686.0	1ioijo	"Cryptovirology-""...the culmination of over a decade of research on novel cryptographic Trojan horses, viruses, and worms in peer-reviewed academic forums."""	antibubbles	30	6	0		t5_2qq4h	False
1372541314.0	1hbwnv	RSA Keys with Exponent 1 in salt. How bad was this?	dist	29	2	20		t5_2qq4h	False
1368072066.0	1dzcc6	Just wondering... why is /r/crypto headed by a Stegosaurus?	jocularferret	42	21	22	Is it a reference to steganography? Or am I completely missing the point?	t5_2qq4h	True
1363202923.0	1a8fu6	Shafi Goldwasser, Silvio Micali to Receive 2012 ACM Turing Award for Advances in Cryptography	groumpf	28	2	2		t5_2qq4h	False
1347181101.0	zlgt0	Fun with the TLS handshake (how the TLS handshake work, and abusing it to get trusted timestamping)	bjrn	28	3	1		t5_2qq4h	False
1370874095.0	1g1nak	Securing the cloud: New algorithm solves major problem with homomorphic encryption	euler_identity	32	7	13	"http://phys.org/news/2013-06-cloud-algorithm-major-problem-homomorphic.html
article

http://people.csail.mit.edu/nickolai/
hub to find papers related

http://people.csail.mit.edu/nickolai/papers/tu-monomi.pdf

http://people.csail.mit.edu/nickolai/papers/goldwasser-we.pdf

http://people.csail.mit.edu/nickolai/papers/goldwasser-sfe.pdf

http://people.csail.mit.edu/nickolai/papers/popa-mope.pdf

http://people.csail.mit.edu/nickolai/papers/goldwasser-we-eprint.pdf

http://people.csail.mit.edu/nickolai/papers/popa-mope-eprint.pdf

http://people.csail.mit.edu/nickolai/papers/goldwasser-sfe-eprint.pdf"	t5_2qq4h	True
1364078148.0	1avsl1	Encrypting SSD Drive	Scorepser	27	4	35	Finally able to save up and get a SSD. Put my OS on it and booting from it. I was going to truecrypt encrypt the drive but after some quick googling there seems to be some debate on whether or not you should do this. I THINK based off the life of SSD being a number of write/read and the encryption adds more strain to this. What is /r/crypto thoughts on this? Are there any alternatives?	t5_2qq4h	True
1360229886.0	18232j	Pressure Increases On Silent Circle To Release Application Source Code	matonis	31	7	1		t5_2qq4h	False
1357585475.0	164teo	Parley.co Project Outline: Encrypted Email and IM for Everyone	whitefangs	27	3	2		t5_2qq4h	False
1353714321.0	13ougu	UK spies unable to crack coded message from WWII carrier pigeon 	scientologist2	31	6	16		t5_2qq4h	False
1329654695.0	pwdqg	4/1000 RSA keys compromised	etbrute	28	5	12		t5_2qq4h	False
1327873771.0	p231x	Single-block collision for MD5	dchestnykh	26	2	2		t5_2qq4h	False
1324274524.0	ni7a5	A summary of the status of RC4	B-Con	27	3	6		t5_2qq4h	False
1315118025.0	k46le	Tutorial on differential cryptanalysis of FEAL-4	jkthecjer	29	5	6		t5_2qq4h	False
1294295420.0	ex3ke	LUKS Full disk encryption on android	freeborn	31	8	9	"(didnt get much interest on /r/android, thought Id share here too)

Meaning preboot you are required to enter in a password to decrypt both user/application and sdcard data.  The encryption mechanisms used are kernel modules(dm-crypt,AES) already available in many builds of android.  These modules are widely distributed in the linux ecosystem and considered by many to be very strong encryption.  Also, its worth noting that in the first link the user is running this on a G1.. so horsepower is not a requirement ;).


first theres this:
http://androidvoid.wordpress.com/2009/09/30/android-encryption-using-cryptsetup-and-luks/
its a bit lengthy.. and I think this process will be much easier on debian(less building of libraries)

and then more recently someone has begun working on a UI and some init scripts:
http://i.imgur.com/K1K9i.jpg
http://forum.xda-developers.com/showthread.php?t=866131

"	t5_2qq4h	True
1375916720.0	1jx1n1	What is the difference between a cryptographic seed and salt?	verandaguy	29	6	17	I'm a beginner cryptographer, and am somewhat confused about the difference between the two. Could someone explain?	t5_2qq4h	True
1374641756.0	1ixr88	Some great books on cryptography. Both technical and non-technical.	papul1993	27	4	7	I am currently reading [The Code Book by Simon Singh](http://www.amazon.com/Code-Book-Science-Secrecy-Cryptography/dp/0385495323) and it is a great book. Are there any other books like this? Also are there any easy to understand but with quite some technical knowledge books	t5_2qq4h	True
1373528274.0	1i2g9v	Crypto Fails	dgryski	29	6	5		t5_2qq4h	False
1372149542.0	1h0zu7	AdLeaks, anonymous whistleblowing even if your network is monitored	whitefangs	27	6	3		t5_2qq4h	False
1367861676.0	1dsxyh	Lab has been running a small intranet with a quantum one-time pad for two years [x-post from r/technology]	Quibbler2412	33	8	8		t5_2qq4h	False
1367695660.0	1doxxy	World War II Code Is Broken, Decades After POW Used It	redcell5	36	13	1		t5_2qq4h	False
1364210202.0	1ayufw	How well does the XKCD password generation method stand up against crackers?	FuZzY_BuBbLeS	41	17	40		t5_2qq4h	False
1352339898.0	12u0up	Cryptography For Pentesters 	turnersr	26	3	14	"This list is not exhaustive and some details need to be filled in. Please feel free to post your own attacks! I am eagerly awaiting suggestions. 





* **ECB**
* Block Swapping
* Data Leakage (In some cases, total decryption via the natural chosen-plaintext attack). 

* **CBC**
* Leakage attack
* Watermarking
* Data modification leak
* Malleability
*  Cut &amp; Paste attack
* Vaudenay's Oracle


* **CTR** 
* Counter reuse
* Passki and Ritter's Oracle (CBC and OFb/CFB)

* **RSA**
* Fault Injection &amp; Random Faults
* Multiplicative property
* Choosing common modulus N to serve multiple users.
* Small decryption exponent d
* Forward Search Attack
* Coppersmith's Attack
* Coppersmith’s Short Pad Attack
* Hastad's broadcast attack
* Bleichenbacher’s Attack on PKCS 1
* Kocher's Timing Attacks
* Manger's oracle
* Naive implementations
* Franklin-Reiter Related Message Attack

* **Stream Cipher**
* Correlation Attack
* Keyreuse

* **DH**
* Denial of service Attacks
* Man in the Middle Attacks
* Degenerate Message Attacks
* Simple Exponents
* Simple Substitution Attacks
* Message Replay Attacks
* Message Redirection
* Attacks on Parameter Authentication
* Timing Attacks
* Small group reduction
* Reusing ephemeral keys

* **DSA**
* Fault Attacks
* Misuse or leakage of per-message secret

* **ECC**
* Fault Attacks
* Side-Channel

* **Hashing**
* Non constant compares
* Merkle-Damgard construction weaknesses (Merkle–Damgard construction padding block does not contain the length, etc .., deriving new collisions from an old one,  etc .. )  
* Incorrect MAC construction (Not using HMAC) 
"	t5_2qq4h	True
1349297327.0	10w90e	"When a CA's root certificate expires, are they 
required to generate a new private key or just 
reissue the cert with new expiration dates?"	terremoto	28	6	8	[placeholder]	t5_2qq4h	True
1347481829.0	zs8ps	Gambling with Secrets - A Documentary on the Fundamentals of Cryptography	TyIzaeL	30	7	5		t5_2qq4h	False
1340118620.0	va1c7	Fujitsu Cracks Next-Gen Cryptography Standard 	Masfo	30	9	4		t5_2qq4h	False
1337038052.0	tn9gk	OpenSSH's randomart algorithm is pretty simple. More things should use this. 		27	2	9		t5_2qq4h	False
1333306825.0	roays	Researchers discover critical flaw in snowflake generation algorithm	phyzome	29	8	2		t5_2qq4h	False
1324392515.0	njvlp	CryptDB executes database queries over encrypted data without ever decrypting it.	CrackHeadRodeo	26	6	2		t5_2qq4h	False
1321332772.0	mcpqb	Screencap from movie The Mechanic: Encrypted Message is *almost* actually legit.	aviewanew	31	8	4		t5_2qq4h	False
1313575088.0	jlga8	"Biclique cryptanalysis of the full AES
"	wtbw	24	1	4		t5_2qq4h	False
1308017534.0	hz1hc	"""Evil Maid"" Attacks on Encrypted Hard Drives"	isisgrimalkin	35	13	4		t5_2qq4h	False
1302562795.0	gnr3q	DARPA Will Spend $20 Million To Search For Crypto’s Holy Grail	DrWhax	26	3	4		t5_2qq4h	False
1292974105.0	eplbz	"Cryptographic filesystem by Julian Assange for protecting against ""rubber hose cryptanalysis"""	annodomini	25	2	5		t5_2qq4h	False
1374762680.0	1j11rr	This may be a bit elementary, but it's an excellent explanation of HTTPS nonetheless:	InfectiousFelonius	28	6	7		t5_2qq4h	False
1373868237.0	1ibo88	newb here designing an encrypted chat server/client	d4rch0n	27	6	16	"That title is probably a glaring red flag, but I'm not going to make any public claims to its security. It's a pet project to educate myself more on cryptography.

The basic idea behind my chat service is that the server will run on a Tor hidden service, the messages will be transported through SSL, the messages are encrypted with RSA keys currently with PKCS1_OAEP cipher (pycrypto library), and each message a user sends includes a new public key to reply to, and some sort of integrity check which I haven't implemented, with hopes that will prevent someone from modifying the message. I know the devil's in the details and that that is a vague description, but that's the general plan. I'm curious if there are any obvious flaws with this idea, at that high level.

So far, this works:

On connect, the server sends it's public key plain-text.

The client responds with its own public key, encrypted to the server's.

There are currently 3 types of requests the client can make: get a list of messages to it, get a list of users (public keys at the moment), and send a user a message. I haven't implemented integrity check, or the method of attaching a new public key to a message to be used for further communication.

One mistake I already know I made is that I encrypt long messages in chunks using that block cipher. What's the right way to do this?

I should probably use a much higher-level crypto library, but again this is mostly for educational purposes.

Do you see any flaws in the general design? Any suggestions? I plan to write the client in C++ after I finish the prototype in Python. The client is really just a simple test of the protocol at the moment, and I'm just happy it seems to work.

The source can be found here if you want to see some terrible code: https://bitbucket.org/johannestaas/conclave

Thanks for any suggestions and links!

Edit:
Thanks! Lots of good advice!"	t5_2qq4h	True
1367122724.0	1d98a9	What disk encryption schemes would you recommend and why?	etbrute	30	8	43	I can see different schemes may fit different needs. For example, whole disk encryption is great unless you cross borders frequently and may need to boot a laptop at customs to show that it is a functional system. In such a case, I prefer to have an unencrypted OS while keeping important info on an encrypted partition that need not be decrypted if asked to boot and log in. What suggestions would you make for a laptop, or a desktop? 	t5_2qq4h	True
1358445747.0	16rh0c	No more secrets! Cypherpunks, Wikileaks, and the new era of total surveillance. Andy Greenberg talks Bradley Manning, cryptographic anonymity, and Icelandic information activists	whitefangs	32	12	1		t5_2qq4h	False
1356205781.0	15ajfa	Best way to reduce chance of SHA-256 hash collisions?	cavedave	35	14	13		t5_2qq4h	False
1352562593.0	12ys64	Android PGP SMS	MikeKaz	26	4	18	"I figured I would ask the pro's if this is implemented correctly and safe crypto to use over TextSecure and such for SMS. Is this the real thing?

https://play.google.com/store/apps/details?id=com.woodkick.pgpsmslite&amp;feature=more_from_developer#?t=W251bGwsMSwxLDEwMiwiY29tLndvb2RraWNrLnBncHNtc2xpdGUiXQ"	t5_2qq4h	True
1349465409.0	1109x0	Is it really a bad idea to use Full Disk Encryption (TrueCrypt) on my new SSD?	RamsesCG	25	4	14	"I just purchased a brand new OCZ Agility 4 SSD.  TrueCrypt documentation recommends against using TC in any capacity with SSDs due to insecurity around devices that use TRIM.  Is this just a CYA thing that TrueCrypt is saying, or is this a legitimate issue?

I really like the idea of FDE.  I take comfort in knowing that if someone steals my machine, that the info on my drive, such as tax documents and passwords, won't be compromised.  
TL;DR - Is Full Disk Encryption really off the table for me now that I have an SSD?"	t5_2qq4h	True
1348857190.0	10mpz9	An implementation of the 250 year old encryption algorithm by Leibniz that was recently rediscovered by Dr. Rescher at the University of Pittsburgh	anastas	28	8	0		t5_2qq4h	False
1348696736.0	10j2xa	CryptoParty just got a page on Wikipedia ;)	EquanimousMind	27	7	3		t5_2qq4h	False
1345908380.0	yt3vc	Where is a good simple/fun place to start with crypto?	monstereddit	25	4	20	I can code a bit, and I am starting a maths degree, and I just wanted to play with something in my spare time that was in a similar vein to my interests, any thoughts?	t5_2qq4h	True
1345132379.0	ybpl0	Interesting claims that Mintchip has tracking stenographically embedded into the protocol	postnapoleoniceurope	29	8	4		t5_2qq4h	False
1344303758.0	xssk9	"PGP Web of Trust for ""Password Reset"""	eldentyrell	29	5	46	"Unfortunately, very few people use distributed identity systems like the PGP Web of Trust.  Most people use some sort of centralized identity service like Facebook or Google Accounts.  (I'm being deliberately vague here about exactly what I mean by ""identity service""; bear with me).

One big reason why average users are more comfortable with centralized services is that it's easy to deal [insecurely!] with a lost password or hacked account -- you contact the centralized provider and convince them via some out-of-band mechanism (passport scan, etc) that you are who you say you are, and they give you back your account.

In a distributed system like PGP WoT, if a hacker steals your private key, it's pretty much game over.  This is not Grandma-friendly.

Has anybody proposed giving a PGP-WoT style system the ability to perform ""password resets"" (actually ""private key resets"")?  The idea is that while you still control your private key you are encouraged to sign certificates indicating who your friends are, and which groups of friends acting together are authorized to reset your private key.  Ideally each of these groups would include a large number of people most of whom don't know each other, in order to avoid collusion.  The ""ground rules"" of the system would involve the ability to change keys by having the old key sign the new key, **but also** allow changing keys by having every member of a friend-group signed by the old key sign a new key.

The job of serializing these ""key resets"" can be handled the same way Namecoin handles the transfer of key-value pairs.  In fact, this whole idea is probably more appropriate to a ""Namecoin web of trust"" than a PGP web of trust.

Has anything like this this been proposed before?

**Update, 02-May-2013:** Apparently [facebook likes this idea](http://www.zdnet.com/facebook-adds-new-password-recovery-tool-trusted-contacts-7000014786/), minus the crypto."	t5_2qq4h	True
1338319510.0	uarxu	How to choose an Authenticated Encryption mode	quietsquare	25	2	1		t5_2qq4h	False
1330968397.0	qis32	Returning privacy to E-mail	throwawayagin	22	0	5		t5_2qq4h	False
1316034223.0	kfrlx	"Basics of homomorphic encryption - ""Maybe you trust your cloud provider, but what if trust is not enough?"" (x-post from r/netsec)"	snappywan	24	3	1		t5_2qq4h	False
1292687248.0	enxmu	Criminals find the key to car immobilisers due to poorly designed crypto.	sanitybit	26	2	1		t5_2qq4h	False
1246488447.0	8xfrm	Ron Rivest withdraws MD6 from the SHA-3 competition	johnlunney	23	1	0		t5_2qq4h	False
1375868018.0	1jvgom	So what's the state of trust towards Mega ?	FLHKE	25	4	33	"I've been using Mega at work to share data exports for a few weeks now. I've been thinking lately to store all my personnal data (inside a 50GB+ truecrypt container). I have to admit I absolutely love the service. It's fast, clean, and easy to use. But is it trustworthy ?

The site has launched for a few months now, and despite people claiming it was not secure at first, it's still going strong. Now that the hype has passed, I wonder what's the status regarding Mega's security and its crypto standards ?"	t5_2qq4h	True
1372250840.0	1h3rnd	Explaining Crypto to children	ranmrdrakono	24	5	4	"Hi r/crypto,
I'm looking for ressources on how to explain principles of modern cryptography to children. 

So far I found the CSunplugged Series to be quite good:

http://csunplugged.org/cryptographic-protocols 

Then there is the classic ""magic cave"" explanation to ZKP

https://sparrow.ece.cmu.edu/group/630-f08/readings/ZK-IntroPaper.pdf

Of course there is the nice explanaition for Diffie hellman using colors:

http://www.youtube.com/watch?feature=player_detailpage&amp;v=YEBfamv-_do#t=162s

From the same series there is an explaination for RSA that uses complementary colors which is not nearly as convincing.

http://www.youtube.com/watch?feature=player_detailpage&amp;v=vgTtHV04xRI#t=139s

There is quite a nice explaination for RSA style encryption using keys, padlocks and boxes, but I cant seem to find a decent source for this - but I'm quite sure everyone around here has seen it somewhere. 

Now I would be quite interessted in any good resource any of you fine folks encountered that explains some aspect of modern cryptography in a chil friendly way. I would be especially interested in ways for explaining signature schemes."	t5_2qq4h	True
1357883594.0	16d5rs	The patents on OCB mode are now free for most software implementations	yotta	27	5	9		t5_2qq4h	False
1356636941.0	15j67b	Breaking Hard-Disk Encryption	buffer_	27	6	11		t5_2qq4h	False
1350568111.0	11oson	Fingerprint decryption: The Gauss malware has a payload whose decryption key is derived from hashes of the target computer's filesystem. [xpost/netsec]	phyzome	28	6	2		t5_2qq4h	False
1348843487.0	10mbzn	[PDF] Uncovering spoken phrases in encrypted VoIP conversations, without decryption	firebyte	28	5	3		t5_2qq4h	False
1340828676.0	vpbr0	An App That Encrypts, Shreds, Hashes and Salts	GunkertyJeb	30	10	12		t5_2qq4h	False
1339533573.0	uyk0u	CryptOMG is a configurable CTF style test bed that highlights common flaws in cryptographic implementations.	Stilvos	27	5	2		t5_2qq4h	False
1338955430.0	undxt	Are there any cryptanalysis jobs outside of the NSA?	caallen	26	3	25	If there are any, could you awesome folks point me in the right direction? Thanks.	t5_2qq4h	True
1338590505.0	ugcdu	Password security: past, present, future (PHDays 2012), including design of KDFs	solardiz	24	4	0		t5_2qq4h	False
1335264391.0	sprw8	Crypto Stick | The single key for your digital life.	SparxNet	36	15	15		t5_2qq4h	False
1333572586.0	rthzv	What are your favorite crypto challenge sites? I am addicted to this one.	skintigh	24	3	15		t5_2qq4h	False
1315300039.0	k691f	What good is a salt when it comes to website password encryption?	HighBeamHater	28	7	19	"I mean...

If the entire process used to generate the salt is laid out on the website, whoever hacks into the website and steals your database will surely be able to gain access to the files that create the salt, no?

(P.S.: I know nothing about cryptography.)

***EDIT: Thank you all for the amazing responses.***"	t5_2qq4h	True
1300407951.0	g638d	Extremely Sophisticated RSA Hack...  2 Factor Authentication just got a bit shaky.	wtfomglolz	22	1	9		t5_2qq4h	False
1299718470.0	g0ty4	djb's Understanding brute force [PDF]	gthank	21	0	1		t5_2qq4h	False
1293647902.0	et7d7	Is there any board/forum/subreddit for the serious discussion of crypto internals?	loudZa	24	2	12	"I'm really interested in crypto, I've done some serious crypto research but I'm not that involved in academia at the moment. /r/crypto seems to concerned with popsci-crypto, which is fine and I enjoy reading, but I want some real discussion and analysis of new crypto papers, especially with regard to 'cowboy-crypto' such as the SHA3 entries (the NIST mailing list is good, but generally posters are talking formally in an academic context, very little in the way of intuition) and AES entries. I've found that, while papers are good, the really interesting facts come out when a bunch of experts in an informal setting respond to a paper (RUMP sessions and the like), poke it, tear it apart. I'm part of some discussion groups, but I'd love to find a large group on the internet.

Anyone know of any such gathering on the internet?

"	t5_2qq4h	True
1376704149.0	1kiyvl	What math is needed to understand a crypto paper?	crtode	27	7	8	"I have a CS background, but am not particularly great with math and would like to change that.

When looking at paper such as FMS on the Weaknesses in the KSA of RC4[1], I'm can move through fine until the mathematical notation turns up.

I've got plenty of experience attacking Wi-Fi networks and understand the high-level principles (as a pentester), but I'm really really interested in actually understanding the finer details.

What type of math, and possibly books or websites would help me with this best?

EDIT: I've checked the sidebar links, and have tried to grok the ""Mathematic Notation Explained"" in a bunch of other crypto papers. I think I need something much more encompassing. I'm prepared to invest some time to have a solid understanding.

[1] http://aboba.drizzlehosting.com/IEEE/rc4_ksaproc.pdf"	t5_2qq4h	True
1370762121.0	1fyzr7	Ray Ozzie comments on Hacker News about the NSA kerfuffle.	jacobmiller	24	5	0		t5_2qq4h	False
1370435491.0	1fptr2	Algorithm that can be effectively used in-brain?	xaoq	26	6	18	"Hi!

Is there some kind of simple, yet effective encryption algorithm that's possible to learn and use without computers or even pen&amp;paper? I think there was something called ""knight's cipher"" or simillar, but I can't find it anywhere now.

In short: how would you go about encrypting SMS sent from potatophones such as nokia 3310? What if you were in no way able to use computer to encrypt and at best you had a standard calculator the phone has?

Simple cipher I figured would be using keypad, eg:

    266472885284667

Few notes:

- the decryption doesn't have to be as easy or fast, we can assume decryption can happen on PC. But if it's possible to be decrypted then it's great.
- it doesn't have to be military grade encryption, but something that yields a lot of false positives would be nice
- key-based encryption, so each message can be different (based on time, or maybe key from previous message)"	t5_2qq4h	True
1361226933.0	18s1ht	Keccak and the SHA-3 standardization (presentation by the Keccak team to NIST)	B-Con	23	4	5		t5_2qq4h	False
1360417641.0	186wgo	Password Cracking AES-256 DMGs and Epic Self-Pwnage	isosafrole	25	6	0		t5_2qq4h	False
1353441464.0	13iwu0	How is Diffie-Hellman used in crypto?	cajuntechie	26	7	9	Let's assume an encrypted chat application. My partner and I arrive at our shared secret. Now what? How is that shared secret applied? Diffie-Hellman is a key generation and exchange protocol. Would we then use that extremely long number as the 'passphrase' to AES-256 encrypt text passed between us or something like that?	t5_2qq4h	True
1352677935.0	13187b	Real World Cryptography Workshop	B-Con	24	2	0		t5_2qq4h	False
1345629085.0	ympmg	Not So Random Numbers. Take Two.	pwnwaffe	24	4	3		t5_2qq4h	False
1343756099.0	xgisp	German weekly Zeit opens a digital mailbox for whistleblowers. Anonymous submission, encrypted transfer, anonymous communication with journalists possible, opensource on github [xpost from /r/technology] 	mnp	28	6	0		t5_2qq4h	False
1341028740.0	vtu1g	Leveraging cryptography to provably shuffle a deck of cards fairly	libertaad	23	4	18		t5_2qq4h	False
1340900696.0	vqwor	Why RSA is misleading about SecurID vulnerability	B-Con	31	10	1		t5_2qq4h	False
1334237722.0	s64rd	Which algorithm to use in TrueCrypt?	protector_of_info	24	4	31	"I want to know which algorithm would be best to use in my situation. I want to do full disk encryption with TrueCrypt, and I have made up a passphrase. It is &gt;40 characters long, alphanumeric, special characters etc. I am engaged in activities which, let's say, may warrant NSA/FBI involvement in an investigation. The aim is to keep these guys out (for as long as possible). I also use the computer daily for standard activities (email, word processing, internet), so speed is also relevant.

Would AES be enough, or should I go for cascaded ciphers? If so, which is more secure: AES-Twofish-Serpent or Serpent-Twofish-AES?

Finally, how does cascaded encryption actually help? If you still only use one passphrase, how do multiple ciphers increase security?

**Edit**: What about other algorithms? Is the extra security from Serpent worth the loss of speed?"	t5_2qq4h	True
1332222293.0	r4q2q	Reliable time-lock crypto. Step one: obtain a deep-space probe...	flashman	25	6	5	"After reading [this article on time lock cryptography](http://www.gwern.net/Self-decrypting%20files) I realised that you just need to store the decryption unit in a secure location. And what could be more secure than the [Oort cloud](http://en.wikipedia.org/wiki/Oort_cloud)?

Launch your space probe. After it's securely in space, it generates a public/private key pair using random cosmic radiation as the source, and transmits only the public key to Earth. Any incoming messages signed with the public key will be decrypted and retransmitted in the clear.

Now messages signed with the public key can't be decrypted faster than the roundtrip light time between Earth and the probe. Need the message locked for longer than the roundtrip light time? Encrypt it 

     (required lock duration)
    -------------------------
      (round trip duration)

times and do multiple transmissions.

Using the speed of light instead of proof of work may seem like cheating, but it gets the job done."	t5_2qq4h	True
1331404739.0	qqie6	Charm: A tool for rapid cryptographic prototyping	dgryski	20	1	1		t5_2qq4h	False
1331162324.0	qmg2l	FIPS 180-4 finalized - SHA512/224 and SHA512/256 are official standards	B-Con	25	6	1		t5_2qq4h	False
1314042268.0	jqwas	Serious Crypto Bug Found in PHP 5.3.7	TheloniusPhunk	26	6	1		t5_2qq4h	False
1304446015.0	h3bm6	I found a code in a necklace. Would anyone like to help decipher it?	necrophelia	26	6	15	"Hi /r/crypto,

(Someone suggested I cross-post this from [reddit.com](http://www.reddit.com/r/reddit.com/comments/h3aap/i_found_a_coded_message_in_a_necklace_anyone_good/), but apologies in advance if this is not the right place for this kind of thing - let me know!)

I've had [this thing](http://imgur.com/y4XBA) for about a year. The necklace (pendant?) had been pinned to the notice board in my old university halls - I assumed it was lost &amp; found, but it stayed there for weeks. One night a friend of mine stole it for me (as a gift, by his drunken logic) and I just sort of kept it.

A little while later I accidentally found a [folded up piece of paper with code on it](http://imgur.com/wDLom), inside the necklace.

I'm not much of a code breaker, but I'm pretty curious as to what it says. I mean, it's probably someone's exam cheat sheet or it just says THE GAME, but anyone want to take a shot anyway?

It got a little water-damaged somewhere along the way, so I tried to re-draw it with a bit more clarity: [http://imgur.com/34hHR](http://imgur.com/34hHR)

**EDIT** Apparently they're [Indian numerals](http://www.reddit.com/r/reddit.com/comments/h3aap/i_found_a_coded_message_in_a_necklace_anyone_good/c1s8qd0)?

**EDIT 2** For reference, here are the threads cross-posted in [reddit.com](http://www.reddit.com/r/reddit.com/comments/h3aap/i_found_a_coded_message_in_a_necklace_anyone_good/) and [/r/codes](http://www.reddit.com/r/codes/comments/h3df0/i_found_a_coded_message_in_a_necklace_can_anyone/)

**EDIT 3** [Apparently](http://www.reddit.com/r/crypto/comments/h3bm6/i_found_a_code_in_a_necklace_would_anyone_like_to/c1sccbn?context=3) it's a Taweez - an Islamic  talisman of sorts."	t5_2qq4h	True
1299986543.0	g2x0b	Merlin Mann (unintentionally) shows why everyone needs to learn how to use public-key cryptography: it’s just easier	bdesham	29	10	11		t5_2qq4h	False
1295385425.0	f4o45	Tarsnap critical security bug.		21	1	7		t5_2qq4h	False
1376394451.0	1k9tf0	All Bitcoin Wallets On Android “Vulnerable To Theft”	coolrealc	25	7	6		t5_2qq4h	False
1376167854.0	1k3vvx	Truecrypt: can hidden partition be proven by filling up the decoy completely?	CaptFlintstone	22	2	11	Say I have a 100 MB file with 2 partitions. One is 10 MB, the other 90. The 90 MB is a decoy, filled with porn. Can the existence of the other partition be proven simply because the 90 MB partition cannot be filled with anything larger than 90 MB, which is odd in a 100 MB file?	t5_2qq4h	True
1360094362.0	17y8iw	Silent Circle - Zimmerman's new project.	skijeeper	25	7	8		t5_2qq4h	False
1354800664.0	14drqs	Password cracking in record time with giant GPU cluster	r3b3lang3l	23	6	9		t5_2qq4h	False
1351980701.0	12l0yx	Crypto for pentesters ...	onlyjunk79	31	11	1		t5_2qq4h	False
1342215595.0	wir0r	Tropical Cryptography [PDF]	rolfr	23	2	3		t5_2qq4h	False
1336880637.0	tkjcu	Stanford university: Free crypto 101 class @ coursera.org	FluxMiller	28	7	4		t5_2qq4h	False
1336696786.0	thecq	Secure Communications over Insecure Channels - an amazing paper by Ralph Merkle (1974, before Diffie–Hellman)	heeb	22	3	0		t5_2qq4h	False
1331878534.0	qz21y	How do code breakers know if it is actually code or just noise?	edwinhere	23	3	13		t5_2qq4h	True
1330458203.0	qa35i	Cryptosystems Showing Signs of 'Wear and Tear' 	TheloniusPhunk	28	8	4		t5_2qq4h	False
1325852289.0	o5civ	Just released from the NSA: A New View of Pearl Harbor: The U.S. Navy and Communications Intelligence (1986)	electronics-engineer	27	6	1		t5_2qq4h	False
1312413359.0	j88ex	"""NSA 'Declassified' Publicly Available Text on Cryptology"	enferex	22	2	6		t5_2qq4h	False
1245330435.0	8tkxs	Researchers implement darknet with HTML 5, requiring just a browser to join. 	prickneck	21	3	0		t5_2qq4h	False
1242998358.0	8mg63	'Distinguisher and Related-Key Attack on the Full AES-256' (slides from Crypto 2009)	randombit	21	1	2		t5_2qq4h	False
1241079248.0	8goth	"SHA-1 collisions now 2^52 and ""within resources of a well-funded organization"""	_ak	22	1	5		t5_2qq4h	False
1375841117.0	1jusl3	Applied homomorphic crypto – secure meeting scheduling &amp; a (small) paper error	swthr	21	1	0		t5_2qq4h	False
1371888988.0	1guioo	Quasi-polynomial time algorithm for discrete logarithm. Are there any concerns for public key crypto? [x-post r/compsci]	DevFRus	19	3	7		t5_2qq4h	False
1358669440.0	16x786	Is Kim Dotcom's MEGA Just For Pirates, Or Do We All Need A Privacy Company?	whitefangs	37	18	21		t5_2qq4h	False
1356108724.0	158fcc	[1212.4969] Polynomial time factoring algorithm using Bayesian arithmetic (originally submitted by /u/MatthewMatic in /r/quantph)	Chiliarchos	23	6	18		t5_2qq4h	False
1353847735.0	13raqz	CryptX2: an Open Source Hardware Encrypted Storage Device	cryptx2	23	7	28		t5_2qq4h	False
1350625116.0	11qgfb	Al-Qaeda's Embrace of Encryption Technology: 2007-2011	turnersr	26	9	12		t5_2qq4h	False
1349433256.0	10zjdo	Password hashing for orgs with millions of users - HSM, defensive use of GPU/Xeon Phi/FPGA, issues with PBKDF2/bcrypt/scrypt	solardiz	21	4	21		t5_2qq4h	False
1349215530.0	10u9bb	NIST finalizes the SHA-3 competition: Keccak wins	B-Con	22	6	1		t5_2qq4h	False
1349051681.0	10qidd	What options should I use in Truecrypt for maximum security?	bingusdingus90	20	4	20	What algorithm should I use for encryption and which one should I use for the hash function?	t5_2qq4h	True
1345992761.0	yuqyi	John The Ripper vs oclHashcat-lite	TheBlackVista	25	6	20	I was wondering if there is a big advantage to one of them performance wise? I understand the Hashcat is able to take advantage of a big amount of GPU power whereas I think John is CPU only.	t5_2qq4h	True
1345031149.0	y99lt	BrainCookies, Johnny Mnemonic, and Other Uses for ‘Neuroscience Meets Cryptography’.	xor_rotate	21	3	0		t5_2qq4h	False
1338831908.0	ukiil	What cryptographic flaw was exploited by Flame to get its code signed by Microsoft?	cruise02	25	6	2		t5_2qq4h	False
1337351710.0	ttawz	Visualizing Galois Fields	palanoid	18	0	0		t5_2qq4h	False
1333929975.0	rzykj	With technology, are one-time pads finally viable?	Lhaze	23	5	39	"One-time pads, if used correctly, are perfectly secure. Before computers, they were impractical. Now, it's possible to store gigabytes of information  in something smaller than a dime. What's stopping people from just generating a couple of gigabytes of random data, giving a copy to whoever they need to talk to securely, and using that data as the key to a one-time pad?

It would not be hard to write a program that took the random data and used it as a key for a one-time pad (using zeros and ones instead of letters). The program could be made to wipe the random data once it had been used, which would ensure that even if a third party intercepted the encrypted message, they couldn't later find the key and use it.

Why hasn't this been done yet? I mean, presumably it has been done already by government agencies and such, but I'm unaware of a civilian program that does the same thing."	t5_2qq4h	True
1324006296.0	nepid	Decrypt TrueCrypt Headers	Ohsh1t	24	5	12		t5_2qq4h	False
1322406606.0	mqvs2	NSA Technical Journal Articles (Declassified)	scientologist2	22	5	5		t5_2qq4h	False
1311787141.0	j1bda	Military chip crypto cracked with power-analysis probe	TheloniusPhunk	20	2	2		t5_2qq4h	False
1306539092.0	hlw60	Is there an efficient algorithm for secret sharing a private key?	weavejester	23	5	13	"A group of individuals want to guarantee that a document will not be changed unless they all unanimously agree to alter it. The document can be signed with a private key, but none of the individuals trust each other enough for any one person to possess the entire private key.

The private key has to therefore be split up amongst the group such that no one person ever sees the full key. But in order to verify the signature, the corresponding public key must be known.

This could be achieved using RSA with a common modulus. Alice would sign the document, then Bob would sign Alice's signature, then Carol would sign Bob's signature and so forth. You could then construct a combined public key by multiplying everyone's public exponents together.

The problem with this approach is that the combined key is likely to be very large! Is there a more efficient solution to this problem?"	t5_2qq4h	True
1298470127.0	fr185	Everything you need to know about crypto	Moldavite	28	11	5		t5_2qq4h	False
1297897394.0	fmsp7	NIST's comprehensive report on the SHA3 second round and justification for the finalists.	B-Con	23	5	18		t5_2qq4h	False
1292530058.0	emzwd	Newly announced MD5 attack finds single block collisions with a single bit difference in the input	randombit	22	4	3		t5_2qq4h	False
1241071725.0	8go1t	Animation of the 128-bit AES encryption process	lmaurits	22	4	1		t5_2qq4h	False
1376492284.0	1kcnag	Secret exponent in Diffie Hellman	thaweatherman	21	4	8	I am new to the Diffie Hellman key exchange and was wondering if the secret exponent has to be prime? I know it has to be a large, random number, but does it have to be prime like p (the mod value) does? Thanks	t5_2qq4h	True
1373298163.0	1hvaq3	Cryptocat Key Generation Vulnerability Put Chats at Risk	InfectiousFelonius	33	15	6		t5_2qq4h	False
1371738462.0	1gq8ci	New lightweight ciphers from the NSA: SIMON and SPECK	dgryski	23	6	7		t5_2qq4h	False
1365891250.0	1cajgc	This guy says he solved Kryptos K4.		24	7	15		t5_2qq4h	False
1357147278.0	15u0to	An in-depth look at padding oracle attacks, for average netsec people	iagox86	23	6	11		t5_2qq4h	False
1353800153.0	13qgxx	Let's talk about ZRTP	ferdall	26	7	11		t5_2qq4h	False
1352488463.0	12xdhz	NIST's Third-Round Report of the SHA-3 Cryptographic Hash Algorithm Competition [PDF]	dchestnykh	19	2	7		t5_2qq4h	False
1348921464.0	10nxuf	What kind of encryption methods should I use when storing data for a long time?	antkal	24	6	28	I am going to make a time capsule which is to be opened in 2034. In the capsule I am going to include a USB stick with some files. For the possible case that the stick happens to get corrupted or something similar I am going to store a copy of the data off the capsule in an encrypted format and keep the password inside the capsule. At first I thought I should use TrueCrypt but it might not be available in 2034. What kind of encryption software/methods should I use to ensure that the data is still decryptable after 22 years?	t5_2qq4h	True
1347455458.0	zri8u	The link between primes. So r/crypto, I ask you, what are the ramifications of this discovery (if proven) to crypto? (Xpost from /r/science)	gordonta	25	6	9		t5_2qq4h	False
1347084491.0	zjo9u	"PGP. I'm new to it and don't quite ""get it""."	bobwonder	24	8	24	"So as far as I can tell, you create a key and save it as a GPG file (I'm using Kleopatra to creat the key). You assign this a password. You can then upload the key (an auto-generated .asc file) to a directory server.  So my question.  When you send someone a PGP encrypted e-mail (i'm using thunderbird with enigmail), what do they need to get from me in order to decrypt it? do i send them the GPG file with the password, or do I send them to the link with the .asc file?  The documentation often just assumes I ""KNOW EVERYTHING"" before starting.  Also, it's late and I'm feeling less than smart right now; be gentle."	t5_2qq4h	True
1346602277.0	z8fln	scrypt at low memory settings (&lt;= 1 MiB) vs. bcrypt, and scrypt's use in Litecoin (failed anti-GPU)	solardiz	24	7	0		t5_2qq4h	False
1346211756.0	z02tk	Question: How do I know a message has been decoded?	teawreckshero	21	5	10	"I'm a CS undergrad, but I'm new to crypto. Lately, thanks to this subreddit, I have been spending more time on hacker.org learning new tricks. But as I progress I am faced with a recurring dilemma: In short, how do I know I've successfully arrived at the answer from a programmatic standpoint? As I'm cycling through possible keys via brute-force, how can the computer decide that the string it just pulled out is the one I'm looking for?

This would not be an issue with a single byte key as I can quickly scan the results and find the one that is written in english (""the answer is..."").

Initially it seems that if I don't know the format of the original message, I'm SOL. The best I can do is try some form of dictionary search on each potential decryption to see if there are any recognizable words. But if it's yet another string of seemingly random encoded bytes that I'm searching for, how would I now? And even if I knew to decrypt a second layer down, the initial problem exists.

I apologize if this is a really fundamental or deeply explored subject to which I'm just not seeing the answer to. I don't know what it's called and haven't had any luck trying to google it."	t5_2qq4h	True
1345375199.0	ygwbn	"Partial RE of unpublished ""secure"" iMessage protocol"	grecs	22	3	3		t5_2qq4h	False
1343694773.0	xf6pa	OpenSSH offers your public keys to all servers you connect to, causing you to be potentially uniquely identified.		33	18	24		t5_2qq4h	False
1337747909.0	u0jj9	Teaching Cryptography in C++ Course?		20	2	12	"Hey cryptos,
I'm teaching a C++ course this year, and I always get a really advanced student who has already done all of the course work. So in five days, working for maybe six hours a day, what could I teach a really advanced high schooler about cryptography in C++?

I think using Bitcoin as a hook would be useful since that relies on strong encryption and I could say there is money in this field.. sort of.

EDIT: Thanks for all the great ideas! I will be forced to teach all of this in Microsoft Visual Studio 2010 Express... and I tried the Crypto++ but it just doesn't seem to work without a lot of leg work.

Perhaps, I could work alongside the [Art of the Problem - Cryptography series.](http://youtu.be/lICOtR078Gw)"	t5_2qq4h	True
1336947197.0	tlivz	Newbie looking for helping getting into Cryptography.	Mathman123	21	4	15	So, I'm really interested in the topic and I'm a third year Math Major now at University. I think i'm pretty good at math, but have always wanted to breach into the subject of cryptography. Any beginner books or sites I should use?	t5_2qq4h	True
1335527499.0	sv5l4	Circular security (IND-CPA and scheme encrypting its own key)	hanomalous	22	4	3		t5_2qq4h	False
1335480880.0	suc9y	Researchers claim quantum breakthrough	GeorgeousGeorge	24	7	6		t5_2qq4h	False
1328083643.0	p5wa5	Why stream ciphers shouldn’t be used for hashing	mrpuppet	20	2	0		t5_2qq4h	False
1327152944.0	oq6p1	Lightweight Cryptographic Algorithms [pdf]	dgryski	18	2	2		t5_2qq4h	False
1319543641.0	loaq3	Fun cryptology for kids	chauchat	22	4	7	"I've purchased this blank notebook that's around five or six decades old - it looks pretty old and faded. I'm thinking of creating a spectacular ""old, mysterious"" book for my son, for him to 'find' and hopefully, if he gets fascinated enough, to decode by himself. I'd like to exchange some ideas om what codes to use, and how to ease the boy into the concept of cryptology. 

By the way: he's one years old now. This is a *very* long term project. :)"	t5_2qq4h	True
1314881666.0	k192l	Privacy and Anonymity on the Modern Internet  (Crypto Project Pt. 2)	TheloniusPhunk	18	1	0		t5_2qq4h	False
1312697848.0	jbdu7	I've been working on an easy-to-use javascript strong public-key cryptography library. Would you r/crypto pros be willing to vet my methods? Point out my glaring errors?	wwwtyro	21	3	10	"The concise technical details can be found at the bottom of the documentation [here](http://wwwtyro.github.com/jsCrypto/) along with a live demo.

In a nutshell, I've glued together some existing libraries to create an easy-to-use strong cryptography system that relies on RSA and AES, and I'd like you guys to take a look at it and tell me what I am doing wrong. There's bound to be something awful in there. I'm not asking you to look at code (although I'd love it if you did!); I've written up a short but detailed technical description of what I do in the docs for you guys to look at. Thanks for any advice you can give me!

Note: if you try the demo, be forewarned that I have only tested this in google chrome. Also, you will probably want to stick to the 1024-bit keys, unless you don't mind waiting.

Edit: Just tested in Firefox 5, and it runs, albeit marginally slower than in chrome."	t5_2qq4h	True
1311043279.0	itfj0	"Queen of England launches ""Code Book Challenge"""	fracai	17	0	4		t5_2qq4h	False
1309859161.0	ih1z3	LinkDump: Best crypto resources ( blogs, mailing lists, discussion boards )	oiccool	23	7	9	"I'll get it started with some obvious ones:

blog:
http://www.schneier.com/

podcast:
http://twit.tv/sn"	t5_2qq4h	True
1308023832.0	hz42l	Cryptocurrency is here to stay. The case for an alternative taxing system	eyeballsaresquishy	21	3	4		t5_2qq4h	False
1306418108.0	hknak	ElcomSoft cracks iOS encryption system	vanquish46	20	1	2		t5_2qq4h	False
1301261873.0	gcoij	Wikimedia let their SSL certificate expire	OlderThanGif	25	8	5		t5_2qq4h	False
1298919704.0	fuh62	"""[the files] were created in Pretty Good Privacy ... He sent the files to British intelligence services, which returned them decrypted"""	lookouttacks	26	7	19		t5_2qq4h	False
1298643326.0	fsjmu	"Alan Turing's papers stay in UK (Bletchley Park) with £200,000 donation [Thanks to: Google, NHMF &amp; ""The Public""]"	wtfomglolz	20	2	0		t5_2qq4h	False
1297977453.0	fngdk	"""... store the public key on the local disk and transmit the private key to our datacenter via https"", wait what?"	brinchj	17	2	12		t5_2qq4h	False
1245924959.0	8vij4	10 tips for cryptographic best practice, particularly good for developers! Suggestions on ciphers, key-length and password management.	johnlunney	20	3	0		t5_2qq4h	False
1376097017.0	1k2b03	I would prefer to stand on the shoulder of giants. I am looking for an existing library/protocol for p2p encrypted conversation over the net. If I do it myself I think I will fail.	NoeticIntelligence	24	6	37	"I am writing a side project for exchanging information over the net, and I would like to implement it in a manner that probably provides some privacy. 

Lately there seems to be a new app or library announced every other day. 

I am looking for a library/foundation to build upon that has withstood at the test of time and eyes. 

I have found WASTE, but I had trouble determining the current status.
I found something like secureP2P which sounded perfect but I could not
find a reference to how complete it is.

So I am looking to learn/leverage existing libraries/implementation/algorithms
The application will not be communicating via Http.
"	t5_2qq4h	True
1374266216.0	1inlg2	NIST Approves FIPS 186-4: Digital Signature Standard, July 2013 (x-post from /r/netsec)	r3bl	20	4	0		t5_2qq4h	False
1372031233.0	1gxpfi	"Hardening an ""Open Hardware"" crypto token, and including a duress PIN?"	kaihatsusha	19	3	15	"I used to use PGP around the time GPG and OpenPGP were becoming prominent, but not for years after, for all the reasons people have been discussing lately about the chicken/egg problem.

I'd like to implement a crypto token, possibly as a usb hid device similar to a keylogger in form factor.  Connect any keyboard and it passes through.  Type the token's passphrase and it types the rest of a longer passphrase for you.  With on-token keygen, you wouldn't even necessarily know the whole passphrase for your computer's gpg key.  It could also support challenges and status-check phrases, with LEDs or other readout.

However, it's the duress/revocation I am concerned with.  How can you use off-the-shelf open hardware components, and still harden them against runtime inspection or extraction, such as shaving and cryogenic attacks?"	t5_2qq4h	True
1368333327.0	1e62ow	Completely Anonymous Multi-Recipient Signcryption Scheme with Public Verification	scientologist2	24	7	2		t5_2qq4h	False
1366137767.0	1ch77u	What's some good crypto mailing list?	hyh123	25	10	6	"By good I mean active, without spam, and has some insightful discussion.

I tried the mailing list where bitcoin was announced, but I haven't god any message, is this normal? (Or has they moved?)"	t5_2qq4h	True
1365925429.0	1cbeol	What in graphical form is the equation being solved when mining for bitcoins? Could you plot the solution set and see possible key solutions from the equation?	georedd	24	7	23	What in graphical form is the equation being solved when mining for bitcoins? Could you  plot the solution set and see possible key solutions from the equation?	t5_2qq4h	True
1363392823.0	1ads6b	Trucrypt GPU bruteforcer	Scorepser	30	13	18	"Hey. I forgot my truecrypt passwod, I know I know I should have wrote it down, but I know what characters it consist of and its length. I have done a lot of googling to find a bruteforcer for it and can't seen to find one. I'm running Windows and found one that is amazing except it can only do it off the cpu. The password is kind of a hard one so I wanted to speed it up, so does anyone know of a GPU based bruteforcer for truecrypt.
TL;DR Looking for a GPU based bruteforcer for Truecrypt."	t5_2qq4h	True
1362763112.0	19x5sz	Jitsi 2.0 is out with support for VP8, Opus and video conferencing	whitefangs	21	6	2		t5_2qq4h	False
1361695869.0	194jyr	Cryptography is a systems problem (video)	ferdall	22	7	0		t5_2qq4h	False
1357930487.0	16e4wi	Real-world Cryptography Workshop - Adam Langley, Eric Rescorla and others	udiw	23	7	5		t5_2qq4h	False
1356724472.0	15l5m0	 FactHacks: RSA factorization in the real world	xenol	19	5	8		t5_2qq4h	False
1353612515.0	13ms4e	New developments in password hashing: ROM-port-hard functions (building upon the ideas of scrypt and security through obesity)	solardiz	20	6	0		t5_2qq4h	False
1353299386.0	13fnq0	Simple explanation of Diffie-Hellman key exchange	XaeTae	27	9	6		t5_2qq4h	False
1350771306.0	11teu2	Anyone willing to help solve the mystery over at /r/A858DE45F56D9BC9?	Deinos_Mousike	27	9	5	"There's a subreddit called /r/A858DE45F56D9BC9 where /u/A858DE45F56D9BC9 has been posting things like [this.](http://www.reddit.com/r/A858DE45F56D9BC9/comments/11sc2q/201210201400/)

If you're interested in helping us, PM me and I can point you it in the right direction."	t5_2qq4h	True
1348583925.0	10g8z1	An in-depth look at hash length extension attacks, including a new tool to exploit them	iagox86	20	5	2		t5_2qq4h	False
1348533062.0	10f7ui	New cryptographic hash function not needed, Schneier says	EquanimousMind	20	5	6		t5_2qq4h	False
1345406477.0	yhhos	Contracts using Bitcoin	greenrd	21	3	0		t5_2qq4h	False
1342797763.0	wvksn	Apple transmits store credentials in clear text?! Dafuq?!	paulrohde	39	22	19		t5_2qq4h	False
1338900164.0	ulzgt	Flame Attackers Used Collision Attack to Forge Microsoft Certificate	TheloniusPhunk	24	9	10		t5_2qq4h	False
1338701308.0	ui948	"Microsoft's security team comments on SHA-3 selection criteria: ""SHA-3 has to provide benefits that outweigh the cost of adoption"". [PDF]"	B-Con	22	6	10		t5_2qq4h	False
1338607476.0	ugopd	Linux PGP		18	2	9	Does anyone have a good link to a tutorial for using gnupg to encrypt a disk? I'm running fedora 17, trying to figure this out. 	t5_2qq4h	True
1335210647.0	sonnu	New research: There’s no need to panic over factorable keys – just mind your Ps and Qs	B-Con	19	2	2		t5_2qq4h	False
1333291486.0	rnyl4	Why is there a stegosaurus as the /r/crypto icon?	Smuglord	18	2	20	Is there some sort of reference I'm missing here?	t5_2qq4h	True
1328720448.0	pgfkc	Researchers Crack Satellite Phone Ciphers	TheloniusPhunk	18	1	0		t5_2qq4h	False
1327377433.0	otyof	I have a question about an attack on (Truecrypt's) Plausible Deniability.	Squid_Tamer	20	3	5	"I've done a lot of searching, but I can't find the answer to this. I know that my 'attack' won't work, but I want to know why. 

Let's say that you have been supplied with a Truecrypt volume and a password. You would like to know if the volume contains a hidden volume. Everything I've read tells me that you're out of luck here, there is no way to tell. 

But let's say that you use the password to open up the volume, and you copy all of the contents out. Now, using the same key, the same volume size, and the same Initialization Vector (Those aren't encrypted in any way, right? I think this is where my plan goes wrong.), use those to encrypt the same plaintext that you got out of the truecrypt volume.

If your new volume, and the 'old' volume, are the same, there is no hidden volume. If they are different, there is a hidden volume.

I realize that this won't work. People much smarter than me have tried to break plausible deniability crypto. 

So why doesn't this work? I assume that the answer has something to do with the large pool of entropy that you need before Truecrypt will create a volume. Thanks!

"	t5_2qq4h	True
1322769816.0	mwief	Academic cryptographers versus commercial cryptographers	B-Con	19	2	4		t5_2qq4h	False
1317323496.0	kvl3z	Slides on the impact of the new NaCl crypto library (from DJB and others) [PDF]	gthank	21	5	6		t5_2qq4h	False
1309763617.0	ig87q	Len Sassaman has passed away (wife's twitter)	frozencemetery	23	6	0		t5_2qq4h	False
1309492582.0	idwi8	17% smaller DES S-box circuits found; 20M+ crypt(3)/second or 33 Gbps on quad-core CPU (less than 1 cycle per byte)	solardiz	22	5	6		t5_2qq4h	False
1308270254.0	i1p4e	Mental Poker + Bitcoin protocol = p2p poker win?	asherp	22	6	10	So us enthusiasts over at r/bitcoin and r/poker would like your expert opinion: would it be possible to combine bitcoin's [contracts](https://en.bitcoin.it/wiki/Contracts) feature with an [implementation](http://www.nongnu.org/libtmcg/) of a [mental poker](http://en.wikipedia.org/wiki/Mental_poker) solution to create a perfectly secure p2p-poker network that requires no trust? Preferably, we would like the protocol to partially sign a bitcoin contract to place a bet, where funds are released to the winner automatically. Am I missing something, or does it just need to be built by someone who actually has talent (i.e. not me)?	t5_2qq4h	True
1307284732.0	hs4mu	Delaying release of information with cryptography	just_doug	21	4	14	"Mark Twain wanted his autobiography published 100 years after his death. As a thought experiment, I was trying to think of how one could go about creating a document which would only be readable after some amount of time elapsed. Would be interested to see what /r/crypto thought about this, a quick google didn't turn anything up on this topic for me. Disclaimer: not a cryptographer, but I have a reasonable understanding of cryptographic principles.

The only method that I was able to come up with would be to encrypt it and store it on some black-box device that, when given a key, would attempt to decrypt the file and output the plaintext if it was successfully decrypted. Varying the length of the key would give you rough control over the time that it was ""locked,"" (at least probabilistically). 

I think that as long as the ""black box"" won't give up the ciphertext (i.e. so that the computational power available stays constant as time passes) this would work.

Any thoughts?"	t5_2qq4h	True
1306492214.0	hleyj	Code-cracking machine returned to life	cavedave	16	0	1		t5_2qq4h	False
1292815223.0	eokos	TIL: Johannes Trithemius’ Steganographia, originator of the term “steganography”, hides its text about steganography within a covertext about magic	BrowsOfSteel	17	1	0		t5_2qq4h	False
1289564115.0	e53ci	Enigma machine for sale	cavedave	20	4	4		t5_2qq4h	False
1253717727.0	9nbxt	A stick figure guide to AES	B-Con	19	3	1		t5_2qq4h	False
1375463145.0	1jkold	How much can built in smart phone encryption be trusted?	MahoneyRed	17	3	22	"With reports of the NSA making backdoor deals with Microsoft there is sure to be a similar thing happening with mobile devices.

How much can people trust the encryption on mobile devices that comes from the manufacturer? What options are out there for people to encrypt photos, videos, texts, and potentially voice from outside sources?"	t5_2qq4h	True
1374612178.0	1iwqgl	PiCL (eg, Firefox Sync) Crypto Review	B-Con	21	4	0		t5_2qq4h	False
1374611215.0	1iwp4u	FileVault	Res_hits	20	6	16	I'm sort of assuming that FileVault is mostly the appearance of encryption, or just privacy from low-level hacking.  Considering it's designed by apple, and the option is given for you to store your key with them.  I'm wondering about TrueCrypt but have recently read that that's also not the greatest.  Anyone have any recommendations?	t5_2qq4h	True
1371335133.0	1gf7ti	[discussion] A solution with perfect forward secrecy for e-mail?	j3m	20	5	3	"I am no cryptographer, but I am trying to imagine something better than PGP/GPG for email, specifically including perfect forward secrecy. Please post your thoughts on the following, or suggest a better solution.

Would this be a workable system for one-time-use PGP/GPG keys? Benefits include the ability to destroy the message decryption key when you delete the message. The result being that if the master key were compromised it would not compromise any past messages that may have been previously captured on the network.

---

How it works:

Each party has one master key-pair. It is assumed they already have each others master public keys.

All parties generate several one-time-use, temporary key-pairs. Each party signs their temporary public keys with their master private key, then uploads the signed temporary public keys to a modified public key-server.

The sender goes to the key-server and requests a temporary public key for the user they want to encrypt a message to (the key-server then removes that key from its list). Each outgoing message gets signed with a temporary private key (with a short expiry time) generated by the sender. The corresponding sender temporary public key is then signed by the sender's master private key and sent with the message so the signature can be verified. Then, after verifying that the recipient's temporary public key was signed by the recipient's master private key, the message is then encrypted with that temporary public key.

Upon receiving the message the recipient checks that the sender's temporary public key included in the message has been signed by the sender's master private key. Then uses their temporary private key to decrypt the message. Finally they verify the signature using the sender's temporary public key. When they delete the message, they also securely erase the corresponding temporary private key for that message.

---

I'm pretty sure I read about something similar to this at one point. Does it already exist? Is there a better solution? Could OTR (using a Diffie-Helman key exchange) be used in a similar way, with the recipient pre-generating half the components necessary to generate a shared key and putting a list of them on a key-server, the sender including the other half with the message so that it was practical for email, also signing the components for verification purposes? Could this route still be used for multi-party communication (encrypting a message to many recipients)? Would Diffie-Hellman have to be replaced by an authenticated multi-party key agreement protocol (it seems there are several papers on that subject)?

I just think it's time we improve upon the PGP/GPG protocol and somehow include perfect forward secrecy."	t5_2qq4h	True
1369990231.0	1fe7hu	Microsoft and SSE2 Intrinsics, or: How to Drive a Cryptographer Mad	perror	22	8	7		t5_2qq4h	False
1368218148.0	1e39ma	[XPost]Fully Homomorphic Encryption is not usable yet -- Exactly how non-usable is it? : AskScienceDiscussion	aNonSapient	23	9	1		t5_2qq4h	False
1367775819.0	1dqo0e	Does full-disk encryption protect against root kits?	etbrute	20	7	14	Does encrypting the OS of a device prevent a rootkit from being installed while the computer is off? Can the decryption software in the initial boot ramdisk be corrupted for malicious intent? 	t5_2qq4h	True
1367512527.0	1dk53t	True Random Number Generation with Bit Flipping	Xtrato	23	6	12	"I have had a small idea which i'm not sure would work.

About 2 months ago i made a random number generator using a Geiger counter and a raspberry pi. I posted the result to Reddit and someone asked if i was worried about my radiation source (A uranium died marble) corrupting the memory on the SD card. I had never heard of this before so i googled and found that in fact radiation can when traveling through memory can flip the bits.

My idea is to monitor the bits on the SD card and record when the flipping took place and what bits had changed.

Firstly. Is it possible to read memory like this at the bit level using a higher level language like python? and will the bit flipping be consistent enough to create random numbers? i.e is the flipping of bits something that will happen on off occasion or quite frequently?

Sorry if this is in the wrong subreddit. I couldn't think of a better place to post it.

Thank you in advance for your help."	t5_2qq4h	True
1360282357.0	183k4j	Encrypting Tweets for Your Fun and Not Their Profit – Part II	whitefangs	25	8	0		t5_2qq4h	False
1360163050.0	1801qn	Researchers devise new attack techniques against SSL	InfectiousFelonius	19	3	0		t5_2qq4h	False
1358618712.0	16vuvu	Cryptanalysis for close RSA secret key pair -- crossposted from r/math	bebetrizaldi	22	6	8		t5_2qq4h	False
1358271003.0	16mlez	A new competition, CAESAR, is now calling for submissions of authenticated ciphers.	dchestnykh	18	2	5		t5_2qq4h	False
1355955464.0	154s1d	Please Take This and Go Signing Those Updates	FiloSottile	21	7	4		t5_2qq4h	False
1349987912.0	11bu1v	Raising awareness of cryptography-based electronic election systems	habeanf	19	2	7	"In light of recent posts on the reddit home page I think it would be a good time to raise awareness regarding the existence of cryptography based software for verifiable and privacy preserving election systems.

I think awareness is an important issue since it seems that most people don't know that this technology has been researched for years in the academia resulting in fully developed end-to-end working systems. For example, [in this testimony video on youtube](http://youtu.be/t4aKOhbbK9E?t=1m30s) the programmer testifies that it is not possible to design a protocol so that the votes can be verified without looking at the source code. This is incorrect, since a number of researchers have independently designed and implemented systems which do have a protocol that allows for verification of cast ballots while protecting the privacy of the voters. [My comment](http://www.reddit.com/r/politics/comments/119j5s/corruption_baincontrolled_company_owns_2012/c6kxhih) on [a recent front-page post regarding Bain-controlled companies for voting machines](http://www.reddit.com/r/politics/comments/119j5s/corruption_baincontrolled_company_owns_2012/) went unnoticed.

I think it's unfortunate that people are unaware of technology that exists that can be relevant to such an important issue.

Crypto-redditors, what can we do to raise awareness of this technology? 

Edit: grammar"	t5_2qq4h	True
1347116403.0	zk25w	Deterministic PGP Key Generation	Julian702	19	3	23	"Effectively, I want ""brain keys"" - PGP keys stored in my head, recoverable without having to backup a file, simply restored by hashing a passphrase into the RNG to output the same key pair each time.

This would be very useful for live systems or never allowing keys to touch a disk (create to /dev/shm, do your encryption, wipe).

Any way to do this? Thoughts?"	t5_2qq4h	True
1344727575.0	y2hs5	Interesting post on why 256 bit modulus blizzard uses in SRP is insufficient	fuckingbagre	18	2	3		t5_2qq4h	False
1340203850.0	vbw9i	SipHash is a family of pseudorandom functions optimized for short inputs (by Aumasson and Bernstein)	dchestnykh	17	2	0		t5_2qq4h	False
1339971862.0	v71q7	encrypting *sent* email	purpleidea	20	5	24	"dear r/crypto. first time post.

i'd like to use pgp (or crypto) for storing *all* email, including my sent email that gets pushed to the server (with imap). i can't seem to find a way to do this.
clearly, controlling the email server itself with an encrypted partition would be ideal, but this isn't always possible.


has anyone done this please? i can't believe i'm the first to want to do this.


i'm currently using linux+evolution (because it integrates with gpg very nicely)

thanks in advance.

EDIT: part one complete: use this for an initial migration: http://www.reddit.com/r/crypto/comments/v71q7/encrypting_sent_email/c51xof3

part two (encrypt email on the fly during the use of your mua is still outstanding. mutt or evolution hacks anyone?)

EDIT: seeing as this is getting some traffic, it seems to me a lot of people would like to see this happen. Maybe we can get some evolution/mutt bigwigs to have a look? Anyone feel like pinging the right people on irc? Come on internets!"	t5_2qq4h	True
1338817840.0	uk6f6	What PGP keyserver should I be using?	skeeto	22	7	5	"I learned sometime recently that pgp.mit.edu doesn't sync properly and is discouraged. Is this still true? I've only ever submitted keys to there (awhile ago) and they seem to have propagated since then.

I went looking for a new keyserver but lots of places point to pgp.mit.edu, which suggests I can't rely on their information. I did manage to find this list,

http://www.rossde.com/PGP/pgp_keyserv.html#pubserv

The most attractive-looking one to me is keyserver.ubuntu.com (esperanza). I also found subkeys.pgp.net in my searching, which isn't listed here as good or bad.

What keyserver do you use?
"	t5_2qq4h	True
1334610001.0	sd02z	How does one solve a cipher that has been transposed *and* substituted?	skintigh	21	4	9	"Solving a transposition cipher is pretty easy, if it's short just brute force it or look for patterns that make sense. Solving a mono-alphabetic substitution cipher is also pretty straight-forward. There are online tools to do the latter, writing tools to do the former is pretty easy. Even very short ciphers of either type are quickly solved.

But how does one solve a cipher that has had both stages done to it? If the cipher is very long you can mostly solve the substitution based on frequency and mostly solve the transposition base on structure, and I have solved such ciphers, but what if the cipher is not very long?"	t5_2qq4h	True
1333642663.0	rusox	Inexpensive or DIY RNG's	MidwestJackalope	19	3	15	"Does anyone know of any cryptographically-sound methods of collecting true random numbers using &lt;$100 equipment?

Random.org I know uses a series of antennas that measure atmospheric noise, but I would imagine a single antenna installation would have too much local regular signals bleeding over that would make it less valid. If I'm wrong about this, some of the work over at the SDR using DTV tuners may be a good route.

The only commercial product I could find was the Entropy Key (http://www.entropykey.co.uk) but I know nothing about its reputation. It runs about 36 GBP/57 USD. 

Note: you may assume physical security and ignore side attacks, such as temperature manipulation."	t5_2qq4h	True
1332044662.0	r1oag	Question about brute-force attacks	crypto_n00b5456	18	2	40	"Hi crypto!

I've been thinking about this for quite a long time and still haven't been able to find an answer.

How does the brute force attack actually work?
I know that it works by trying all of the possible keys on some ciphertext...BUT

**I don't understand how is it possible to tell the result of the correct decryption from the result of an incorrect decryption.**

If I encrypt a random string of plaintext, 
and someone launches a brute-force attack against that ciphertext,
how would the computer which performs the brute-force attack know it has 
found the correct key/plaintext?

Why symmetric key algorithms aren't secure as one-time pads if used that way?"	t5_2qq4h	True
1326167175.0	oabuq	Six Security Vulnerabilities Addressed in OpenSSL	antibubbles	15	0	1		t5_2qq4h	False
1324498528.0	nln7n	Can someone explain PGP to me?	trentroolz	23	8	7	"A link to a program that encrypts/decrypts with PGP would also be nice.
I don't understand how it works, and all the online explanations are too complicated for me. Help please?"	t5_2qq4h	True
1307112405.0	hqt89	The Cryptography of Bitcoin	ezyang	19	4	0		t5_2qq4h	False
1291605991.0	egu0j	"Does the release of wikileaks plaintext make it an easier to crack the AES256 ""insurance"" file?"	ZamboniPalin	19	3	6		t5_2qq4h	True
1287670172.0	dudoc	Eight Epic Failures of Regulating Cryptography | Electronic Frontier Foundation	Brovvnout	17	2	0		t5_2qq4h	False
1260828043.0	aenoq	"""Fully Homomorphic Encryption over the Integers"" - homomorphic encryption using only simple modular arithmetic"	randombit	15	2	1		t5_2qq4h	False
1241103078.0	8grsa	The SHA-3 Zoo - details on all candidates for the SHA-3 hash standard contest	lmaurits	15	0	0		t5_2qq4h	False
1373385752.0	1hxwdl	Imperfect Forward Secrecy: The Coming Cryptocalypse	bascule	19	5	15		t5_2qq4h	False
1360407297.0	186s1s	Free, open, secure and convenient communications. Can we finally replace Skype, Viber, Twitter and Facebook?	whitefangs	21	6	3		t5_2qq4h	False
1359195684.0	17b6li	Anonymous Serverless P2P file sharing in the browser 	whitefangs	21	6	6		t5_2qq4h	False
1357844784.0	16bu9o	Breakdown of a PGP message?	7trXMk6Z	18	3	6	Somewhere a few months ago, I remember I link to a site that broke down a pgp message and showed what each various parts were-- like that the key was at the start and the main message was in the middle and the signature at the end of it and such.  I've been googling and search various subreddits and cannot for the life of me find it.  Does anybody remember where this is?  Thank you!	t5_2qq4h	True
1357506722.0	162ufx	Research Project: OpenCL Bitslice DES Brute-Force Cracker	mysterymath	28	13	18	"Hello, r/crypto. This is actually my first Reddit post, so that's cool. Last semester, I needed an undergraduate research project for my studies at Purdue. So, I wrote a GPU accelerated DES brute-force cracker using OpenCL. I briefly looked around, and didn't find any similar projects, so I'm posting it here to r/crypto for people to play with. It's GPL licensed, and, as seen in the screenshot below, I was able to get about 1400 MKeys/s on a Radeon HD 7850. I did borrow the S-box implementations from John the Ripper (modified BSD license), but everything else is original. Expected break on one GPU in about a year (brute-force), putting breaking DES firmly in the abilities of a smallish group of devoted gamers (or a less devoted but distributed internet project).

So, let me know what you think in the comments.

Project link (binaries in Debug):
https://www.dropbox.com/s/hnqxmdd1yks6xnd/Research.zip

Screenshot:
http://imgur.com/BCRj0"	t5_2qq4h	True
1354539645.0	14755l	RSA ASCII-Armored Key Breakdown	goonmaster	21	8	9		t5_2qq4h	False
1347627286.0	zvh68	Online Cryptoparty [?] - Online demonstation of cryptographic techniques and how to make sure your private conversations stay private. Wednesday 26th September 8pm BST	EquanimousMind	18	4	2		t5_2qq4h	False
1345236014.0	ye95j	Haven't we seen this problem before?	sublimepua	20	5	23	"The problem with internet security nowadays with regard to the accounts of individuals appears to me to be fundamentally similar to the problems which inspired public-key cryptography. The users must have different keys for each site (similar to session keys in radio broadcast) and the site needs to keep their database secure. We use one-way hash functions for that, but hashes aren't always one-way. Also, expecting individuals to remember a few dozen unique passwords seems unreasonable. Yes, services like lastpass exist, but what if users COULD have a single password? 

Why not ask users to register a public key when they make an account, and then at each login present them with a short random string and ask them to sign it with their private key? While most people are unfamiliar with the pki, it strikes me as quite easy to implement at the browser level, since browsers must already have ssl libraries to be able to handle https. Also, this would make a password database not a desirable target for hackers. What good is amassing a collection of public keys?

Thoughts? Is this a bad idea for reasons that I cannot see?"	t5_2qq4h	True
1345230896.0	ye3np	Analysis of FileVault 2 (Apple’s full disk encryption)	B-Con	22	8	0		t5_2qq4h	False
1344576161.0	xze7a	Help Identifying Crypto Algorithm	arrseefour	18	5	24	"Hopefully someone has a little insight into this, I've been scratching my head over it all night.

I'm looking at a system that is taking input (x) and returning a base64 encoded string that appears to be encrypted. The system is part of a web application I'm testing. You submit (x) in a form, it returns a cookie consisting of some base64 encrypted 'stuff'. Unfortunately I can't provide any of the encrypted strings for analysis because I don't know what they contain (could have the site URL or something else that would make the client unhappy :) ).

I believe it is a block cipher, I found a boundary where a new block appears in the ciphertext and every 24 characters of plaintext entered after this produces a new block of ciphertext. So it seems to be a block cipher using 24 byte blocks. With 1-4 characters of input, you get back 192 bytes (256 base64 chars), 5-23 gives 216 bytes (288 base64 chars), 29 gives 240 bytes (320 base64 chars) etc...

I do not believe it is ECB. Entering long strings of the same character produces no repeated blocks.

CBC doesn't seem to make sense either. It seems as if a single character change anywhere in the plaintext affects ALL of the ciphertext.

I know the timestamp is being incorporated into the plain text somehow. The system will output the same ciphertext for the same plaintext input multiple times, as long as the requests are submitted within the same SECOND.
eg:suppose I submit these requests at 10:51:38, these are the types of responses I would get:

aaa -&gt; 84eTVV+Re3xeRenrj14qK/gtT1

aab -&gt; fv6qOviVNMmi4Jh70bNymFsP3

aaa -&gt; 84eTVV+Re3xeRenrj14qK/gtT1

Anyone have any ideas? What I'm most hung up on is the fact that a single byte change in the plain text is causing ALL bytes in the ciphertext to change AND at the same time you can get the same ciphertext for the same plaintext suggesting there is no random nonce or anything like that going on.

EDIT: Added more explanation on how the blocks seems to be working and an example of the multiple plaintext submission giving the same ciphertext.

EDIT: Added Context"	t5_2qq4h	True
1339891868.0	v5q0y	Does anyone know more about this scheme?	B-Con	17	1	8		t5_2qq4h	False
1339378518.0	uvfjd	Are you a crypto expert in NYC area? I will buy you lunch in exchange for some wisdom/mentoring.	rational_	27	11	10	"I looked into some of the academic crypto groups in the area, but they seem to be inactive for the summer. 

I'm a web application developer looking for advice on a project. PM if you're interested. Thanks!"	t5_2qq4h	True
1338601417.0	ugkfd	"A  Genetic  Algorithm  for  Ciphertext-Only  Attack 
in  Cryptanalysis "	nomadpenguin	14	0	6	"http://csis.bits-pilani.ac.in/faculty/murali/netsec-09/seminar/refs/girishp1.pdf

I recently found this while looking at genetic algorithms.  Any opinions?  I am still puzzled as to why this would work.  
"	t5_2qq4h	True
1336993831.0	tmb0v	A tale of two patches (DTLS bugs in OpenSSL)	hanomalous	16	1	4		t5_2qq4h	False
1332218025.0	r4nak	NTRUEncrypt in C	pgupta1984	15	0	0		t5_2qq4h	False
1325977729.0	o78qu	How can I prove I bought 10 unique coffees with disclosing the minimum amount of info?	pandoras_sphere	16	0	15	"I carry too damn many loyalty punch cards. If a vender wanted to; how can we use a smart phone to achieve the same thing?

Edit (2012.01.08 20:52-08):

I'd like to define this problem more.


Please assume that the coffee buyer, Charley, does not want to disclose when he purchased his coffees.  Also assume that coffee buyer Charley does not trust Barista Bambie to not keep very detailed logs.  

Barista Bambie does not trust Coffee Buyer Charley not to double spend coffee points.

Don't worry about Coffee Buyer Charley pooling his coffee codes with friends.

I guess I'm wondering if a zero knowledge proof/protocol for coffee punches is possible. "	t5_2qq4h	True
1323658342.0	n965j	Why don't browsers Salt and Hash passwords?	pandoras_sphere	16	4	15	Is there any reason not to salt and hash passwords in the browser?  Would this prevent passwords from being leaked from hacked websites?	t5_2qq4h	True
1319816817.0	lsacv	Side channel attacks: Acoustic cryptanalysis POC (Adi Shamir)	B-Con	15	2	0		t5_2qq4h	False
1312464358.0	j8rvq	One-Time Pad Encryption Dates Back to Telegraph Codebook	gthank	15	1	0		t5_2qq4h	False
1308695040.0	i5nk7	What information does a PGP key store?	tactics	19	4	13	"I'm trying to learn about some of the technical details behind cryptography. I am trying to find the sweet spot between the mathematics and the implementations to find some sort of understanding I can play around with.

My question today has to do with PGP (in particular, GnuPG) and what's actually being stored when someone posts their public key.

As far as I understand it, this is Base64 encoded something. I looked through the OpenPGP spec, and while it lays out how to encode data in ASCII-armored format, it doesn't actually specify what the data is or how it is formatted.

Looking around online, I found that the official PGP client encodes a ANS.1 DER sequence of the magic integers you need to actually encode or verify messages. However, I have no idea how the hell DER works, and trying all sorts of ways to get a sensical value out of an online DER decoder (http://lapo.it/asn1js/) turned up nothing (I guess it couldn't properly parse it, which makes me think it's not in that format).

Does anyone know the details of how this is done? I think I'd be satisfied if I could take my keypair (exported from GnuPG), load them into Java/Python/whatever, and use them to sign, verify, encrypt, and decrypt -- but without using a third party library to do the import. Alternatively, I'd be really cool if I could use the keys directly to do those things mathematically, without going through java.security or import PyCrypto.

Thanks!"	t5_2qq4h	True
1307945807.0	hyb9s	OpenPGP support in Go	uriel	18	4	0		t5_2qq4h	False
1305550867.0	hci5i	How were Engima's rotors chosen?	ze_germans_crypto	15	0	4	"For each rotation of Enigma it effectively generates one of the 26! (~4 x 10^26) possible overall substitution ciphers to encrypt one letter, correct? With a three wheel Engima without a reflector only 26^3 (17576) possible overall substitution ciphers are able to be generated out of the 26!.

With certain rotor wirings (say a straight passthrough A-&gt;A etc.) Engima will not generate a unique overall substitution cipher for each position. Whilst this is an extreme example my hunch is that not all rotor wirings/combination of rotor wirings will produce a different overall substitution cipher for each rotation. Whilst I guess _most_ combinations will produce 17576 different overall substitution ciphers the others will only produce between 1 to 17576-1 different overall substitution ciphers.

http://www.codesandciphers.org.uk/enigma/rotorspec.htm

In picking the various individual substitution ciphers used by each rotor (as seen in the link above) what analysis did (or should) the Germans perform to ensure no duplicates?

If there are 26! possible rotors how many combinations are not optimally strong?
"	t5_2qq4h	True
1300512314.0	g6x0u	Physicists Develop Quantum Version of Public Key Encryption	SparxNet	15	1	2		t5_2qq4h	False
1297185729.0	fhm1v	Cryptography &amp; Security Quiz 		16	1	3		t5_2qq4h	False
1291078072.0	edmif	Some thoughts on Javascript crypto	sanitybit	19	3	1		t5_2qq4h	False
1285651941.0	djum8	FBI Drive for Encryption Backdoors is Déjà vu for Security Experts	Brovvnout	16	1	2		t5_2qq4h	False
1375845092.0	1juxh9	Math Advances Raise the Prospect of an Internet Security Crisis	wintermute111	21	8	15		t5_2qq4h	False
1375246304.0	1jehkf	Has anyone here looked at this (alleged) cipher text found in 1948?	erikano	16	2	4		t5_2qq4h	False
1372163111.0	1h17mf	Two zero-knowledge proofs	jumbalo	15	1	11	"Hi /r/crpyto

While thinking about security for a game I'm developing I derived a couple of zero-knowledge proof protocols. Not being very familiar with the crypto literature, I'm not sure if they're already well known. They are a set membership proof and an equality proof.

I was hoping some knowledgeable /r/cryptonian could tell me if these already have names, are new, or don't actually work.

I typed them up as a PDF because of the math. It's short.

http://foon.co.uk/x/ZKP.pdf"	t5_2qq4h	True
1371436974.0	1ghnlw	Learning about salting and hashing	DayvanCowboy	21	8	33	"This weekend, I became emboldened to learn a little a bit more about encrypting passwords for storage. I played around in Python and came up with a (probably utter shit) way to salt and encrypt without the need to save a salt. 

One of the issues is that this means salts across duplicate passwords are duplicate, but I was curious to share it and gain some insight from people who know more.

Below is the code and ten fake passwords which have been salted and hashed. Basically, the code does this: It's takes a password, ensures it's of a positive length, uses the password mod 4 to do two things: 1) provide a Caesar cipher with a character shift distance for letters and 2) provide a (very shitty) salt. It pads it to a specific length (it actually does this before the caesar and salt), then hashes it with SHA256.


It's written in Python 3.

    # Smothered -- A Simple Password Salter &amp; Encrypter Tool
    # Version 1.0 - 6/16/2013
    import hashlib
    
    paddingCharacter = ""0""
    
    minimumCharacterLength = 6
    maximumCharacterLength = 16
    
    # Standard Caesar cipher.
    def caesarCipher(characterShift, wordToEncrypt):
            encryptedPassword = """"
            for character in wordToEncrypt:
                    newCharacter = ord(character) + characterShift
                    if character.isalpha():
                            encryptedPassword = encryptedPassword + chr(newCharacter)
                    else:
                            encryptedPassword = encryptedPassword + character
            return encryptedPassword
    
    # Hashes password in SHA256, then returns it. Can be changed, see hashlib docs.		
    def hashMachine(preHashPassword):
            preHashPassword = preHashPassword.encode('utf-8')
            hashedPassword = hashlib.sha256(preHashPassword).hexdigest()
            return hashedPassword
    
    # This function does most of the work.
    def initialAnalysis(unencryptedPassword):
            # Gets the length (which is needed later on) and determines if password is too long/short.
            passwordLength = len(unencryptedPassword)
            if passwordLength &lt; minimumCharacterLength or passwordLength &gt; maximumCharacterLength:
                    print(""Password is either too long or too short."")
            else:
                    # Finds unencryptedPassword Mod 4, uses that for the Caesar cipher and for finding position of salt character. 
                    characterShift = passwordLength % 4
                    randomCharacter = unencryptedPassword[characterShift]
                    # Pads password to defined max + 1.
                    paddedUnencryptedPassword = unencryptedPassword + (paddingCharacter * ((maximumCharacterLength + 1) - passwordLength))
                    # Salts password. Very basic, could def use improvement.
                    saltedPaddedUnencryptedPassword = randomCharacter + paddedUnencryptedPassword + randomCharacter
                    # Passes salted password and previously determined modulus to Ceasar cipher.
                    caesarsPassword = caesarCipher(characterShift, saltedPaddedUnencryptedPassword)
                    # Passes ""encrypted"" password to hashing function
                    finalPassword = hashMachine(caesarsPassword)
                    print(finalPassword)
    
    # Used to lazily call initialAnalysis
    def encrypt(inputPassword):
    	initialAnalysis(inputPassword)

Here are the ten ""passwords"" I ran through it:
cc44c78d8f779b44bca8d641ea36017e9ee7f4b212ee88890c1d1578d1446973
839b12f0d1ec4c19256a71735e960595b16d67e09591efb6666af0d907fd4aef
338c3db031b4a85780bfdb336dea077a3adc90a8077eba10f91af89c714a55da
d8702d426d827a385777627b8b22c2e3541cdb0b714d8f47431bbbfba3c48390
f4a3c963e415fa2f560497b079e99d322857ed5c16b5d3db052d586ae35b3be4
06ae90c00a87ab5a716758fef86d54266c1fae0d0265ad37182ca99bd88ca3ff
f46bd99699343bb093a9ea197e6156fafb21cb873a08cadde766f5923b14c373
2bdf4ef6409886ba457e6a30c1bb59dc4f93703f496e1f28eeccb74920674d2a
bf103eb0259022c24cc771e560945ad2131e409d3ff4becd63d683c9b796bd00
ee78b054b95adf335ef32053d8a5f7951d81871600ad188a5757331e1cfc3b37

Tell me what you think. Tell me to fuck off and go play in traffic. I'm interested in crypto and I have a tendency to start playing with fire before I understand how to employ it correctly."	t5_2qq4h	True
1364184891.0	1ayf2m	"You CAN compress encrypted data!
"	T_C	41	29	17	"I regularly see people say, you can't compress encrypted data.  (eg. in thread: http://www.reddit.com/r/crypto/comments/1avsl1/encrypting_ssd_drive/ )

Everyone knows that properly encrypted data is random. And random data can't be compressed. So  properly encrypted data can't be compressed, right?

Wrong!

From IEEE TRANSACTIONS ON SIGNAL PROCESSING, VOL. 52, NO. 10, OCTOBER 2004*(!)*  --  ""On Compressing Encrypted Data""

*""In this paper, we investigate the novelty of ... first encrypting and then compressing, without compromising either the compression efficiency or the information-theoretic security. Although counter-intuitive, we show surprisingly that ... this reversal of order is indeed possible in some settings of interest without loss of eithr optimal coding efficiency or perfect secrecy.""*

In Figure 2 of the paper, they define a system where the source is first encrypted, and then compressed. *""The compressor does not have access to the key used in the encryption step. At the decoder, decompression and decryption are performed in a single joint step.""*

Most of the paper (as in, 99.9999% of it) is completely over my head. But it clearly shows that you *can* compress encrypted data, in certain cases, without just cheating by decrypting it, compressing, and then re-encrypting it.

Perhaps lets say: ""encrypted data *normally* can't be compressed"". That accepts that it *can* be done in certain cases.

Google link to the paper:

http://www.google.com.au/url?sa=t&amp;rct=j&amp;q=cpompress%20encrypted%20data&amp;source=web&amp;cd=5&amp;cad=rja&amp;ved=0CFMQFjAE&amp;url=http%3A%2F%2Fciteseerx.ist.psu.edu%2Fviewdoc%2Fdownload%3Fdoi%3D10.1.1.121.3210%26rep%3Drep1%26type%3Dpdf&amp;ei=w8ZPUc_XH46higeI4IGgDw&amp;usg=AFQjCNGFvxjOU1HZ1TDO_881Zheaoz17hA&amp;bvm=bv.44158598,d.dGY
"	t5_2qq4h	True
1363903131.0	1ardju	Some of the talks from ECC workshop 2012 [Program page]	el_lley	17	4	2		t5_2qq4h	False
1363181544.0	1a7pgo	PassGuardian.com - Split/combine secrets	Julian702	14	2	1	[PassGuardian.com](http://PassGuardian.com) is a javascript implementation of Shamir's Secret Sharing Scheme and it works completly offline. 	t5_2qq4h	True
1360055134.0	17xbb8	Open Source encrypted voice calls for Android [x-post r/Android]	whitefangs	19	6	0		t5_2qq4h	False
1357410597.0	160m5i	Google Books English Frequency Analysis (x-post from r/dataisbeautiful)	aydiosmio	18	4	5		t5_2qq4h	False
1350038762.0	11czbf	CryptoParty Like It's 1993	EquanimousMind	22	9	1		t5_2qq4h	False
1346464688.0	z612x	Just a question about VPN encryption.	ShadO0Walker	16	5	5	"What encryption would I use , I normally use 256 AES based cypher but I have the option to use 1024 bit or even 2048 ( I know that I wiil get slower speeds ). Which should I use ? 
I understand that 256 is a block cypher but I don't know how that helps me . All in all I want to know which is safer . Is the slower speeds worth it ? "	t5_2qq4h	True
1343912563.0	xk79n	What type of cryptography is this?	downaretbobbys	18	7	7	"I am using two pre-shared keys that are used like salts on a hash, where a plaintext version of something, and then the ""signed"" version using the pre-shared keys are sent to my server to verify that the identity of my software is genuine and it is not someone trying to access private content without using my software.  I generate an access token on the server, send it to my software, the software then provides this token again when downloading restricted content.  If the server checks the token, and it is valid, then it starts the download.  This seems to me like a public/private key sort of cryptography, but I am unsure.  I came up with this method of authentication on my own one day, so I am unsure what to call it.  If anyone could help me, I would be very grateful!"	t5_2qq4h	True
1339380338.0	uvh0z	GPU-based Password Cracking [PDF]	gcardial	24	10	0		t5_2qq4h	False
1337067143.0	tnvuf	Help needed with this mysterious way of encryption.	GravityGod	18	6	19	"So I've been given the task to solve this: http://imgur.com/xGvCE 

Yes no usual BASE-64 stuff :/

No other information was provided to me.

i've made a start at the closest way of deciphering it seems to be this: http://www.borderschess.org/Pyramid%20Cipher.htm

The only results I have come up with are not structured words, I'll continue playing to see if there is some kind of cypher shift involved.

Thanks for your help in advance.

Anyone know of any other appropriate subreddits or is this the best bet?
Once again hopefully you guys can help me out, I've been trying for two days with no major outcomes.


EDIT: Thanks for all the ideas

It was sent out to our school emails today from the head of the maths department. The school is celebrating maths week and this was part of it. I don't know him very well personally, he sent out an easy one and a hard one, the easy one was a simple sliding cipher where the numbers represented letters in the alphabet shifted across. 

Could anyone see how 'magic squares' could be incorporated? Just a thought I had.

And I emailed him clarifying the following:

**'Did you come up with it yourself, or should has the encryption method already been used before?'**

*'Can't tell you that!!'*

**Am I on the right track with this?** (http://www.borderschess.org/Pyramid%20Cipher.htm)

*Not quite!*
 
*Regards*

EDIT AGAIN: Another one sent out on Monday, I just got this off a friend who received it: http://imgur.com/WjVOc

and the easier one I was talking about: http://imgur.com/CvHXx

Once again thanks


"	t5_2qq4h	True
1333668964.0	rvfue	Is there a safe voice-scrambling algorithm?	qunda	16	3	19	"I recall reading about how the creators of Nip/Tuck once had a promotional campaign for an upcoming episode where a recording of the show’s serial killer’s scrambled voice was uploaded to, I think, MySpace. Unfortunately, the showrunners had not expected that people from 4chan would be able to restore the original recording from the scrambled voice, revealing the identity of the serial killer ahead of time.

Since some voice alterations are no guarantee that the original voice is anonymized, do we have a voice-scrambling equivalent of AES 512(?) for encryption and bcrypt (Blowfish) for hashing?

If I wanted to scramble my voice (not that I have the intention), which would you recommend for practical purposes—rather than algorithms that are “better in theory, but ...”?"	t5_2qq4h	True
1326875457.0	om6u2	"Video lectures for ""Understanding Cryptography"" textbook (EN/DE)"	dgryski	14	3	0		t5_2qq4h	False
1326120698.0	o9bj8	Is there an encryption algorithm that maintains ordinality?	reddiculon	16	3	44	"This is probably a really simple question for cryptographers, sorry if it's obvious or if my question is badly worded.  First post in here...

By maintaining ordinality, I mean if the numbers 1, 2, 3, 4, 5 were individually encrypted with such an algorithm, the resulting encrypted codes would be ordered from highest to lowest value in the same order.

Does such an algorithm exist?  Does it even make sense to attempt this?

I'm quite new to this field, as I am basically just a PHP developer by day, but I have always been intrigued by the subject.

Thanks!"	t5_2qq4h	True
1319597076.0	lp89d	Good demo of timing attacks	throwawayagin	15	1	10		t5_2qq4h	False
1317220489.0	ku3zx	ECRYPT II Yearly Report on Algorithms and Key Lengths (2011)		16	2	1		t5_2qq4h	False
1314609154.0	jxth7	Off The Grid: A paper based password encryption system	mortenaa	20	6	5		t5_2qq4h	False
1309783354.0	igct2	Use steganography to hide secret messages in spam	pbewig	16	2	2		t5_2qq4h	False
1308442456.0	i392s	Factorization of RSA-768	isisgrimalkin	16	3	3		t5_2qq4h	False
1301340268.0	gdcm0	What are some interesting topics in cryptography? (crosspost from a few days ago on r/math)	oiler	13	0	2		t5_2qq4h	False
1296288485.0	fb8nj	Opensource cryptanalysis library	adesnos	15	1	1		t5_2qq4h	False
1290449758.0	ea20d	‘Berlin’ Is Revealed as Kryptos Clue	Moldavite	16	3	0		t5_2qq4h	False
1283160308.0	d75h4	Dudes use lasers to break commercial quantum crypto keys, leaving no trace of the attack.	bedsuavekid	16	3	6		t5_2qq4h	False
1376491910.0	1kcmu2	Brief History of Cryptography	secfreak	13	3	0		t5_2qq4h	False
1371313450.0	1gelj0	Sudden Death Entropy Failures	dgryski	12	1	2		t5_2qq4h	False
1370426802.0	1fpobr	How many bits of security in a fingerprint? (as in: key length approximately)	setnorth	16	4	12	"I was just reading another post about Windows 8 introducing fingerprints as an authentication method natively and got thinking about how many bits of information there are really in a fingerprint on average. 

If I had to take a wild guess, I would say that there are maybe 40-60 bits at most. Ideal scenario: Take the number of people in the world into account, which ideally have all distinct fingerprints, then log2(7x10^(9)) gives only roughly 33, which would already be a lot smaller. Of course that scenario requires a complete database of all fingerprints :)

In a real world application you would obviously generate the key from the output of hashing the fingerprint input with some good hashing function, but if you start with a ""bad"" input that wouldn't help you.

Any ideas?"	t5_2qq4h	True
1368043462.0	1dyb27	any useful PDF links on the subject of all things crypto	jimmysaville	15	4	14	"I know this has probably been done to death but does anyone have some decent pdfs that would be helpful to learning.
"	t5_2qq4h	True
1367985978.0	1dwup4	Break our Algorithm! (Highschool Engineering Project)	smalltock	30	16	17	"We (myself, festivefire, and a third member who does not have a reddit account) have created an experimental algorithm using a 3D Block Cipher method, which we hope will present itself as somewhat difficult to crack, especially via timing attacks and various forms of cryptanalysis.  The encryption part of the algorithm runs through a two-part loop sixteen times, which consists of ASCII manipulations and puzzle-cube-type spacial manipulations.  During the encryption process, noise processes are added to reach an equilibrium among time elapsation of different plaintext-key combinations, intended to evade time attacks.  While this may not be the best of ways to test an algorithm, we would appreciate it if you lot would give a serious attempt to break the encryption.  If you succeed in breaking it, please provide us the plaintext version of the provided ciphertext and detailed information regarding the actions taken to produce such results, as well as the amount of time taken to do so.  In addition, we welcome any suggestions regarding things that can be done to improve the algorithm.  We have provided an archived directory containing the source code for our algorithms initial implementation, which is written in C++, as well as the ciphertext file.

TL;DR
We made a 3D Block Cipher.  Break it and tell us how you did it

[**GitHub Repository**]
(https://github.com/smalltock/tricube)"	t5_2qq4h	True
1366004347.0	1cdgxn	Steganometry: Data in images, chan style.	bentspork	20	8	4	"I was browsing reddit and came across a comment about how someone was arrested for sharing a coupon forgery guide.  [Example]( http://2.bp.blogspot.com/_hy8RPTtBfrg/THuxP66hbII/AAAAAAAAACk/My0LBdgs_pI/s1600/How+to+Make+Coupons+v1.6.jpg) image, the real image is around 2MB.  

I've seen higher quality steganometry (lsb) before, but this is interesting. 
  
I found the original image and tried manually extracting the data.   The file is obviously not as it seems, there is even raw text embedded in it. 

I've a few questions: how common is this, how does one extract the data, can one automatically detect this? 


"	t5_2qq4h	True
1362246177.0	19j3pm	Help understanding why RSA is vulnerable against a chosen message attack	rhm54	20	8	7	I understand that when the message is small how this is a problem but what if the message is large?	t5_2qq4h	True
1361648928.0	193cvm	Having trouble understanding RSA	Azurinelle	14	4	9	"I think an example would help me the best. If persons A and B decide they want to use RSA to send each other a message, what steps would each person take in the process for A to send B a message and B to send A a message? Also, they don't want person C to know their messages, but person C can see all of their communication (so basically I want to know what person C can see).

Hopefully it's clear what I'm asking. Pretty sure I understand the math more or less. Thanks for your help."	t5_2qq4h	True
1357761231.0	169la5	PolyCrypt: A WebCrypto API Polyfill In JavaScript Funded by the US Department of Homeland Security	whitefangs	20	7	9		t5_2qq4h	False
1357738911.0	168xb1	"What are the applications of ""Shannon Entropy"" with Cryptology? "	coforce	16	5	4	"""Shannon Entropy"" is mathematically defined [here](http://mathworld.wolfram.com/Entropy.html). Entropy is the measure of ""disorder"" or ""uncertainty"". I was curious as to what sort of applications Shannon entropy has in regards to analyzing either known or unknown ciphertext."	t5_2qq4h	True
1355795082.0	150zo9	NetCrypt - Is This Program Junk?	a2625657	17	5	26		t5_2qq4h	False
1354924069.0	14h02b	Who is interested in a Google Plus cryptography community?	Natanael_L	18	6	5	"I know there's likely a fair share of people here who prefer anonymity and don't like Google tracking them, but for those who are willing to post their already public discussions under their real name, would you want to discuss it on Google Plus?

They have support for topics and making posts topic specific (but they don't have a threaded view, no downvotes and no sorting options (newest/best/etc...), that's probably the biggest differences in interaction from Reddit). They added a Community feature just a day or so ago, and there's no cryptography community yet. So far the average quality of discussions have stayed quite high on Google Plus, I'd say it's mostly close to how it's like on /r/crypto now in technical discussions.

I would like to see the first cryptography group on Google Plus Communities to be one with high standards and good moderators.

I haven't made one yet because I don't have the expertise it takes to select moderators who know what they're doing when it comes to crypto.
"	t5_2qq4h	True
1346208009.0	yzyrz	Ask Crypto:  Was anyone at Crypto 2012?  Moreover, what did Bill Burr say about the SHA-3 competition?	throwaway0xFF00	18	7	5	Just curious to know the latest.	t5_2qq4h	True
1345508671.0	yjxdo	Device concept: Universal Personal Cryptography Device	Natanael_L	16	5	25	"This is a crosspost between /r/crypto and /r/netsec because I think it's relevant to both subreddits. Please also suggest other subreddits if there's any you think this should be crossposted to. Please submit feedback and ideas.

Prepare for wall of text.

---

I have been thinking about this for a while, and I would like to see a universal cryptography device.

Currently we have Yubikey, ""bank dongles"", RNG-dongles and a few more various crypto devices. But I have yet to see a universal device that can handle almost anything crypto you might throw at it, and that is what I want. Edit: This just in through /r/privacy - http://www.goldkey.com/ - but not open source, and probably don't do all these things I'm asking for!

So this is basically a high level description of what I want:

First of all it has to be TEMPEST resistant (such as power analysis resistant) and tamper proof (impossible to extract keys by taking it apart).

The basic **hardware capabilities**: NFC, Bluetooth, USB, wireless charging, built in screen and keyboard (no smartcard please where you enter the PIN on *another* device you might not own and have to trust *that* device's screen). Also enough CPU, RAM and storage to handle the features I'm going to suggest (I think it should have about 4 GB storage (maybe far more?) - might be overkill, but you never know what you're gonna have to store, like years of Bitcoin keys, or just using it as an encrypted USB drive in general).There is another cool tech that I don't remember the name of that uses your body's electrical field to transfer signals to devices you touch directly, this can be used to keep it in your pocket and unlock doors just by touch.

Features: First one I'm going to mention is **secure key syncing (backup)**. This will be a small device, you can lose it easily (people lose cell phones all the time). So you'll make sure you have a backup device at home, and they sync automatically and securely when you get home, if new keys have been added on either. Lose the one you had on you, go get the one at home and get a new one to sync with. You don't want to lose all your keys! I am thinking about using Bluetooth 4.0 for this (low power usage) and transfer everything encrypted (on top of the BT protocol's encryption).

It could replace all your current **RFID/NFC tags** for doors and such. Depending on the security level needed, it would require PIN, passphrase or nothing in order to unlock the specific door.

It would allow **secure logins** and everything, essentially. Using public key cryptography (or maybe SRP or other auth system), it would let you log in on your computer, on web sites, games, etc... You'll never get your password snatched by spyware/keyloggers again, and no more account hijacking! It would work as two factor authentication (you need the device and the PIN/password for that site's key on it).

It would be able to **authenticate transactions, sign messages**, etc... For most bank sites, this would be a drastical improvement - when you make transactions, the device would simultaneously display the sender (precise account), recipient (precise account), the exact sum to transfer and currency, and any other details you might want (receipt?). You'd sign all these details together. This would make phishing and social engineering much harder, because even the current system with dongles ""gets busted"" by social engineering from time to time. (Would help against ""I lost my dongle, can I use yours?"" but not against ""you just won $100000, transfer $1000 to us to get it"".)

It would keep track of your friends' public keys and more (**keychain**). Logging in to your home computer through SSH? This device can authenticate the other end of the connection and display it on it's screen (""you're now connected to 'My home PC' *(stored personal public key)* [public key hash] over SSH""). Same goes for connecting to your work VPN from a friend. While malware might be able to interfere with the connection if there are any on the computer you're connecting with, restricted priviligies on the account you connect to would be A Good Thing™, and you'd just pull the device out and kill the connection if you find out malware is present.

It would also have an **RNG** for various purposes. It would make it easy to generate new keys *on the device*, and much more. It should obviously be cryptographically secure. One purpose could be as a seed for filling a hard drive with random bits. Another for lotteries. A third for servers that do a lot of nonce/session key generation.

It could be used as a **keystore**, so you can have your Truecrypt keys on it, so you can have this dongle and your encrypted USB drives with you, and be able to easily handle encryption/decryption.

It could be used to handle encryption/decryption externally. This would primarily be useful when you use it to decrypt data where the key is reused for other data and you don't trust the computer for more than holding *that* decrypted data at the moment, or when the computer you're connecting it to is slower at crypto than this crypto device, so it would be used to accelerate encryption/decryption of data.

It could work as a personal TPM for all your devices, including smartphone and laptops.

---

This is a summary of my thoughts so far. Probably not that organized, but should be readable and make sense. Please comment. **Please also see the discussion on the other thread** (this is crossposted, remember?):

http://www.reddit.com/r/netsec/comments/yjwsi/concept_idea_universal_personal_cryptography/

TL:DR; See the title."	t5_2qq4h	True
1344925417.0	y6vg4	New cipher: Blowfish with 128-bit block size (NOVA2)	nsa_at_home	16	5	10	"Hi all,

Recently I have been working on a project to expand [Blowfish](http://en.wikipedia.org/wiki/Blowfish_%28cipher%29) to a 128-bit block size. My variaton is called NOVA2, or N2.


NOVA2 is a variant of Blowfish which doubles the block size to 128 bits. It has the same structure as Blowfish with a few changes to accomodate the larger block. All addition is done mod 2^64. It is designed to be fast on 64-bit processors.

The S-boxes are 8 x 64 S-boxes (8-bit input, 64-bit output). The output had to be expanded because the output of the S-boxes must be the same size as half the block. The S-boxes consume 16KB of memory.

Originally I was going to go with four 16 x 64 S-boxes, which consumed 2MB of memory but there was a performance hit. Probably due to caching. I also did not see a significant security benefit of using 16 x 64 S-boxes.

The P-array is now eighteen 64-bit words (for 16 rounds) instead of 32-bit words in Blowfish because of the larger block size. As a result, the minimum key length is 64 bits and the maximum key length is 896 bits.



The F function has been extended to compute 64-bit values. Four S-box lookups, two addition operations and two XOR operations were added.

The initial vaues of the S-boxes and P-array is the hexadeciaml digits of the fractional part of the square root of 2. I did this to avoid any symmetry with Blowfish during the subkey generation, which uses the constant Pi.


Sample code (Written in C) is available [here](http://nsaathome.org/content/crypto/nova2/n2-sample-1.0.zip)


Aswell as a [draft specification](http://nsaathome.org/content/crypto/nova2/n2-draft.pdf) (No test vectors yet, sorry):


The C sample code includes a file encryption utility, a benchmarking utility (for RAM only), and a random encrypt/decrypt test.

Comments, questions, criticisms are all welcome. (Cryptanalytic) attacks are especially welcome :)

Thanks

EDIT: Added details about the sample code."	t5_2qq4h	True
1344771768.0	y39l7	Does encrypted data really look random?	decatron	24	11	21	"I often hear that well encrypted data should be indistinguishable from random data. According to this, I should be able to attempt to decrypt random data. However, using gpg (GnuPG) and assuming the standard symmetric encryption mode:

     dd if=/dev/urandom bs=1024 count=1|gpg -d

This never even takes me to the password prompt. It usually says

&gt; gpg: no valid OpenPGP data found.

 I'd expect it to ask me for a password, and of course it'd be next to impossible to successfully decrypt this, and even if I did manage to find the password, I'd expect random data to come out.

But it seems to me that this is a very simple way to determine whether a file of random data is actually encrypted or not. (Actually, this is only a sufficient criterion to rule out encrypted data.)

Is this a failure of gpg? Is there a mode of gpg that doesn't have this problem? "	t5_2qq4h	True
1343653044.0	xe0br	New Tool From Moxie Marlinspike Cracks Some Crypto Passwords	TheloniusPhunk	19	8	8		t5_2qq4h	False
1340639768.0	vkrcu	Scientists crack RSA SecurID 800 tokens, steal cryptographic keys	Saliceran	18	6	1		t5_2qq4h	False
1340263876.0	vdf7h	Is the encryption of the sector number a good IV for CBC-AES? If not, why?	Thunder_Child	16	2	26		t5_2qq4h	True
1332294570.0	r62k2	Boomerang Attack on FEAL-6 Tutorial	jkthecjer	16	4	5		t5_2qq4h	False
1327676784.0	oz65d	Stealing smartphone crypto keys using plain old radio	TheloniusPhunk	16	3	2		t5_2qq4h	False
1326062443.0	o8g6o	NSA Launches New Crypto Mobile Game App	B-Con	14	1	8		t5_2qq4h	False
1316755174.0	korjj	A vide description of Blake- A sha3 candidate	fuckingbagre	14	2	1		t5_2qq4h	False
1314873896.0	k16h7	Journalist publishes Wikileaks password in a book	cavedave	12	1	0		t5_2qq4h	False
1312299835.0	j6rtu	State of the Art in Symmetric Cryptanalysis [PDF]		15	2	0		t5_2qq4h	False
1308796418.0	i6scq	An easy to use crypto tool (with mobile interface) that a friend and I came up with: CryptBro!	lachiemx	16	4	11		t5_2qq4h	False
1306349466.0	hjzxv	Three Questions for Billy Brumley on the OpenSSL Timing Attack	GunkertyJeb	12	0	0		t5_2qq4h	False
1306185876.0	hicud	How to run a fair lottery via crypto?	redditcdnfanguy	15	3	17	"I want to be able to pick a computer out of a p2p network at random in such a manner as to be absolutely fair and to be able to prove it.

Anyone have any ideas?"	t5_2qq4h	True
1302444599.0	gmpio	How should passwords be stored if they must be recoverable?	cruise02	13	1	9		t5_2qq4h	False
1297678755.0	fl22m	SHA-2 standard updated to support truncation of 512-bit hashes		15	3	0		t5_2qq4h	False
1295643089.0	f6ou1	Like cracking ciphers, but not up for modular exponentiation? I've created /r/codes for all your non-strong-crypto entertainment!	phyzome	12	0	1		t5_2qq4h	False
1292812382.0	eok23	Another good reason to disable weak ciphers.	sanitybit	13	2	0		t5_2qq4h	False
1290773708.0	ec16n	Cryptography - Science or Magic?	sanitybit	14	1	2		t5_2qq4h	False
1290686008.0	eblob	TIL that Wolfram|Alpha can do n-gram string processing &amp; hashing.	sanitybit	14	2	0	"* [Hashing Examples](http://www.wolframalpha.com/examples/Hashing.html)
  
* [String Processing Examples](http://www.wolframalpha.com/examples/StringProcessing.html)"	t5_2qq4h	True
1262199308.0	ajzqc	Quantum Cryptography Cracked	polar	16	2	1		t5_2qq4h	False
1246362028.0	8wxs5	The best tool I have ever seen for learning about cryptography! Many different ciphers and so on represented. Several versions available (Win, .NET, Java, web...)	johnlunney	16	4	0		t5_2qq4h	False
1245403594.0	8tuiu	DSNP: Distributed Social Networking Protocol, using public key cryptography for trust relationships, with implementation and test sites (from proggit)	johnlunney	12	1	1		t5_2qq4h	False
1241071109.0	8gnza	Handbook of Applied Cryptography: Classic crypto textbook, available free online	lmaurits	14	3	0		t5_2qq4h	False
1375183124.0	1jcbjk	NSA could have planted Permanent Backdoors in Intel And AMD Chips	whitefangs	48	38	29		t5_2qq4h	False
1372181011.0	1h1ru6	Assuming certificate authorities are untrusted, how can public keys be safely distributed?	FakingItEveryDay	15	2	39	"Consider public key servers for GPG keys. If their certificate authority is willing to issue a second certificate for that domain to a government entity which is capable of proxying connections to that site at the NAPs then the SSL encryption on the connection to that server is compromised. It then becomes possible for the middle man to replace the public key requested with one that they have the private key for.

Is there any way this can be mitigated without some sort of entirely offline verification of the public key?"	t5_2qq4h	True
1366180401.0	1ciopg	FreeOTFE - Account suspended?	SinTrenton	14	3	2	"Hello,

This morning, I was just going to look up something in Sarah Dean's FreeOTFE FAQ (I use both FreeOTFE and TrueCrypt), but was met by a sign simply stating ""Account suspended"".

Does anyone know what's up? I have the latest version as well as a copy of the source code I downloaded some time ago, but I'm curious to know, as well as because of this, a bit wondering about the future of FreeOTFE.

Sources: freeotfe.org (Account suspended) and sdean12.org (Site is parked)

_Edit: Edited paragraphing of text_"	t5_2qq4h	True
1362671248.0	19ukyi	Cypherpunk rising: WikiLeaks, encryption, and the coming surveillance dystopia	whitefangs	16	5	0		t5_2qq4h	False
1354856390.0	14fftd	Cryptoparty Online - Saturday, 15 December at 11am UK time (11:00 UTC)	EquanimousMind	16	4	0		t5_2qq4h	False
1353150840.0	13cj4h	Populating Retroshare - Encypted P2P IM Filesharing Forums (xpost /r/evolutionReddit)	EquanimousMind	17	6	1		t5_2qq4h	False
1350765658.0	11t9ry	Alice and Bob in Cipherspace - An introduction to Fully Homomorphic Encryption	B-Con	15	2	1		t5_2qq4h	False
1349181680.0	10tado	Is There a Free Program to Encrypt a Text Message with Error Detection?	LastSasquatch	12	1	26	I'm looking for a program where I can input a paragraph of text and it will encrypt it for me, but if there are a few small errors in the encrypted text (like a missing or extra digit) it will still decode properly. Is something like that a thing?	t5_2qq4h	True
1347350174.0	zp6zy	How you can (maybe) protect yourself from CRIME, BEAST’s successor	nmap	16	4	1		t5_2qq4h	False
1345719143.0	yougm	A Timing Attack In Action	uriel	16	5	0		t5_2qq4h	False
1343389647.0	x8rfo	Side-channel attacks on DESFire.	xor_rotate	14	5	1		t5_2qq4h	False
1337817254.0	u1vc5	Help with the actual notation and algebra of cryptography	sublimepua	12	1	17	When reading most whitepapers and books about modern cryptography, I find myself all too easily lost entirely as soon as the notation and math comes out. I've got a good knowledge of calculus, statistics, and liner algebra. What am I missing? Abstract algebra? Are there any books that you could recommend specifically to help understand the math of cryptography? 	t5_2qq4h	True
1335607547.0	swn5d	Primal Fear: Demuddling The Broken Moduli Bug « Dan Kaminsky's Blog	SparxNet	15	2	0		t5_2qq4h	False
1335303670.0	sqmwe	If I rotate every character in a message by a random number, how would one decrypt this?	sastrone	18	8	46	"I was reading about the numerical constant Pi on Wikipedia, and saw that there aren't any discernible patterns in the sequence of numbers. This got me thinking, if you chose a starting place, and then rotated your characters sequentially from the subsequent digits in Pi, you could rotate every character by a (seemingly) random number.

This could obviously be expanded on by using two digits instead of one (to shift them more than 9 spaces max) or use a third digit to decide to rotate up or down.

Anyway, I just came up with this today, but I can't think of any holes in it so far.  Could someone shed some light on why this won't work?"	t5_2qq4h	True
1332967955.0	ri4c5	Question about ring signatures	marklarledu	13	3	6	"After reading up on [ring signatures](https://en.wikipedia.org/wiki/Ring_signature#Definition) I am still not sure how it works. My understanding of it is that the message is signed by every group member's public key and the private key of the message signer (also a group member). My understanding of ""normal"" message signing is that the message signer signs the message with his private key and the verifier verifies the signature with the sender's public key. My questions about ring signatures are:

- How does the verifier verify the signature if they only have the public keys of the group members? 
- Do they just sign the message with all the public keys and see if they get the same result (assuming the signature scheme is deterministic [which isn't the case with ECDSA])? 
- If yes to above, couldn't you verify which public key corresponds to the private key signature and know who the sender of the message is?"	t5_2qq4h	True
1331935308.0	r003r	Are others interested in cryptography-based voting, for elections?	deletecode	17	4	28	"I didn't see any discussion here.  With all the talk of vote manipulation, corruption, I think there would be renewed interest in it.

The basic requirements for any such system:

* Universal verifiability: Anyone may determine that all of the ballots in the box have been correctly counted.

* Voter auditing:  Any voter may check that his ballot is correctly included in the electronic ballot box.

* Anonymous / ""receipt freeness"":  No voter reveals how he voted to any third party

[That's from wikipedia](http://en.wikipedia.org/wiki/End-to-end_auditable_voting_systems).
 I think simplicity is required too.  In order for a system to be accepted, it has to be understandable by quite a few people, like expert witnesses."	t5_2qq4h	True
1331236881.0	qnr1b	FlipIt: A game-theoretic approach to modeling Advanced Persistent Threats	dgryski	15	4	0		t5_2qq4h	False
1330024760.0	q2vv9	Another look at HMAC	mfukar	11	0	0		t5_2qq4h	False
1329811772.0	pz39w	SHA-3 software shootout [PDF]	dgryski	12	0	3		t5_2qq4h	False
1322598049.0	mtqau	Entire Voynich Manuscript now online	One_Giant_Nostril	11	1	1		t5_2qq4h	False
1319501368.0	lnr35	Slide Attack Tutorial	jkthecjer	13	3	3		t5_2qq4h	False
1314395388.0	jvjtk	AES proved vulnerable by Microsoft researchers	bobwobby	30	19	12		t5_2qq4h	False
1307273505.0	hs2iw	DOMcrypt, a proposed crypto-api for webbrowsers.	DrWhax	14	5	2	First mentioned here: http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-May/031741.html	t5_2qq4h	True
1305356606.0	hb4be	Does anyone think there's a market out there for crypto consulting?	throwawayagin	12	2	6	I'm wondering if anyone's had any experience with computer consulting just in the field of crypto/hipaa/encryption technologies. Is it just too small of a niche? Surely companies would prefer to pay someone to set this up for them. 	t5_2qq4h	True
1304954644.0	h7dtk	The RFC defining SHA, HMAC and HKDF was updated/superseded - Here is the new RFC 	sanitybit	13	3	1		t5_2qq4h	False
1303802449.0	gxm2p	USC researchers have developed (and plan to open source!) HDD cluster based steganography software	vanquish46	13	2	1		t5_2qq4h	False
1252527921.0	9ixzw	Implementing the Serpent block cipher at near-AES speeds using SSE2	randombit	11	1	0		t5_2qq4h	False
1249704450.0	98npq	"""Military Grade 1280-bit Encryption Algorithm"""	aviewanew	14	4	2	"[crypo.biz](http://crypo.biz/) claims ""Military Grade 1280-bit Encryption Algorithm"".  Since we all know this bullshit, I set about figuring just what they are doing.  Short story?  **Vigenère cipher**.  I've [cleaned up their source and reverse-engineered the algorithm](http://ritter.vg/code_adventures_badcrypto2.html) into both Javascript and C.  

Does anyone want to take my code and build a cracker for the site?"	t5_2qq4h	True
1376178355.0	1k46zb	In light of the recent RSA press, it's important to inspect the alternatives being pushed in the media.	Borgbox	15	7	1		t5_2qq4h	False
1375738915.0	1jrnvc	How practical is BitLocker? What are its strengths and vulnerabilities?	rohanivey	17	8	6		t5_2qq4h	True
1374682658.0	1iyp2b	Transport Layer Security introduction	secfreak	11	2	0		t5_2qq4h	False
1374680957.0	1iymur	I forgot the exact passphrase to my TrueCrypt volume, but I remember how it was approximately	tsarus	14	4	18	"I haven't mounted my encrypted partition for over 7 months, and so I don't remember exactly what my passphrase was. Is there any application that can use an educated guess to brute-force attack my partition?

For example say that I remember that it was approximately ""dark shadows"", but it could have also been ""d4rk shad0ws"", ""Dark Sh4dows"" or ""DARK SHADOWS#"". This is an obvious improvement over naive brute-force, using which I'm sure it couldn't be cracked since the passphrase is at least 32 characters long.

Edit: I'm amazed at how the brain works. This actually happened yesterday and I spent half an hour trying different passphrases unable to mount it. Frustrated I slept on it and the first one I tried today works. It's very interesting that the passphrase was stored but not immediately retrieved. Thank you for your suggestions anyway."	t5_2qq4h	True
1374623076.0	1ix4ub	NIST Special Publication 800-38G: Methods for Format-Preserving Encryption [Draft, comments open until September 3]	B-Con	10	2	2		t5_2qq4h	False
1372822020.0	1hjlry	ZRTP implementation for iOS?	worthwhileredditing	13	2	12	I'm familiar with red phone for android, but iOS seems lacking. Is there any way to encrypt calls and text securely? Jailbreaking is certainly an option if cydia has something of the sort.	t5_2qq4h	True
1372404463.0	1h8ice	One encrypted file. Two keys. Two different contents.	miguelos	15	6	11	"Is there a way to encrypt two different contents in a single file accessible with two different keys?

Let's say I have something to hide in an encrypted file, but someone (friend, government, terrorist) asks to see the content. Is there a way to give them an alternative key that give access to some fake content? I first saw this concept implemented in some banking systems (you can have both a regular pin and alert ""help"" pin), and I think it would be a very useful way to calm/deceive those who want to verify what's in there, without actually revealing anything.

How would you call this? Does anything like this actually exist? What about suspect file size?"	t5_2qq4h	True
1372280216.0	1h4toz	Problems whose only known solutions involve second preimage resistant hashes?	alecbenzer	11	0	16	"I understand why a hash function with poor second preimage resistance would mess up a scheme where we sign something by signing its hash instead of the thing itself. But, if for example all well-known hashes were suddenly found to not be second pre-image resistant, we could just sign documents themselves and still solve the signing problem, just not as efficiently.

I'm curious if there are problems that, as far as we know, would be basically unsolvable without the use of a second preimage resistant hash."	t5_2qq4h	True
1372191078.0	1h25vi	SIMON and SPECK in Cryptol	dagit	10	0	1		t5_2qq4h	False
1371643336.0	1gnezg	Keyfile or passphrase?	espero	17	9	21	"So I made a friend share my enthusiasm for storage security, and I made him encrypt his files. 

But we started discussing and arguing about what is the most secure approach to the encryption, using a keyfile or using a passphrase? 

I ended up being unable to argue against that since the keyfile-directory that I have encrypted and  which I open with a passphrase is just as vulnerable as using passphrase on the volume in the first place. 

My argument is that keyfiles are at least baseballbat-proof, you can't spell out a 1megabyte(scrambled) keyfile while being threatened...

How do you secure and store your keys?
Are keys better than passphrases?"	t5_2qq4h	True
1370590170.0	1fulmd	micro-ecc: a small ECDH and ECDSA implementation for 32-bit microcontrollers.	kmackay	11	1	0		t5_2qq4h	False
1368668895.0	1efa4b	For computational privacy in clouds FHE is alone not enough	sashankdvk	16	6	3		t5_2qq4h	False
1365660620.0	1c4c2c	A Few Thoughts on Cryptographic Engineering: The Ideal Cipher Model (wonky)	jfdm	13	2	1		t5_2qq4h	False
1364371459.0	1b3m7q	Question regarding attacker having both md5 and sha256 hashes for a plaintext.	primordia	11	1	15	"I figured I would ask here before starting to dive into random CS papers, as Google isn't being very helpful and I'm probably not using the proper keywords/phrases:

Say you have both the md5 and sha256 hashes for a given plaintext, does that make it any easier to produce the plaintext, e.g. can you take the two data points and use them in combination somehow to reduce the search space?"	t5_2qq4h	True
1363901962.0	1arc05	Some of the talks from ECC workshop 2012 [youtube]	el_lley	14	3	0		t5_2qq4h	False
1363870516.0	1aq9i7	Any good introduction to authenticated encryption?	taw	12	3	15	"This wasn't really a big thing in the olden days, so I only have vague idea how it's supposed to work.

What were the attacks for encrypt-then-hash, or hash-then-encrypt schemes, and how do these new modes (and fancy MACs for that matter) work, and what are their advantages and disadvantages?

You can assume I understand the more traditional kinds of crypto.

Thanks"	t5_2qq4h	True
1362461218.0	19ovwe	Len(plaintext) == Len(ciphertext)	marklarledu	17	6	29	"**TL;DR The cipher text produced by a block cipher isn't *necessarily* the same size as the plain text, right?**

I am required to get the Security+ Cert for work and while going through a practice exam with answers that supposedly come from previous exams I got this question:

**An encryption method where the plain text and cipher text are always the same size is an example
of which of the following types of encryption?**

**A. RC4**

**B. MD5**

**C. Steam Cipher**

**D. Block Cipher**

When I first read the question and didn't look at the answers I immediately thought to myself that most stream ciphers work this way. I then saw option A and option C and got confused as I thought they would both be valid answers (only one option is allowed for this question). I then noticed the misspelling for option C and then thought A would be correct so I went with that. I then found out that the ""correct"" answer is D (block cipher). This doesn't seem right as I thought the only time a block cipher produces cipher text whose length is equal to the length of the plain text is when the plain text's length is a multiple of the block size.

Am I missing something or is their answer incorrect?"	t5_2qq4h	True
1361550150.0	190z9p	Understanding CBC-MAC variable-length weakness	forstalker	13	5	3	"Title says it all - I've started reading about CBC-MAC when [this](http://www.reddit.com/r/netsec/comments/18kul2/why_i_hate_cbcmac/) was posted. So essentially i know what the problem is but im having trouble understanding it (both visually and proving it mathematically). 

The best way to put it is [here](http://scienceblogs.com/goodmath/2008/10/24/how-not-to-do-message-integrit/)- given a message M, its tag Tm (MAC(M) = T), a new message N and its tag Tn we build a message such as:

M||N = (M1, ..., Mn, N1 ⊕ Tn, N2, ..., Nn)

The crucial operation is XORing N1 and Tn and then appending the rest of the message.

So my question is - why does this work? How come that the calculated MAC of this new crafted message wil be Tn; and why do you need the implementation to support variable length messages.

Some good references [here](http://www.cs.umd.edu/~jkatz/crypto/f12/chap4.pdf) [here](http://isis.poly.edu/courses/cs6903-s09/Lectures/lecture9.pdf) and [here](http://www.cs.tau.ac.il/~bchor/crypto07/Crypto4.pdf)"	t5_2qq4h	True
1360101266.0	17yhub	How to host a cracking challenge	artibramuir	15	4	11	"What would it take to interest you in trying to crack a new form of encryption?

*Just because it's new and different, or because it makes audacious claims?

*Some sort of prize? If so, what kind?

*Endorsement from a cryptanalysis firm? If so, which one(s)?

**Edit:** Followup: OK, the source is available, there's a description of the algorithm, and there's a cash prize. How big would the prize have to be in order to get your attention?"	t5_2qq4h	True
1354668884.0	14alhn	CACert meetup in San Diego on December 11 (come get assured)	falgebra	14	4	3		t5_2qq4h	False
1351559164.0	12b8fe	Zero Knowledge and The Department of Defense by Susan Landau	turnersr	10	0	1		t5_2qq4h	False
1349076907.0	10r2y5	"Is a last resort, ""self-destruct"" type key feasible?"	math_sci	16	4	32	.	t5_2qq4h	True
1346038654.0	yvxah	Secret Sharing Windows binary?	7trXMk6Z	15	4	3	"Is there a simple Windows binary that will allow you to put in N of M values for a passphrase or small bit of text and it will spit out M shares for you to give to others?  (Or you put in the shares and it will combine if there's enough to meet the requirement.)

I would very much like a simple program like this, but I can't find one.  I found ssss online, but I don't know how to compile the C source code :-(

Thanks to anybody who can help!  Sorry for not being able to do this on my own."	t5_2qq4h	True
1345927362.0	ytkty	Teach crypto to the masses? Thoughts on #CryptoParty tweet stream?	EquanimousMind	16	6	1		t5_2qq4h	False
1345718198.0	you1y	[Crypto 2012] The case of FUCK-A-DUCK certificate.	cauchy37	17	6	8		t5_2qq4h	False
1344693720.0	y1q8h	Are there any languages I should learn if I'm interested in cryptography?	slowwarrior	11	1	24	I am considering a career in cryptography, and I'm wondering if I should learn a foreign language. If it is necessary, what language should I focus on?	t5_2qq4h	True
1344399081.0	xv40q	Imagining a Secure Backdoor Cipher.	xor_rotate	15	5	3		t5_2qq4h	False
1344031122.0	xn4et	A research paper I wrote as an undergrad on PDF Encryption that uses RC4	AshenLight	16	5	2		t5_2qq4h	False
1342702097.0	wtbya	How feasible would it be to daisy-chain several gaming consoles into a password cracking cluster? 	5uperuser	19	8	16	"Sorry if this is not the proper place to ask this, but I am trying to gerry-rig some xboxes and a PS3 into a cluster with a small core flash memory based Linux version then going to town on some key segments.

Wanted to see if anybody could suggest a distro and the best way to interface them together. 

**edit:** *The consoles are already in my possession and electricity is a small issue. For the sake of a diminishing returns arguments lets say I have somewhere in the range of 4 to 50 consoles.*"	t5_2qq4h	True
1340373544.0	vfop0	Cracking passwords using DVD/Blueray Upscalers???	wtfomglolz	12	2	7	"I seem to remember that a few years ago some guys were using circuit boards from their TVs to crack password hashes.  If memory serves correctly it was because some of the chips used to drive the HDMI ports (Field Programmable Gate Array, maybe??) had some good crypto capabilities.

So as I have a DVD upscaler with HDMI outputs kicking around (and ready for butchering), i was wondering if the chips from the source end of the HDMI socket are just as useful.

Anyone on reddit have thoughts?  Helpful URLs I could use to research, etc?"	t5_2qq4h	True
1339165768.0	urlo6	How Charles Dickens helped crack your LinkedIn password	TheloniusPhunk	19	9	7		t5_2qq4h	False
1338919653.0	umfcj	A question about hidden Truecrypt volumes	FuZzY_BuBbLeS	13	4	8	Say an attacker has my thumb drive that has a hidden volume set up on it using Truecrypt. If they attempted to brute-force it (assuming for some reason I didn't just give them the passphrase for the outer volume), could they 'accidentally' crack the hidden volume passphrase or would the only danger be to the outer volume? Let me know if this isn't clear enough...	t5_2qq4h	True
1334109243.0	s3m42	Encrypted transmissions found online, currently being decrypted by 4chan /x/. Requesting assistance. 	mikeylikes	23	13	20		t5_2qq4h	False
1329176269.0	po7eo	What's a decently secure psuedo-random number generator for C?	istyleonwomen	13	1	15	"Does not have to be super-fast.

I don't have the hardware for a hardware-based one or one with lots of obscure package dependencies. Maybe an implementation of Blum Blum Shub or somesuch?

Thanks!"	t5_2qq4h	True
1327415043.0	ougtd	Multiple Encryption - any proof?	baabaamoo123	12	1	37	"Hi,  
I've always wondered why (relatively) few system employ multiple layers of encryption by design. I then learned about the meet-in-the-middle attack (among others), and realized multiple-encryption is something that requires a great deal of care if you want to do correctly.  

While reading Schneier's ""Applied Cryptography"" I came across the method outlined in the following Wikipedia article:    
http://en.wikipedia.org/wiki/Multiple_encryption (read the last paragraph before the references)


What I'm looking for is any proof or detailed analysis that will convince me what is the real level of security attained by this design (assuming the individual ciphers are robust and the keys and random pads used for each layer are unique and truly random).      


Also, I'd be happy to make sure I correctly understand the method, if applied to more than two layers -     
It is my understanding that in this case, there would be **no** need to have a ciphertext whose size is:     
   size_in_blocks(plaintext) * 2^(number of layers)    
but rather:
   size_in_blocks(plaintext) * number of layers      
This is because I assume I will:    
+ For each random pad:       
++ Generate a random pad the length of the plaintext in blocks      
++ Encrypt each random pad with its key and algorithm     
++ Send ciphertext       
+ Finally, xor the plaintext with each random pad, encrypt it (with another key) and send it       


Any help will be appreciated :-)"	t5_2qq4h	True
1326129323.0	o9hb0	Could someone explain elliptic curve crypto to me?		13	3	14	I got as far as understanding the addition operation and making a group, but comprehension deteriorated quickly after that.	t5_2qq4h	True
1325614833.0	o1c9g	Phidelius: Constructing Asymmetric Keypairs From Mere Passwords For Fun and PAKE	gthank	10	2	0		t5_2qq4h	False
1325195892.0	nvdvi	ASK CRYPTO: . What are the good graduate schools for crypto in the North East of the United States?	loudZa	11	1	11	I'm thinking about applying to graduate school for cryptography. What are the good graduate schools for crypto in the North East of the United States? 	t5_2qq4h	True
1325016769.0	nsmkp	[x-post] Cryptography/analysis books for my daughter? 	Daephex	15	4	1		t5_2qq4h	False
1324496869.0	nllyi	How to make convenient hard-copy of private keys?	iheartrms	12	4	23	I want to keep a hard copy backup of my crypto keys in a safe. Some of the keys are rather long and manual re-entry of the key would be a real hassle. Is there some program which will produce line by line checksum of the key data to make typos easier to find? I could write my own if necessary, just wondering if there was already something out there. Note that I don't mean a key fingerprint which is a hash of the whole key. I want a line by line checksum to make identification of typos easier.	t5_2qq4h	True
1314794768.0	k04hs	Behind the Scenes of The Crypto Project Pt. 1	TheloniusPhunk	11	0	0		t5_2qq4h	False
1312589576.0	jad7l	Learning past the basic crypto.		12	2	12	"Hey /r/crypto, 

I've been interested in crypto for a while now, and I think I've done an okay job at getting down the basics. I've read a lot about olden ciphers (substitution, vigenere, rot13) and how to break them, and have done some of that one my own. 

I've also practiced coding and have wrote some scripts that do letter frequency analysis with comparison to english, and also look at digraphs and double letters. 

Alas, when it comes to higher level crypto I'm still a bit lost at how to go about learning it, and how to write scripts to play with it and get it down. I've gotten past the point where I thought ""Why is that A upside down and that x in a circle..."" (I know what an XOR is for the record), and I know the difference between a stream and block cipher modes, and public/private keys, but when it comes how to things actually work I'm still a bit lost. 

Can anyone recommend some good articles or links that break down higher level crypto so that I can start to learn it?

Also, I've been accepted to my college's undergraduate research program and want to see if I can work with a professor who does crypto or security research. What are some things that can make my resume particularly attractive to them, besides GPA and programming/Linux knowledge?

Thanks, Sn00w"	t5_2qq4h	True
1310701555.0	iq3is	SHA-1 Demo	Cruzade	14	5	1		t5_2qq4h	False
1300414560.0	g65ho	Zero-Correlation Linear Cryptanalysis of Block Ciphers	lookouttacks	11	1	2		t5_2qq4h	False
1299504690.0	fz028	10 Days To Initialize a 1TB Hard Drive (cross-post from /netsec)	Julian702	13	5	30	"Sorry, this is a cross-post originally sent to /netsec. This is more relevant to crypto:

I recently purchased a 1TB hard drive for an offsite backup solution. It will use full disk encryption and the standard practice is to first write random data across the entire disk so that encrypted data is indistinguishable from unused space.

10 days ago, I started 'dd if=/dev/urandom of=/dev/sda'. It just now finished. The limit being /dev/urandom only being able to spit out good random numbers so fast (slow). There has got to be a better way to get a disk up and running.

TL;DR: Can I securely bypass the random initialization as long as I do 'dd if=/dev/zero of=/mnt/encryptedDrive/bigfile' inside the encrypted container, filling it to capacity, and thus, ensuring the outside of the container appears random across the disk?
"	t5_2qq4h	True
1296400919.0	fbtut	Hi r/crypto check out Cubecrypt, a transposition ciper based on the idea of a rubik's cube	poingpoing	10	2	7		t5_2qq4h	False
1296179477.0	fafmv	Communication Theory of Secrecy Systems by C.E. Shannon	DasWood	11	0	4		t5_2qq4h	False
1295288514.0	f3x5d	Strong Key Derivation via Sequential Memory-Hard Functions	gthank	12	1	5		t5_2qq4h	False
1294438370.0	ey5fs	Export Regulations on Crypto Lightened	sanitybit	14	3	12		t5_2qq4h	False
1283913763.0	dawrk	Recently we learned that a commercial quantum key distribution system was cracked using lasers. Here's an explanation of exactly how the crack worked.	phyzome	11	2	0		t5_2qq4h	False
1279712048.0	crzyp	Ask Crypto: Where do you get your crypto news?	aviewanew	12	1	4	"I'm sorry to make a meta-thread, but I was reading [Cryptography Engineering](http://www.schneier.com/book-ce.html), and saw many cipher modes and constructs I hadn't seen anywhere - for example [GMAC](http://en.wikipedia.org/wiki/Galois/Counter_Mode); and that came out pretty recently!

I subscribe to Schneier's and Percival's blogs, and here - but there's a lot of news I'm apparently missing.  Do people watch NIST publications (isn't there a yearly book they put out?), ACM, and dead-tree whitepaper compilations - or are there rss feeds and blogs talking about/summarizing/mentioning new developments I don't know about? "	t5_2qq4h	True
1271419315.0	brrwc	On Locational Privacy, and How to Avoid Losing it Forever	cavedave	12	3	0		t5_2qq4h	False
1250529729.0	9bfvo	Cracking budget encryption		10	1	0		t5_2qq4h	False
1248462559.0	94adh	NIST announces round 2 SHA-3 candidates: 14 out of 64 submissions make the cut	randombit	11	1	0		t5_2qq4h	False
1244893416.0	8s7ij	Doing it wrong...	johnlunney	11	1	4		t5_2qq4h	False
1243618198.0	8oa15	Steganography Using TCP Retransmission	lmaurits	12	1	1		t5_2qq4h	False
1241325766.0	8hews	Wikipedia - how SSL/TLS works.  Really good, detailed, step by step explanation.	lmaurits	12	1	0		t5_2qq4h	False
1376163727.0	1k3rea	Why isnt NTRUEncrypt - allegedly quantum-proof - more commonly used?	goodluck_7proxies	10	1	4		t5_2qq4h	False
1375404839.0	1jj8g2	Preventing Reverse-Engineering Of Encryption Software. Wait, What?	Linux-Nick	10	3	4		t5_2qq4h	False
1375136243.0	1jb2n1	Could this cause a product recall?	gonzokawasaki	11	3	4		t5_2qq4h	False
1372805296.0	1hj1vo	Question: what's negative effect of random # gens that make 90% 1's over 0's?	VAZT	14	5	8	"Posting question on behalf of friend that's unable to web for a bit, but crypto book he has with him leads to this question:
 
What is the negative effect of random number generators that put 90% of 1's over 0's?

And I ask forgiveness in advance: I'll fail to know good from bad answers/discussions, but the final reader/original person asking does seek best you can explain.  Thanks from us both. "	t5_2qq4h	True
1369154193.0	1ert0c	Overview of security / cryptography	jverm	16	6	5	"I wonder if there exists an overview of the most well-known encryption algorithms, modes of operation, key establishment algorithms, digital signature algorithms, hashing algorithms, data Integrity algorithms, key derivation functions, ...

All bundled in a table, like a **cheat sheet**, with the **security services** they provide (authentication, confidentiality, integrity,...), weaknesses and strengths against **attacks** (ciphertext-only, chosen text,....) and other useful things.



"	t5_2qq4h	True
1367246045.0	1dc805	A few (probably simple) questions...	caribou16	13	5	12	"Looking for the answers to two probably simple questions.

1. If the number of characters in a password (+ salt) is greater than the number of characters in the password hash, aren't there bound to be collisions?

2. When brute forcing something, how does the program know when it's arrived at the correct key?  I assume it's checking the entropy of the data, but what if the plain text is equally random (by chance) or if the plain text is the cipher text of a different (nested) algorithm?"	t5_2qq4h	True
1365305618.0	1bu240	Any tips on how to make a simple general mixed alphabet cipher a harder to crack?	MrFifths	13	6	18	"Just looking for simple ways to throw off frequency analysis etc...
any suggestions would be awesome :)

Can still only use a-z characters.

My thoughts were intentionally dropping letters, maybe using phonetic spelling where possible and maybe including useless or garbled text in parts of the message.

I know this might be a bit basic for this sub reddit but I wasn't sure where else to post."	t5_2qq4h	True
1365209544.0	1brrbe	What should I do next C++ and crypto.	CommunistPhysician	14	4	16	I made a simple RSA encrypter with C++ that deals with text files and I was wondering how would I go about learning how to encrypt actual folders and files, kind of like truecrypt.	t5_2qq4h	True
1363037850.0	1a3tu0	Need help choosing key encryption method	Azurinelle	14	5	16	"I'm working on a java program that will encrypt/decrypt a .txt file as a way to refresh and improve on my java handling. I've seem to run into a slight issue, though. What I'd like the program to do is this:

* Run program
* Choose ""encrypt"" and the file to encrypt
* Randomly create parameters (numbers) that the algorithm will use to encrypt the message
* Encrypt the message and key(s) and store the products in one or more new .txt files

At another point in time the program is asked to decrypt the message:

* Run program
* Choose ""decrypt"" and file to decrypt
* Get ciphertext from .txt file along with any necessary keys
* Decrypt ciphertext and store message in a new .txt file

The issue here is that in order for the program to encrypt the message in the first place, the encryption method needs a public key that goes with a private key the decryption method has, but communication is only one-way, so that isn't possible. Is there a way around this? It seems that the only ways are to have the encryption method provide both the public and private keys to the cipher, or to lock the program into a single public/private key. Both of these methods seem extremely insecure, as the first we can assume would be intercepted, and the second would fail if another party obtained the program.

Again, I need to find a way to encrypt the random numbers that make the algorithm work. I was thinking of trying RSA, but I learned that java has an elliptical curve class, so I'd like to use that. The issue there is I can't find any examples of message encryption/decryption for ECC, so I don't understand how it works at the moment. I'd rather not have to use a symmetric key algorithm because it seems like it would also fail if someone obtained the program.

So, any suggestions? I have a feeling what I'm aiming for isn't possible, but figured I'd ask before throwing in the towel. And if anyone could explain or link me to a good ECC example, I'd appreciate it."	t5_2qq4h	True
1361403523.0	18x2gm	Undergrad Research Ideas (x-post from r/compsci)	noncify	14	5	4	"My liberal arts college offers the opportunity to participate in summer research with a professor, and I'm hoping to do so. However, I'm a freshman and will have taken only one CS class, so I need to make it clear that I have the knowledge, interest, and initiative necessary. I recently spoke with a professor, and he agreed to consider different ideas I presented.

I am familiar with a wide range of technologies, but I am still a beginner in all of them. The area that I have delved most deeply into is cryptography, and I'm familiar with hash functions, the basic workings of RSA, the use of hashes for password storage, different types of hash functions, their potential weaknesses, nonces, proof of work, etc. I also understand the very basics of algorithmic analysis and can write in Python and Java. I did a little Haskell over last summer, and while I don't remember many specifics it was very eye-opening and fun. More than anything else, I've found the Bitcoin network extremely interesting, and I understand a good deal of its protocol, how it works, and its potential significance. I would also be very open to anything involving the internet; I know less about its workings but I find it very intriguing.

Anyway, I'm obviously going to be working on this myself, but I'd love some suggestions about specific research topics that would be interesting and challenging, particularly those involving crypto and potentially Bitcoin. I have a few months before the program actually starts, so I could learn some necessary skills before the research actually began. I'm open to most ideas, and I'll be brainstorming myself (and posting my ideas here for comments and criticism). I would like to be able to get back to him ASAP, so I'll be moving quickly.

Thanks so much for reading, let me know any thoughts you have."	t5_2qq4h	True
1358839841.0	171m7s	How Retroshare's in-program forums work	whitefangs	13	4	1		t5_2qq4h	False
1352658444.0	130oio	Why Mozilla should join the CryptoParty - The H Open: News and Features	ehempel	12	3	0		t5_2qq4h	False
1347919286.0	101mqn	Quantum cryptography: yesterday, today, and tomorrow	EquanimousMind	11	0	0		t5_2qq4h	False
1347166664.0	zl9ab	I Forgot Your Password: Randomness Attacks Against PHP Applications	vestige	12	2	0		t5_2qq4h	False
1343357035.0	x86ny	How to securely use Elgamal encryption in libgcrypt? Cryptography - Stack Exchange	xor_rotate	14	5	0		t5_2qq4h	False
1343057770.0	x0prf	Redditor bought &amp; posted thousands of Steam keys. Can anyone find a pattern and crack the system?	food_bag	25	16	21	"[spreadsheet](https://docs.google.com/spreadsheet/lv?key=0Amf6aEJYxwQmdHE0VWU1cmhoYWh3Z2Nxbk9IY1NHTGc&amp;type=view&amp;gid=2&amp;f=true&amp;sortcolid=-1&amp;sortasc=true&amp;page=2&amp;rowsperpage=250)

[Original post](http://redd.it/wtot9)

[Funny aftermath](http://redd.it/x0a6b)

I post this only because so many kids were trying to cheat Steam by modifying used codes slightly in the vain hope the new code would give them a free game.

EDIT: ah forget it. Just thought it would be an interesting project. Getting accused of trying to steal Skyrim here."	t5_2qq4h	True
1340632865.0	vkla3	Get Ready For The Political Fight Against Encryption	williamshatnersvoice	14	3	3		t5_2qq4h	False
1339971591.0	v71hr	Hash algorithms - Under what conditions can a one to one mapping of input to output be expected?	londons_explorer	15	6	35	"If I take an arbitary length chunk of data and hash it to make a 256 bit hash, I can be certain that there are other arbitary length bits of data which share the same hash, simply due to the (edited) pidgeon hole principle.

If I take a 256 bit chunk of data and hash it, can I be certain there is no other 256 bit chunk of data which would produce the same hash?


To ask my question another way, if the length of the input to a hash function is the same as its output, is it a theoretically (although obviously not practical) invertible function?

Or to ask my question yet a third way, is there any 256 bit string which no 256 bit input will produce as output?

Is the answer true for all hash functions, some hash functions, or no hash functions?

**Edit**: Prehaps I should state my reason:  Basicly, If I do Hash(Hash(m)), do I have a higher chance of finding a collision for some other message m?  How about running the hash function a few thousand times?"	t5_2qq4h	True
1335634813.0	swzxo	Cloudfogger - Free File Encryption for Dropbox and the Cloud	SparxNet	15	5	12		t5_2qq4h	False
1334716281.0	sfby6	Cryptic geocache help needed	trucloves	13	5	8	"So i love searching for caches but there are just some puzzles that elude me. Those tend to be the ones that involve cryptology of some kind. 
I'm wondering if any Redditors might want to help me get some coordinates out of this jumbled mess? 

634274439233637363913291636271634362816
362323363733274814323527433637374439281
6363218132316381817332329163626342 

Somewhere in there lies a northing and a westing but it totally has me stumped. Even if you can point me in the right direction when it comes to solving this type of thing i'd be grateful. Thanks!

"	t5_2qq4h	True
1334168607.0	s4pq8	Zero Knowledge with Rubik's Cubes [PDF]	dgryski	10	3	1		t5_2qq4h	False
1328256894.0	p919c	Summary about the cryptanalysis of GMR-1 and GMR-2	mrpuppet	13	3	0		t5_2qq4h	False
1322596887.0	mtpdm	Is it possible to salt or encrypt a password which can then be used case insensitive?	post_break	12	3	17	"I started looking at a few websites and noticed a very important one I use daily is not case sensitive for the password. After 14 different attempts to login (using different case examples of my password) I started to wonder how they were storing my password. Can you salt or encrypt a password and then allow for case insensitive inputs to match the password? 

Or, and this would be terrible, is the password simply hosted somewhere in plain text? 

I've tried searching for this information online and everything I find refers to case sensitive, not insensitive. "	t5_2qq4h	True
1320709607.0	m44j1	How AUTH CRAM-MD5 works	susam	9	2	2		t5_2qq4h	False
1318512909.0	lasn2	Time-lock puzzles	gwern	9	0	4		t5_2qq4h	False
1316439935.0	kkgol	Request for comment: open-source project DMedia looking for feedback on their filestore hashing protocol	ajashton	9	1	13		t5_2qq4h	False
1311777919.0	j16uo	19th Century Origins of One-Time Pad: New York Times	eagleton	13	4	0		t5_2qq4h	False
1306707987.0	hn2de	Can the old UNIX crypto (circa 1992) be cracked?		12	2	30	"Okay, so I've got a bit of a dilemma here. There's this really old fortran utility for calculating solvent accessible surface area (it's for a research project on protein interactions) by the name of NACCESS. It was written circa 1992 and is pretty much the standard tool for this problem. Problem is, I don't have a copy of it, and the author requires you to **mail** him a signed ""confidentiality agreement"" (I kid you not) so that he'll email you the password to the encrypted tarball available on his site. It's from 1992, and I'm not even sure if the guy's *alive* anymore. So far I've got no response via email or phone.

Apparently he used the old UNIX crypt utility (DES hash) to encrypt his code, so I'd imagine there must be *some* way to crack such an old algorithm. Any help would be much appreciated."	t5_2qq4h	True
1297100935.0	fgyyg	Quantum Cryptography Is Not Picky, Physicists Prove	ellisto	9	1	0		t5_2qq4h	False
1296728127.0	fef6a	Shmoocon 2011 Crypto Challenge Pack	sanitybit	10	2	0		t5_2qq4h	False
1296447025.0	fc5tk	An Introduction to Differential Cryptanalysis	lookouttacks	10	2	2		t5_2qq4h	False
1294899473.0	f1eac	I'm disappointed by the lack of secret message in the /r/crypto logo		13	5	4		t5_2qq4h	True
1291304620.0	ef2hh	TRICL: A crypto library designed to resist timing attacks	gthank	13	3	0		t5_2qq4h	False
1290354180.0	e9i9l	Just for fun, try to crack this code. Hint: Always sanitize beforehand, just to be safe. (Word or Phrase) (reposted)	skeeto	12	4	17		t5_2qq4h	False
1289320105.0	e3izz	"""Open-Source Cryptographic Libraries and Embedded Platforms"" - are open source crypto libraries really secure?"	randombit	12	4	4		t5_2qq4h	False
1282166020.0	d2qtp	30 year old Crypto System Resists Quantum Attack	counterplex	12	1	1		t5_2qq4h	False
1263301140.0	aomv0	New related key attack breaks KASUMI (aka A5/3), the block cipher used in 3G phone crypto	randombit	11	2	3		t5_2qq4h	False
1250714389.0	9c7m2	deadSwap is an offline file sharing system where participants covertly pass a USB stick from one to another.	awoo	11	1	1		t5_2qq4h	False
1376386160.0	1k9oqa	Anyone know where I can find examples of round functions which take subkeys and are suitable for use in Feistel networks?	moscheles	10	1	12	"Anyone know where I can find examples (pseudocode) of round functions which take subkeys and are suitable for use in Feistel networks?

Pseudocode is preferred.  I want to see actual functions, not two-dozen pages of theorems about their ""properties"".   I understand f(sK,m) does not need to be invertible. Got it.  But what sorts of f()  are actually used in practice? "	t5_2qq4h	True
1376204050.0	1k4tmg	ZeroBin:paste-bin clone encrypted data in url (PHP script/no DB) using 256 bits AES	zmach1n3	12	4	2		t5_2qq4h	False
1375387780.0	1jimmt	Need to find comic explaining Kerckhoffs's principle	proliterati	9	1	4	"I am going to present about the topic ""Cryptographic Engineering"" in about a month. I have started preparation and I have two requests:

1. I remember reading a comic about 2 years ago that exactly explains Kerckhoffs's principle. It goes like a comparison before and after where in **before** - a bad guy shows a gun to the crypto nerd and ends up explaining the crypt in fear of life. Where as in the **after**, when a gun is pointed at him, he says the algo is in Wikipedia, but you can't do anything without the key. I found this one funny and drives the point home, but my one hour search couldn't find the exact one. By any chance, does any one have a link to this very comic? I want to include this in my presentation.

2. I have already started taking [this course](https://www.coursera.org/course/crypto) and started to enjoy it(doing lecture 9 right now). Also found [this blog](http://blog.cryptographyengineering.com/) which has a lot on the topic. I have more than enough to read, but I would like to find out and see if there are any recorded video presentations that I must see(I couldn't find any). Also, please advise me with anything that might be helpful to me in giving an effective presentation.

Thank you."	t5_2qq4h	True
1375219035.0	1jdjtk	Software obfuscation through crypto	euler_identity	10	2	12	"http://qz.com/109999/a-breakthrough-in-cryptography-could-thwart-a-favorite-attack-of-hackers/


http://newsroom.ucla.edu/portal/ucla/ucla-computer-scientists-develop-247527.aspx


http://eprint.iacr.org/2013/451


http://eprint.iacr.org/2013/451.pdf

Can we have this in a linux package sooner rather than later?"	t5_2qq4h	True
1372951652.0	1hmyik	The Use of Ring Signature to Enable Anonymous Usage of Services	jimktrains	11	1	3		t5_2qq4h	False
1372091509.0	1gz5yp	Milestones/What Next	Swordie	10	2	4	"Hello Cryptographers. I have recently become interested in cryptography. I picked up Applied Cryptography by Bruce Schneier and I want to know what to do next. 

The book has a lot of material and labels itself as a reference book. Is there a better way to get active in the field of crypto than reading that book cover to cover? What things should I try to do or milestones should I try to reach. If you have specialized, what are your specialties' milestones or projects to try out?

At the moment all of this is a hobby, but my last hobby turned into a 9-5 (web dev). I would like to learn how to fix real world problems.

Thanks!"	t5_2qq4h	True
1368594450.0	1ed6z8	Tool/Implementation : Y tokens where X tokens is enough to open secret. X &lt; Y	raaaaraaaa	15	7	9	"Is there any tool on the market or simple algorithm which allows you to create e.g. 5 tokens for 5 people and if it`s necessary 3 tokens together can open some secret ?

I can imagine some useful scenarios in company environment for this e.g. you lost your passwords so you can ask your coworker,your boss and e.g. your CEO to put tokens together and open crypto secret together... "	t5_2qq4h	True
1366277995.0	1cli6b	Feasibility of deciphering RC4 with partial known text	Docmandu	10	2	6	"I have a program that encrypts it's communication/packets with RC4. However each packet start the RC4 state from the start again. In addition some of the bytes in the packets are known since the packet size can be used to match some of the packets to a certain packet type.
Another issue is that the program doesn't skip some of the initial RC4 bytes, which I believe is an issue with RC4.

Now my understanding is, that this whole setup is a disaster, but how feasible is it to actually decipher this?! Or is the insecurity more of an academic nature?!"	t5_2qq4h	True
1365817709.0	1c8vki	Is there any (non bitcoin) value to be had from the computed cryptographs being solved by the botcoin system? Lots of computing cycles used. Any other side benefits to the crunching?	georedd	14	7	18	Is there any (non bitcoin) value to be had from the computed cryptographs being solved by the botcoin system? Lots of computing cycles used. Any other side benefits to the crunching?	t5_2qq4h	True
1364954765.0	1bk64u	Beginner question about modifying checksum protected files	crypto375	11	2	7	"I have a file that is a list of variables (represented by the letters A-P)
I have worked out what various parts of the file mean, and which variables they represent. but when i change a variable the file does not function with its program.

I noticed that when the program changes the values, it also changes the last 10 letters of the file, and i suspect that this is a hash checksum for the file.

Is there any way to modify the checksum to make the file work, when i change a variable? do i need to know which checksum was used and then generate a new checksum?

**thanks to anyone that can give advice**"	t5_2qq4h	True
1364000029.0	1au0q1	NetBSD - Bad RNG Bug	innoncent1	10	4	2		t5_2qq4h	False
1360653689.0	18d7gv	Good resources for learning about strong cryptography?		11	3	7	"Hey fellow Redditors, I was wondering if you could give me some insight on how to discover more about programming and computer science in general. My programming skills are weak and I know very little otherwise. Any books are appreciated. Thanks a ton!

EDIT: Spelling of insight; sorry, it was late and I'm an exhausted high school student. Thanks for all the help!"	t5_2qq4h	True
1359000618.0	1765sa	Estimating the number of unique passwords in the world	solardiz	12	4	1		t5_2qq4h	False
1358591292.0	16vd7i	AES-GCM - a 50,000 foot view	eQuiNoX___	9	2	1		t5_2qq4h	False
1358375339.0	16pmyc	A TrueCrypt container in unallocated partition space?	PHProx	13	3	17	"Say there is a windows partition and a linux partition on the drive. And in between maybe a few megabytes of unallocated space according to the partition table. And with the proper permissions/privileges those sectors could be modified directly (dd can do this, right?). So there would maybe be a descriptor text file holding a bunch of  integers that are the sector numbers, not necessarily in order on the drive, of the TC container. And so TC could use this space, hidden not in but outside of the filesystem.

Thoughts?"	t5_2qq4h	True
1356002078.0	155v3c	ElcomSoft announces Disk Decryptor and Distributed Password Recovery plugins support for descrypting BitLocker, PGP and TrueCrypt	snaky	12	5	5		t5_2qq4h	False
1354762334.0	14d1d2	Getting started with Sponges	Salusa	14	6	4	"The new Sha-3 algorithm (Keccak) is based on a sponge construction. This is the first time I've encountered it. They seem like an extremely useful primitive, and I've seen many lists of things they can be used for (Stream ciphers, Authenticated Encryption, Hash functions, etc.) but have found extremely little information on specifically *how* they are used in those constructions. (With the obvious exception of Hashes which is demonstrated with Keccak.)

I've read what I can find on Wikipedia, and I'm starting to work my way through all the papers posted on [The Sponge Functions Corner](http://sponge.noekeon.org/), but there doesn't seem much out there.

Can anyone direct me to good papers/constructions/algorithms/etc.? I really want to understand them well.

Thanks."	t5_2qq4h	True
1354473411.0	145r45	[elliptic curves, curve25519] Can someone please explain the significance of theorem 2.1?	lisper	11	2	2	"[Reposted from r/math]

I'm reading this paper:

http://cr.yp.to/ecdh/curve25519-20060209.pdf

and trying to understand the significance of theorem 2.1. I understand elliptic curves in general, and curve25519 in particular. What I don't understand is what theorem 2.1 has to do with anything. As far as I can tell the theorem says that if you take a point on the curve Q and perform a scalar-point multiplication by any integer n, then the result has a unique x-coordinate s. But 1) that seems tautological by the definition of scalar multiplication and 2) I don't see how that result matters in any way to anything that anyone would care about (like security). Does anyone here understand this theorem well enough to explain its significance to me? Thanks."	t5_2qq4h	True
1353068522.0	13an84	Stanford physicists and engineers take first step toward quantum cryptography	wazzzzah	17	10	3		t5_2qq4h	False
1350296965.0	11i7ur	Crypto-Gram: October 15, 2012	bananaskates	14	7	0		t5_2qq4h	False
1349194565.0	10tlyc	Code relating to AVR based True Random Number Generators	MidwestJackalope	8	0	5		t5_2qq4h	False
1349105016.0	10ri90	Would an online keyfile service provide plausible deniability?	bob_howard	10	4	15	"An Encrypted Container Manager that forces SSL to connect to a keyfile service (ie: https://keyfile.com) to download an image or randomly generated keyfile.

The web interface would have you upload a file and choose an ""expire if not accessed in X time"" option, be it 7 days or a month. You'd enter a custom file name and password to access the file later upon upload. A second method, assuming a compromised server, would be to encrypt the file before uploading and decrypt upon downloading similar to Firefox Sync.

The program frontend, in addition to offering an optional container passphrase dialog, would let you choose proxy options, the server, file name, and password.

The web service could also be done from the program, choosing the server and password to use to encrypt the file before uploading.

What are the potential vulnerabilities? Can files be detected/captured going downstream using SSL? Would they know it's a keyfile?"	t5_2qq4h	True
1347563658.0	zu4ti	Crypto party in San Diego	marklarledu	15	8	3	Anybody interested in a crypto party in San Diego? I don't see much activity going on [here](https://cryptoparty.org/wiki/San_Diego).	t5_2qq4h	True
1345829452.0	yriao	Crypto/security and programming languages	geleiademocoto	11	3	15	"Could someone help me with this? I'm looking for resources on the use of programming languages in the field of cryptology, system security, etc. 

Wikipedia says E was created for this purpose? I've seen that C is good for it somewhere, but then I just recently saw in a university paper that C is a bad language for security. I've also seen a link that was posted on reddit (maybe in this very subreddit) about Javascript and browser languages in general. 

Is there a good, trustworthy place where I can get this information? Basically I'm looking for the role of programming languages in security, and which languages are more appropriate or classically used for it. Thank you for your time."	t5_2qq4h	True
1345003521.0	y8t6q	Stronger cryptography based on elliptic curves.	thexavier	12	2	1		t5_2qq4h	False
1344957145.0	y7ej8	Links » Verifiable Logs: Solving The “Cryptocat Problem”	wtfomglolz	12	4	1		t5_2qq4h	False
1343668328.0	xee2z	Generating secure UUIDs?	bb-hood	14	6	17	"Hey /r/crypto,

A friend and I were discussing scenarios for unique id generation (neither of us are really familiar with it.)


For instance IDs for registration in an online game or a software-key registration system, the trick being that they're not ""easily guessable.""


I thought what might be a good idea would be to write a simple command-line program that takes in a range of numbers (a..b), and outputs a list of secure unique ids, the size of which being size=b-a.


Essentially what I'm thinking is for each number (a..b) on entry, feeding a block-cipher algorithm that number, taking the result and encoding that into a ""UUID.""


A few questions, since this seems to be kind of a simple procedure on the surface...


Does this seem feasible?
Is there anything I'm missing?


Really more than anything, I'm just trying to wrap my head around this, and I'd love to make this command-line program as a proof-of-concept.


**tl;dr: How do you write a 1-to-1 UUID generator?**"	t5_2qq4h	True
1340905260.0	vr1ge	Ready for a design challenge ? 	prophetical_meme	14	6	18	"Well, a friend and I have a quite ambitious project, and as I'm not a crypto master, some expert point of view would be much welcome.

We want to build a file-sharing, acentric and friend-to-friend network. And world-scale. Who said too ambitious ? Well, if you don't try, you surely won't succeed. But be sure that we have already a good pile of free-software code, it's not just a fantasy.

So, we want this network as follow:

* Every node is the same as the next one, and we use a [Distributed Hash Table](http://en.wikipedia.org/wiki/Distributed_hash_table) to organize the network.
* Each node has a random ID (a key in the DHT) that identify him in the network
* The DHT provide a routing algorithm, as well as the storage of key/values collection

For the file sharing part:

* Each file is divided in chunk, and downloadable by everyone via its key in the DHT (hash of the chunk), and thus we have a [content-addressable storage](http://en.wikipedia.org/wiki/Content-addressable_storage).
* Each chunk is encrypted a private crypto key of the original owner.
* Each node can transmit the needed key to decrypt chunks if the user has decided to allow that.
* Each user has a unique ID, unforgeable, that identify him in the network. This ID could be used on multiple node.
* Each user can share files with different scope (private, targeted, public). This scope is defined for a file or a set of file.
* Private sharing mean only node with the same user ID can decrypt the file (private data replication ...)
* Targeted sharing mean that the owner allow a set of specific user ID to access the file (holiday picture sharing, organization private content ...)
* Public sharing mean that everyone can access the file (free content publication, art content, ...)
* At anytime, chunk or file as a whole are signed by the original owner (so not really a warez network).

So, the big question here, is how the crypto part should be done. More specifically:

* How to identify a user ?
* How to encrypt/sign chunk ? A set of asymmetric key for each file/share ?
* How to exchange key between node without leaking ?

What do you think ?"	t5_2qq4h	True
1340340505.0	vf70x	Famous cryptography competitions and conferences in the states?	stealfromtherich	18	10	2	California pertains to me but I was wondering if there were some Major hash and PW cracking competitions that a beginner like me can go around and absorb some info	t5_2qq4h	True
1340076845.0	v9ci0	Paper Enigma	TroublePanic	11	2	0		t5_2qq4h	False
1335925397.0	t2lvq	CryptoPad - web based encrypted note tool (optionally) using HTML5 Local Storage		14	6	28		t5_2qq4h	False
1335845194.0	t11d0	Ironkey flashdrive: For the ultra paranoid	Jedimastert	24	17	34		t5_2qq4h	False
1333975561.0	s0p9a	PGP Portable set up?	Danzotron	12	4	12	"Hi guys

I am looking to set up a portable PGP solution that I can access from my dropbox. So far I've been using Thunderbird with enigmail but would like a standalone app kinda like GPG4WIN if anyone has used that. Does anyone have any ideas?"	t5_2qq4h	True
1332170051.0	r3ipx	Some questions on a paper about Security Flaws &amp; CBC Padding	xrthrowaway	9	2	9	"So I've been reading this paper, [Security Flaws Induced by CBC Padding](http://lasecwww.epfl.ch/php_code/publications/search.php?ref=Vau02a) and I have a few questions. I contacted the author of the paper but he did not respond.

This is my first time reading a crypto paper. I am more into other types of security (web mostly) so I was not familiar with all the terminology etc. Sorry if some of the questions come off as retarded, crypto is kind of a whole different language to me.

Here are the questions I asked the author:

1. This attack makes it possible to figure out the plaintext version of CBC mode encrypted text. Does this not mean all CBC mode ciphertext (at least the ciphertexts using the same padding) can be decrypted? Why bother using CBC mode at all if an attack like this exists?

2. C^-1(y) is the decryption function, correct?

3. Why does knowing the padding help at all? I don't understand how knowing whether or not we have a valid padding can affect whether or not we can retrieve plaintext.

4. Because we are looking at the blocks which have padding, this means we can only employ Last Word Oracle on the last block of the block sequence?

5. In section 3.1 (Last Word Oracle) you mention that the most likely valid padding is the one which ends with 1. What makes this so?

6. In section 3 you define a function, the Oracle. What does an Oracle function look like? I am no expert in crypto, but it sounds unlikely that there would be a function that returns exactly 1 or 0 if the padding is valid.

7. In 3.2, you make the assumption that we already managed to get aj ... ab. How is this possible when only Last Word Oracle can only retrieve ab for us?


If anyone could answer literally any one of these questions it would make things a lot better for me. Thanks!"	t5_2qq4h	True
1329346619.0	pre47	Needles in haystacks: shared factors among many large composite numbers	dgryski	11	1	0		t5_2qq4h	False
1328299356.0	p9obz	Mounting a TrueCrypt volume at startup from using a completely obfuscated method	anonqwerty	9	2	16	"I all

I am helping out a friend in a politically opressed country.

He needs to have files *HIDDEN* and there must be *NO CLUES* as to that the machine has a true crypt encrypted drive installed.


Therefore I have encrypted an entire drive and mount it through a .bat script.

This is more a security through obscurity and not good enough.
The first thing I would do as an agent of the government would be to search for truecrypt executables as a verification that Truecrypt is being used.

What I have done though is to rename the executable and hide it amongst other files.
The signature could still be found though and I don't feel perfectly safe with this tactic either.

But the REAL issue is how to hide the password from the .bat script. I need some suggestions
on how to code a badass Windows shell, powershell or bash script that completely obfuscates and
obscures the mounting procedure.

The drives are allready in place, and at the moment, they are empty.

I have also implemented a FAIL SAFE which will delete the drive if it is not receiving an SMS
through a php script every 24 hours.

The last thing I have thought about is mounting the drive in a virtual machine which completely obfuscates the process for any investigator. It would cause a hell'uf'a lot of overhead tho."	t5_2qq4h	True
1327568420.0	oxedf	The IACR's Youtube Channel -- presentations from IACR conferences	dgryski	8	0	0		t5_2qq4h	False
1321023245.0	m8pq9	A very simple SHA1-HMAC token system, did I make any mistakes?	tecywiz121	11	3	15		t5_2qq4h	False
1319739601.0	lr80h	Need some tips on a password generation scheme	caligari87	8	2	15	"Hopefully I'm in the right subreddit, if not I can go elsewhere.

I've been using some poor password habits lately, and I decided it's time to kick them, but I have multiple sites/services I need to use and don't want to remember/write down some random hash for each one

Ideally, what I'd like is to create a password ""cipher"" that I can use by hand to recover any of my various passwords. I'm looking for the following criteria:

* Strong. I'm aiming for the final password to have 8-14 characters, preferably on the longer (but not too long) side. Symbols, letters, numbers, etc, with any exceptions of my choosing (i.e. no # or $, if desired)

* Paper solvable. In case I forget a password, I'd want to be able to pull out a pencil and paper, and maybe a wallet card with memory prompts for the rules, and generate the password from the known data (my key, the date, the service I'm using, work or personal, etc)

* Keyed. I'd like to use a main keyphrase or number to encrypt the password, something I can change less regularly than a date, for ease of decoding.

* Cycling. Some of my passwords expire, others don't, but still need regular changing. Ideally, the date/month could work as a secondary key, so the main key can stay the same for longer (easier for my brain)

I hope that all makes sense. Hopefully, I'd like to find some formula or technique beyond simple character substitution, some kind of hand-solvable hash encryption that I can do on paper or in my head. Any thoughts?"	t5_2qq4h	True
1318278182.0	l7g4f	MIFARE DESFire (MF3ICD40) Broken by Differential Power Analysis Attack	sanitybit	10	2	4		t5_2qq4h	False
1305740564.0	hecuj	CurveCP committed to Google Chrome repo (a work in progress).	self	11	2	2		t5_2qq4h	False
1296034996.0	f9a1u	Breaking LFSR-based pseudo-random number generators	sanitybit	10	1	1		t5_2qq4h	False
1293764708.0	etz6m	What would you like to see /r/crypto cover?	phyzome	9	1	10	"We've never had a clear charter beyond ""crypto and the sort of stuff"" -- the result is that submissions are all over the place, from best practices in secure application design to analysis of new cryptosystems. There is a lack of discussion of analysis of modern cryptographic systems, though, which [has been bothering some users](http://www.reddit.com/r/crypto/comments/et7d7/is_there_any_boardforumsubreddit_for_the_serious/). (Check out the comments there for some interesting discussions that led to this post.) So, some questions:

* What kind of content would you like to see here? For example, explanations of the basic math, news of novel side-channel attacks, results of crypto algorithm competitions.
* Should we consider splitting into multiple subreddits? I see that sanitybit is a moderator on the unused /r/cryptography subreddit, and there are other good names available. We could probably get more users over from /r/math if there aren't enough users for a fork.
* What are some good links I could put in the sidebar for beginners? I'm not actually knowledgeable in crypto theory, I just keep out the spam and edit the sidebar.
* Any other suggestions?

At this point, we probably don't want to advertise the subreddit too much -- we have a better chance of setting a community tone while the subreddit is small. So, here's our chance."	t5_2qq4h	True
1292629199.0	eno4z	Tap code - a way to encode messages, letter by letter, in a simple way and transmit it using a series of tap sounds		13	4	4		t5_2qq4h	False
1290774351.0	ec1a0	A brief history on the withdrawal of the A5/2 ciphering algorithm in GSM	sanitybit	10	1	0		t5_2qq4h	False
1283380695.0	d8f59	Wanted: Skein Hardware Help	Brovvnout	9	1	0		t5_2qq4h	False
1279679677.0	crvgf	TrueCrypt 7.0 supports hardware-accelerated AES	justanotherham	8	0	5		t5_2qq4h	False
1272528567.0	bxo2d	Don’t Use Office RC4 Encryption. Really. Just don’t do it.	cavedave	11	2	4		t5_2qq4h	False
1255703864.0	9upy8	The Alice and Bob After Dinner Speech - a five minute summary of coding theory	B-Con	8	1	0		t5_2qq4h	False
1246109294.0	8w6li	On Google and GMail and HTTPS	johnlunney	9	0	1		t5_2qq4h	False
1241117803.0	8gu79	I want to dive into learning stuff about cryptography, where is a good, online place to start?		8	2	10		t5_2qq4h	True
1376508134.0	1kd93r	Feedback on my deterministic password generator?	wargotad	10	2	24	"Hello everyone. I have developed a small password generator and I would love to get some feedback on it. The code (in Haskell) is available [on GitHub](https://github.com/redelmann/scat). A minimal Python port is [available on pastebin](http://pastebin.com/TxDRVDYJ) for those who would not be familiar with Haskell.

I am terribly lazy and until recently used the same password almost everywhere. For this reason, I decided to create a small utility to generate a different password for each website I use.

The idea is to use a single password, and some code you keep on a hardware key, to generate all your passwords. The name of the service you want to generate a password for is also used, as salt, so that passwords are different for each service. The code kept on the hardware key should be at least 128 bits.

The software uses Scrypt to generate a hash, with parameters N=2^14, r=8 and p=50. Then, each time a choice between n alternatives has to be taken as part of the password generation phase, the result (between 0 and n - 1) is the hash modulo n, and the remaining hash is the result of the long division by n.

The default generated passwords have length 18, and contain 2-5 symbols, 2-5 digits, and 2-5 upper case letters, the rest being lower case letters. This leads to an entropy of about 115 bits. 

The program allows also the generation of different forms of passwords: PIN code of any length, pattern lock for android, pass phrases, etc...

Compared to other solutions, one advantage of this system would be that, in the case the key chain containing all your passwords is lost, you can re-generate the exact same passwords again, provided you still remember your master keyword and still have access to your hardware key. An other advantage would be the different password schemas available, which allow to produce the exact format a website require.

I have two main points on which I'd like to have your comments:

First of all, are the passwords generated by the program strong enough?

And, maybe more importantly, the question would be to know if this scheme would still be secure if an attacker gets access to possibly many of the generated passwords (as well has the service name of course).

As I said, I'm welcome any remarks you might have.

Thank you,

Romain"	t5_2qq4h	True
1373049369.0	1hpdas	clique vs hamilton question	pint	7	0	3	one ZKP involves a secret hamiltonian cycle in a large graph. i'm curious about the choice of hamiltonian cycles as opposed to for example cliques. would a clique of at least the given size be just as good as a hamiltonian cycle of the given size? i'm aware that finding it is in EXP, so it seems pretty good. but are there other, cryptographically or practically relevant differences?	t5_2qq4h	True
1372956379.0	1hn3yb	Is the following cryptographical system possible?	tea-earl-grey-hot	10	5	18	"I generate an arbitrary number of values x_1, x_2, x_3, ..


I give every person in a group a unique x.


Next I'm blindfolded.


One person tells me some value based on his x, and from it can deduce that he is in the group. But I cannot deduce which x_i was used, so I cannot deduce who I'm actually talking to. 


Edit: It seems I forgot an important part: It should be possible to only use each value of x once (so I cannot talk to the same guy twice with the same x, and if two guys share an x I should be able to detect it)."	t5_2qq4h	True
1370799418.0	1fzo3u	DJB's NaCl in Pure Java?	TiltedPlacitan	9	3	3	"Hi.  I've been toying around with DJB's NaCl crypto lib, and I very much like the speed.  I'm considering an application in Java.  There is a Pure Java implementation of a subset of NaCl's public key crypto\_box\_ ...() methods on GitHub:

https://github.com/neilalexander/jnacl

...but it lacks keypair generation.  I'm wondering if anyone knows about or would want to collaborate to produce a pure Java version of crypto_box_keypair().

CHEERS"	t5_2qq4h	True
1369773322.0	1f801p	Show Reddit: Linear Cryptanalysis Implementation in Ruby	keithgould	9	2	2		t5_2qq4h	False
1369232499.0	1eu2jl	SHA-3(Keccak) reference documentation for a beginner?	ftwnt	14	5	9	I'm looking for some reference documentation for SHA-3(Keccak). For our computer engineering final design project involves a SHA-3 implementation on an FPGA but the crypto course isn't offered until next semester. Does any know any resource where I can start to build up to understand SHA-3?	t5_2qq4h	True
1367443728.0	1diau8	Home brew crypto algorithms - Any merits for security or privacy?	captainskybeard	17	8	39	"Ok I know no amateur cryptographer will never produce something that will stand up to the same scrutiny that established cryptographic algorithms do. However, do you think there is any use for home brew crypto algorithms? I mean, security through obscurity isn't a great practice but doesn't it *help*? What if you use it in conjunction with conventional encryption? 

I wrote my own encryption scheme out of boredom. Without going into too many details, here is how it works:

-User types a message setting plaintext

-User selects a file, the larger and more random the better. Image files greatly preferred do to relative randomness

-Program inventories the byte offset of every byte present in the file. So for example for every time 0x24 appears, I have a table telling me all 20,000 times (or whatever) it shows up, along with an offset.

-MD5 Hash is taken of file

-Hash used as a seed to produce a cypher map, remapping all characters to an alternate byte

-The program iterates through the plaintext (which was just translated via the cypher map), and chooses one of the offsets at random from the list of offsets for the matching byte.

-When its all finished, it uses the md5 hash as a xor key to produce the final cyphertext.

Decryption is a reverse of the process.

Basically, the image file becomes the key. It should be resistant to statistical analysis since there will be a huge amount off possible offsets and only a small amount of plaintext using it. Doesn't matter which offset is chosen it will still decrypt since they all map to the same byte. Notice i said resistant - with small enough key file and big enough plaintext statistical attacks become possible and eventually easy.

XORing with the md5 prevents having a partial key file from working.

I am not asking for someone to break/analyze my system, just as an example of a homebrew algorithm as a context to my initial question.

My opinion is that in a scenario where someone is using a super computer to brute force something, it would sure throw a monkey in the gears if they had to break from established protocol to have someone do a custom analysis of your code. It doesn't take any effort, though it takes time, to take an encrypted file and run it through a super-computer if you know the algorithm and are just missing the key. "	t5_2qq4h	True
1366586004.0	1cttks	Is there a programming language that natively support finite field arithmetic?	hyh123	11	6	12	"I wonder if there is some language that natively support finite field arithmetic.

Say there is an environment variable, namely the `characteristic` of the field, so that when the charateristic is set to be *p*, all operation of integers are modulo *p*. What I want is this should be support at a very basic level, even down to assembly code or hardware.

Is there one?"	t5_2qq4h	True
1365951945.0	1cbsps	I encrypted a message and stored it as a txt file. I have a question about decrypting it. Details inside	iammagicmike	11	4	14	"I've been able to successfully use GPG4win but I'm afraid I'm still a little new to the party.  I'm trying to decrypt a message that I encrypted with my own public key.  I am very new to this but I am not only teaching myself, but I'm encouraging my friends and family to learn as well.  Please review this issue below.

1. I installed GPG4win and created my passphrase/public key
2. I typed a text message and encrypted with my public key (using GPA)
3. I saved the encrypted text (see below) to a text file
4. Months later, my computer crashes, but **I still remember my passphrase**

So here I am today, I need to decrypt this message but I don't know how to do so.  I have the passphrase but I'm afraid I've only ever decrypted a message using GPA.  

It would mean a lot to me if someone could tell me if/how I could decrypt this message

&gt;-----BEGIN PGP MESSAGE-----
Version: GnuPG v2.0.17 (MingW32)

&gt;hQEMA70CrJRLj3puAQf+Ob+42IXUmYjAn39YHNS/X1NiGB/Zw9vIHsl2ttuIjNAF
YbzwCtKhfOjFNBcWCFypYS3Spp9NZcRNPw7Li
1SOrr2boJ8MKWE4ormzBE7Wn5oWB6UWNTSiZTqN8SXBB+YpzR3J4Yw==
=n3Wq
-----END PGP MESSAGE-----"	t5_2qq4h	True
1365114013.0	1boxkg	Breaking ciphers and certainty	z917183	20	14	27	"I have been exploring an encryption algorithm - and now I want to know if it could be considered 'robust'. Best case scenario, I sell it to the NSA or CIA or something similar.
But I also have very little idea of where to post or send samples for valuation. I have already tucked a large sample onto my Facebook page, but with no apparent interest raised.
It also raised a question for me:
How large a sample would be needed in order to be 95% certain of being able to break an encryption method? And - if this is not the best audience for such a question - who or where would be?"	t5_2qq4h	True
1363717508.0	1alvp8	How to calculate effective key strength after known plaintext?	ang3c0	10	2	2	"Hi /r/crypto, sorry if this is a really basic, but how do I go about calculating ""effective"" key strength after the following attack?

Given: AES ECB 128 bit (16 byte block size).
Known: Plain text of all zeros encrypts to xxxxxx (one block).

How much does this weaken the key strength? I've been looking for good articles/papers on this but must not be using the correct terms..

Thanks

Edit: I don't have full ability to write the plaintext before encryption, but certain pieces I can (half a block, at best).

Edit 2: Doing a little more reading, it sounds like this is not possible with AES. Can someone verify this?"	t5_2qq4h	True
1362167058.0	19hah9	Open Source Project Prepackages Kim Dotcom’s Security	DanielLarsson75	10	4	1		t5_2qq4h	False
1360709216.0	18em8b	Can this be done?	Hyperon	12	4	30	"Can someone with good knowledge of cs and crypto tell me if this can be done?

There is a set of computing nodes n1,n2,...
Each collects some ""unique"" user identifier, such as an IPv4 address. They are allowed to do whatever they want with the addresses (this is where the question lies).
Then, these lists are all given to a trusted third party.
This third party must be able to count the number of unique ip addresses among all these lists, but without being able to tell whether a given address is in a given list.

Can this be done?

Other details: The nodes cannot communicate with each other, only with the third party (meant to do the counting).
An attacker has the ability to pretend to be a node, but not to be the trusted third party. (But the latter can be broken into).

P.S. Sorry for unusual choice of words. I'm not familiar with cs lingo."	t5_2qq4h	True
1358369874.0	16pfq7	Secure Message Transmission with Small Public Discussion	helzar42	10	3	1		t5_2qq4h	False
1357575295.0	164i1p	An update to my blog from last week: a full walkthrough of a padding oracle attack	iagox86	9	2	0		t5_2qq4h	False
1357114749.0	15tfly	Crypto After Advances In Neuroscience?	ja524309	11	5	15	"This might sound silly, but I'm very curious whether or not people have written/thought about what direction crypto will take once neuroscience has developed to the point that we are able to effectively ""scan"" an individual's brain and recover their password. Is, ultimately, *physical security* the only security we can manage in light of this possibility?"	t5_2qq4h	True
1356694324.0	15ki2i	Cryptography and Security in Retroshare	whitefangs	12	5	0		t5_2qq4h	False
1355149010.0	14lrk6	Mailenvelope openpgp webmail browser extension.  Has anyone done a strength audit?	mnp	11	6	14		t5_2qq4h	False
1354440361.0	14594c	Practical password salting usage question	QoSKoala	9	2	10	"I'm exploring password hashes with salts by designing a routine myself from scratch, with the goal of understanding implementation concerns in such a system.

I have a couple specific question on the usage of the salt from a cryptographic security standpoint.

Let's take a simplified example where I determine my salt will be 8 alpha-numeric, case-sensitive printable characters long, providing 62^8, or ~97 trillion salt combinations.

In order to increase generation time, a high number of iterations (say, 5000, depending on hash) through the hash function is selected.

Question 1: Each iteration, is there cryptographic significance, from the standpoint of resisting a mathematical break of the scheme, to how the salt and password are combined at each step of the iteration? Is it enough to simply concatenate the prior hash value (last-iteration-hash) along with the salt and password? The goal, as I understand a salt, isn't to improve entropy of the user's password, but simply to perturb the output in one of 97 trillion options (using this example's features.)

Question 2: Looking at my prototype scheme, I observed that a specific alpha-numeric salt (let's just call the ""random"" 8-char salt ""Password"" for obviousness) combined with a weak password (let's use ""x"") is the same as hashing an un-salted password ""Passwordx"" if we just append them. Is it considered cryptographically helpful to combat this by altering appending and pre-appending the salt? Consider the following 2 psudo-code examples for an idea on what I mean:

scheme 1:

    For (( $iteration=1; $iteration &lt; 5000; $iteration++ ))
        $hash=HashingFunction($hash + $salt + $password)
    Done

scheme 2:

    For (( $iteration=1; $iteration &lt; 5000; $iteration++ ))
        If $iteration % 2 = 0  // Modulo 2 alternates the 2 ordering choices
            $string=$salt + $password
        Else
            $string=$password + $salt
        EndIf
        $hash=HashingFunction($hash + $string)
    Done"	t5_2qq4h	True
1345575772.0	yleqh	The 16th workshop on Elliptic Curve Cryptography, ECC 2012.	el_lley	10	3	0		t5_2qq4h	False
1344974501.0	y7y2f	Protect personal data from the website operator	ThisWillDoIt	9	2	13	"Hi guys,

I host a website for a little community and secured it as good as I can against attacks from outsiders.
But what can I do to protect the private data of my users against somebody who has access to the database? Like a guy at the server hosting company or an drunken evil me?

I searched for some kind of public private key encryption implemented with JavaScript, but the only implementations i could finde were mostly outdated and written by a privat person, nothing official.

Or is there a better way for what I am trying?
Thanks for any hint :-)"	t5_2qq4h	True
1342633756.0	wrqe6	question about i2p	antibubbles	9	2	3	is [this](http://www.i2p2.de/) peer reviewed and totally trustable? 	t5_2qq4h	True
1337347708.0	tt86a	Talkin' 'bout my Pseudo Random Number Generation...	heeb	7	0	24	"We all know generating truly random numbers / bits using a deterministic device is impossible (von Neumann: ""Any one who considers arithmetical methods of producing random digits is, of course, in a state of sin."").

However, would *two* (or more), ""unconnected"" deterministic machines still be deterministic? With ""unconnected"" I mean: they can not see, nor influence, (at least part of) each other's state. They can, however, both send information to some third (fourth, fifth…) device.

Most people and businesses nowadays have multiple PCs in their homes / on their premises.

My family and I have, lemme see, 1, 2, 3, 4, 5 laptops. They all have a software firewall installed, so they can only partly ""see"" each other (basically just the folders I have shared).

If each of these had some (deterministic) pseudo random number generation service running, could that be used to generate true (non-deterministic) random numbers?

In other words: does the fact that said machines can only see each other partly, make them mutually non-deterministic? Or mutually non-deterministic ""enough"" to generate truly random numbers?"	t5_2qq4h	True
1336711197.0	thpyd	Encrypt then MAC vs MAC then encrypt (vs MAC and encrypt) - A nice summary	B-Con	10	2	2		t5_2qq4h	False
1334698354.0	sevc8	"Noob Question: ""Bread Crumb Trail?"""	010011000111	10	3	4	"I have no experience in cryptography, so please be nice if this is a stupid question. 

Suppose I had a machine that was attempting to guess keys, not by a brute-force method but with something a little more ""intelligent"" such that when it guessed a key it could determine that it was ""close"" by looking at the decrypted text. Is this possible?  I mean, is it the case with modern encryption methods that only the *exact* key will produce a perfectly non-random decrypted text? Are there any ways to look at the decrypted text and determine that the key is close? By discovering how to analyze the decrypted text for hints that you are on the right track (bread crumb trail), I imagine the process of decryption could be speed up considerably. It seems like the strength of an encryption system is directly related to this property."	t5_2qq4h	True
1334255687.0	s6kce	Getting Started was great... but I need advice.	GilTheARM	9	4	11	"I seem to be, at least mentally, ""stuck"" with what and where I want to go.  I can understand crypto work, math, and methods - but am at a loss at how to best apply that to my life.

None of my family/friends use crypto on a day-to-day basis, nobody really would need to, or ""feel"" they need to.

I do most of my personal work at home, and some at work.  I am a software programmer.  Sometimes I work at home, and anything I do I RDP anyway, into the machines at work.

Why do I need to encrypt personal things?  Why do I need to keep a keyring?  And - where - and who really uses them anyway?

These are just a few thoughts that bounce around my head when I think about carrying around a USB key with say gpg4usb on it, et atl.  

As a tool to keep my wits about me and my brain sharp, I like to tinker with the Solitaire Ciphers, etc.  But that's not really worth anything.

What do you do?  Where do you encrypt?  Do you encrypt grocery lists, tax documents, things like that?

If I think hard enough, yes, I *do* need to encrypt things.  But, where to start?  My machine is already a couple of years old, which means it has *tons* of data on it. 

Backup -&gt; whole disk encryption -&gt; then restore data and destroy the backup media?  Maybe.  

Truecrypt is awesome.  I love that stuff.  

Just looking for helpful motivating advice, if any exists.

Thanks!"	t5_2qq4h	True
1333654673.0	rv3ex	Is MSCHAPv2 really as bad as it sounds?	somehacker	10	2	4	"This was posted yesterday, and it gave me quite a scare:
http://lists.randombit.net/pipermail/cryptography/2012-April/002729.html

Saw that it referenced Scheiner, so I read his article on it, and realized that his article is dated 1999!
http://www.schneier.com/paper-pptpv2.html

Have the security vulnerabilities in MSCHAP been patched, or are they systemic flaws that cannot be solved? "	t5_2qq4h	True
1331030845.0	qk0je	How to implement public key algorithm effectievely in C	jestinjoy	8	1	17	"He folks.

I need your advice on this. I need to encrypt a file and decrypt it at the sender side. What would be the best way of doing that. My algorithm is similar to RSA."	t5_2qq4h	True
1322705158.0	mvjfm	Code example of the Blowfish algorithm?	nonethewiser	8	2	8	I'm trying to get into crypto, and while I'm having a relatively easy time with the math behind the encryption the actual code is a leap I haven't been able to make. Is there anywhere where I can find code examples of a handmade blowfish or RSA implementation? The examples can be pretty language independent, I'm just very much a learn-by-example type and I'm having trouble properly implementing the algorithm in code.	t5_2qq4h	True
1322139084.0	mnuk2	Simple MAC by encrypting IV as last block in CBC	kefeer	7	1	7	"I am encrypting datagrams with AES in CBC mode so i am already send IV with each datagram. Now i want to add message authentication (which is usually done with HMAC or AEAD).

But i really wonder what's the problem with simply encrypting IV as a last block (CBCed) and comparing it with actual IV on decryption?"	t5_2qq4h	True
1321910670.0	mklo7	Nice how-to on factoring RSA512	wtfomglolz	12	4	3		t5_2qq4h	False
1313629192.0	jm80c	Looking for advice on learning	DasWood	9	2	3	"I have a CS background but did very well in my cryptography class, however I must say doing what we did in such a short time meant skipping out on a lot. We didn't get to cover very many ciphers or many things in general skipping huge sections of the books.

I was thinking of implementing some older ciphers then implement a modern exploitation method. For example, we didn't cover stream ciphers any. Si I was thinking of implementing RC4/Cipher Saber due to it's simplicity and it's known weaknesses and then trying to crack it. 


Is this the right way to try to learn more and gain more crypto experience?"	t5_2qq4h	True
1301767141.0	gh6xr	FBI Overwhelmed With 'Solutions' To Encrypted Note; Now Urging Potential Code-breakers To Send Their Tips Via Mail Rather Than Sending Emails Or Flooding Phone Lines	scientologist2	11	6	5		t5_2qq4h	False
1294348391.0	exh4g	"Going to the CES?  Swiss Army is offering a contest to ""Crack the Code"".  $250k prize"	y3n0	8	3	5		t5_2qq4h	False
1283352348.0	d87ow	Skein stays strong in 2nd round of SHA-3 competition.	B-Con	11	4	3		t5_2qq4h	False
1278195784.0	clqdr	The Chaocipher revealed! | Cipher Mysteries	pbewig	9	3	4		t5_2qq4h	False
1276274713.0	cdzzo	Hash-based Digital Signature Schemes: An overview of the literature plus new optimizations [pdf]	randombit	9	2	1		t5_2qq4h	False
1274958435.0	c8mr6	Apple Lies About iPhone Encryption?	aviewanew	10	3	1		t5_2qq4h	False
1274239185.0	c5ryc	Interesting: a plausible way to crack book ciphers (using Markov chains)?  An attempt being made on the Beale cipher... anyone care to join the hunt for 40 mill?	temzlorck	9	0	1		t5_2qq4h	False
1264675278.0	av663	Two Centuries On, a Cryptologist Cracks a Presidential Code	DrJulianBashir	10	3	2		t5_2qq4h	False
1256154869.0	9we0c	What Pink Floyd and military cryptography have in common?	kakodane	7	0	0		t5_2qq4h	False
1249334770.0	976z4	Dear crypto subreddit, do you have any suggestions for fun algorithms to implement for a cryptography course?		8	1	6	"I'm currently taking a computer security course where I was more or less given ten topics on which to write reports about. The two most interesting to me are cryptography and cryptanalysis, which I've been meaning to learn about for a while.

Instead of merely writing up a report, I was thinking about also coding an algorithm or two to get a hands-on feel for the more practical issues. Being new to the field, I have no idea how much work any cryptology algorithm would imply. Do you have any recommendations for some that would take at most a few hours to implement but still provide some educational value?

Along a similar line, what would be interesting recent/advanced developments to cover? So far I'm planning on covering (on top of the basics) homomorphic encryption, quantum cryptography, zero-knowledge proofs/authentification and SHA-3.
"	t5_2qq4h	True
1247587102.0	913ss	German Health Insurance Certificate Authority Loses Secret Key	alexs	7	0	0		t5_2qq4h	False
1245881175.0	8vdax	Buy a Coding Cryptex built by the Mythbusters	cavedave	7	0	0		t5_2qq4h	False
1245322619.0	8tjzu	Ever Better Cryptanalytic Results Against SHA-1	lmaurits	9	2	0		t5_2qq4h	False
1245245609.0	8t9v5	General Homomorphic Encryption - solves one of the oldest open problems in cryptography by means of a self-embedding technique reminiscent of Godel's theorem	erisson	8	2	5		t5_2qq4h	False
1244764201.0	8rtdh	Image-based steganography using the image's histogram	johnlunney	8	0	1		t5_2qq4h	False
1375974057.0	1jyiso	SHA256 of multiple SHA256 of a file (cover combined 100% bytes) as unique as SHA256 of the whole file in once?	ThisWillDoIt	10	5	26	"Hi,
I want to get the SHA256 of a file for some deduplication.  
Because I get the file in chunks with quite a pause inbetween I can't run the SHA256 algorithm over the total file.  


I came up with the idea of hashing each chunk on it's own and at the end create the hash of all partial hashes. Is this final hash as unique as it would be if I hashed the file at once?  


Thanks."	t5_2qq4h	True
1373297384.0	1hv9r8	Preventing Unknown key share attacks in the Station to Station protocol (x-post /r/cryptography)	Klathmon	7	1	0		t5_2qq4h	False
1372341842.0	1h6fl1	RC4 in TLS is broken: now what?	whitefangs	13	7	1		t5_2qq4h	False
1372214875.0	1h2zqk	Apps running in locked (encrypted) iOS	kotor610	8	0	3	"If iOS has hardware encryption how are apps still able to function while the operating system is encrypted. Do these apps run exclusively in ram, and so by nature aren't encrypted?

Note: I use iOS because I am more familiar with it than android."	t5_2qq4h	True
1370389752.0	1foqf0	CryptoParty.org is suspended due to spam?	Julian702	10	3	13	What happened? Is it going to come back?	t5_2qq4h	True
1369167348.0	1esavr	Cracking SHA256 with several relaxations: can it ever become feasible?	gmiwenht	11	6	14	"I am thinking of class project for a cryptography class and I was hoping to bounce some ideas off you guys. Here is a simple thought experiment. We know that finding a message with a particular SHA256 hash is infeasible. But how much can we relax the problem before it becomes (somewhat) feasible?

For example, let's say we have an unknown 100-character message x = [x1 x2 ... x100] that is hashed to produce a 64-character hash y. We know that we cannot get x from y.

But what about if we relax the problem as follows:

1. We know half of the characters in x (non-contiguous). For example we know all the even characters x2, x4, ... x100.

2. We only want to find a single character in x. For example, we only want to know x20. (1 also applies)

3. We only want to know if a single character in x matches a certain range of values. For example, we only want to know if x20 is a letter or a digit. (1,2 also apply)

4. We only want to get a probabilistic answer. For example, we only want to know if x20 is a letter or a digit with p &gt; 0.75. (1,2,3 also apply)

Would any of these relaxations reduce the complexity of the problem? 

"	t5_2qq4h	True
1368118063.0	1e0div	Where to find what parameters I should use for Digital Signature implementation?	De_Lille_D	11	6	16	"I'm writing a simple online banking application for a university course. The part I'm working on now simulates a token device (containing a private key) that accepts a nonce from the server, corresponding to a certain action (login or transaction). The token device will then generate a digital signature of the the altered nonce (to indicate if PIN was correct or not). This signature can then be send to the server to verify that the user has access to the token device.

I found [this tutorial](http://docs.oracle.com/javase/tutorial/security/apisign/index.html) explaining how to create and use the keys, but I think the parameters are outdated. In the example, they use the DSA algorithm, SHA1 hash function, and a key length of 1024 bits. I know from class that I should at least use SHA-256 and [Wikipedia](https://en.wikipedia.org/wiki/Digital_Signature_Algorithm#Parameter_generation) says key length should be at least 2048 bits for DSA.

Question: Where can I find up-to-date information about what algorithms and parameters are considered secure?

Note: the goal of the project is to think about the techniques and not so much about making a completely secure application.


"	t5_2qq4h	True
1352619706.0	13038e	GOST broken? x-post from somewhere.	heliox	8	1	2		t5_2qq4h	False
1348163217.0	107ark	Solitaire Encryption vs. (Kind of) OTP	MidwestJackalope	10	4	7	"I've been reading about Schneier's [Solitaire Encryption](http://www.schneier.com/solitaire.html) system for non-electronic encryption. It's certainly an interesting and apparently strong stream cipher. What I'm unclear on is it's advantages versus just shuffling,  matching a twin deck, and doing a straight MOD(53) top to bottom.

If you have a 10 character message like ""ATTAC KDAWN"", if you simply use a shuffled deck top to bottom, you still have a keyspace of (53!/43!). Obviously this isn't OTP because the cards are not random from character to character, but I don't see how you could verify that a decrypted message of ""DONTA TTACK"" was not valid.

Each way requires a new deck and/or passphrase to be shared, so as long as the message is relatively short, is Solitaire still mathamatically stronger?"	t5_2qq4h	True
1340898326.0	vqua1	Padding Oracle Crypto Research Prompts Confusion, Dissenting Opinions on Severity	TheloniusPhunk	9	5	0		t5_2qq4h	False
1338155448.0	u7s7y	Identifying Block Ciphers	FaafBeNelly	11	6	8	"Looking for some info on identifying which block cipher is used by an encryption system.

So say, for all intents and purposes you have a black box, which will decrypt any cipher text you pass to it, you can't open or disassemble the box to get a secret key or determine what algorithm the system uses. The secret key is fixed for the life of the ""box"".

You have many examples of valid ciphertexts, and can create your own random ciphertext, there is no checking on whether the input is valid.

You can tell if the system uses CBC or CTR mode etc., and what the block size is from trying different ciphertext combinations and examining the resulting plaintext, but how would you go about trying to derive the secret key without knowing what the actual block cipher being used it?

If the output from a block cipher should be indistinguishable from random, how can one guess which cipher is being used? A block size of 64 / 128 / 256 will narrow it down, but then I don't see how to proceed."	t5_2qq4h	True
1336950767.0	tlljb	[PDF] SHA-3 XBX numbers for AVR, Cortex-M0, -M3 and ARM920T	afbase	6	0	2	"I'm thinking the choice has boiled down to Skein and Blake.  [IETF](http://www.h-online.com/security/news/item/Doubts-over-necessity-of-SHA-3-cryptography-standard-1498071.html) complained about most of the SHA-3 hashes being slower than SHA1 and SHA2 already.

Here are the links

[XBX Site](https://xbx.das-labor.org/trac/)

[PDF](https://xbx.das-labor.org/trac/export/82/page/trunk/documentation/benchmarking_results_may_2012.pdf)

The big conclusion from the paper
Conclusion:
XBX Results May 2012
Conclusion

BLAKE is our first choice on 6 out of 9 analyzed platforms with the Cortex-M3 counting as two analyzed
platforms as it is quite versatile and we made two choices based on low cost and high throughput scenarios. On
the remaining three platforms BLAKE takes second place twice and third place once. BLAKE still appears
to be the most suitable SHA-3 candidate for embedded platforms because it is scalable and balanced, fast
and small.

Skein is strong on high-throughput platforms and therefore should be the first choice on fast modern
ARM Cortex designs, especially when the NEON SIMD extension is available. It comes in second on 3 other
platforms and claims one 3rd place. Overall we consider Skein to be the second best choice for SHA-3 on
embedded platforms by a small margin. It is very fast on fast CPUs and faster than BLAKE at 512-bit on
more than half the platforms. It is also relatively small for 512-bit output.

With two first places, one second place and four third places Keccak comes in third in the overall picture.
After the newest submissions by the Grøstl team Keccak now has to share third rank with Grøstl, which
achieved three first places, one second and one third place.

Keccak is the smallest candidate on our 8-bit platform and among the smallest on the other size sensitive
platforms. Grøstl managed to deliver low memory footprint on AVR and ARM-platforms as well as significant
increases of speed with the newly submitted implementations.

Table 7 list the rankings achived by the candidates according to chapter 6 together with a simple score by
awarding three points for every first place, two points for every second place and one point for every time
the candidate was ranked third.

While all five finalists do work on all analyzed platforms JH can not threaten the others when it comes
to embedded platforms. Keccak and Grøstl excel at the low end, Skein at the high end and BLAKE works
very well across the board.

Edit:Hyperlinks and Spacing"	t5_2qq4h	True
1334624829.0	sdecq	Question: Adventures in bruteforcing	nullandnull	10	2	10	"Hello, I recently wrote a tool that can be used to bruteforce XOR encoded strings. The tool is rather simple. It will search a file for a data set defined by a regular expressions patten and then bruteforce  the data with a single byte key with a range between 0x1 - 0x255. Nothing earth shattering. I have a couple of questions that I have gotten stuck on. They all revolve around detecting the decoded/decrypted message. Any thoughts, links or ideas would be greatly appreciated. 

* How can I detect valid strings without using a dictionary? 
* Could I use frequency analysis? 
* What if the data set is contained within compiled code such as a malware executable file? 
* Wouldn't ASCII extracted from an executable have a different frequency than dictionary text? Example ""http://google.com""
* What other techniques can be used?
* How would you solve this problem?


Notes:
I have slimmed down the false positives by only printing data sets that have valid ASCII after being XORed. Even with that I still have a high false positive rate of 20+ for each encoded string. I'm not worried about Unicode or wide-chars just ASCII. I have been messing around with doing ngram on ascii strings dumped using the sysinternal strings tool. Odds are I'm going to need to a more powerful machine :) For examples of the data and output please see the following [post](http://hooked-on-mnemonics.blogspot.com/2012/04/adventures-in-bruteforcing.html). 

Edit: 
To reflect the single byte key. "	t5_2qq4h	True
1334284306.0	s7au4	Impagliazzo's Five Worlds [Blog post by Lance Fortnow]	DoWhile	9	3	0		t5_2qq4h	False
1333580473.0	rtph7	Books or guides regarding secure key storage and database encryption [x/post from SE]	notadutchboy	8	2	0		t5_2qq4h	False
1333243602.0	rn5fk	What are the implications of Quantum computers on cryptography?	autotom	13	7	18	Also, if anyone has links that explain cryptography or quantum computers, that would be great.	t5_2qq4h	True
1332449059.0	r8w9c	[PDF]Interesting extension of Biclique to reduced round skein	fuckingbagre	8	1	3		t5_2qq4h	False
1330837606.0	qgtth	Hypothetical: Clientside authentication in Javascript	TheScriptKiddie	6	0	37	One thing that bothers me about making accounts for new websites is my inability to trust the sites' administrators. Even the biggest sites are occasionally compromised, and if my passphrase is being stored as a weak hash or (gasp!) plain text in their database, then I have a big problem. This situation can be resolved simply by using a different passphrase on every website, but realistically most people can only manage to remember so many passphrase. So, I have an idea: don't ever show them my passphrase. The Javascript library crypto-js already implements the PBKDF2 password-based key derivation algorithm, which works by recursively hashing the passphrase with a salt. A web site's login page could take the user's passphrase (just as it does now), use the domain name as a salt, and iterate PBKDF2 a predefined number of times to yield a predictable private key, all within he user's browser. The key would then be used to initiate an SSL connection, and the user would be authenticated based on the public key. The user would have previously registered their public key by sending it to the server over a normal SSL-TLS connection, and then responding to a signature challenge. The server never sees the passphrase, there can be no man-in-the-middle attacks, and every site has a unique keypair. Is there a huge flaw in this idea, or are web designers just lazy?	t5_2qq4h	True
1326664220.0	oiei0	For fun: Betting on the SHA-3 winner with bitcoins (from the SHA-3 mailing list)	B-Con	14	8	3		t5_2qq4h	False
1319475761.0	lna86	Researchers Publish New Attack on XML Encryption	TheloniusPhunk	8	2	0		t5_2qq4h	False
1319115737.0	linck	Is this a safe way to encrpyt a file? (xpost from /r/learnprogramming)	GoldenBoar	11	6	17		t5_2qq4h	False
1313025292.0	jf7cm	NTRU 0.7 released, code/security reviews welcome	pgupta1984	7	1	3	[NTRU](http://ntru.sf.net/) is considered the [most practical](http://middleware.internet2.edu/idtrust/2009/papers/07-perlner-quantum.pdf) quantum-safe public-key cryptosystem. Version 0.7 of NTRU is available for download and critique at [http://ntru.sf.net/](http://ntru.sf.net/).	t5_2qq4h	True
1311656439.0	izvzo	Question: Hashing a string with popular hashes without a computer	mitweb3000	12	6	11	"May seem like a strange question but I am trying to wrap my head around the work required to calculate a hash.  Using popular hashes from the past few decades (md5, sha-1 etc...) can anybody **estimate** how long it would take to hash the text ""The quick brown fox jumps over the lazy dog"" using nothing more than  pencil and paper?  Lets assume the person doing the work has an above average IQ, is good at math, good memory whatever characteristics preferable for this work without being some sort of savant. "	t5_2qq4h	True
1304010533.0	gzfvb	GPU-Based factoring using Pollard's Rho	lookouttacks	7	0	4		t5_2qq4h	False
1300804623.0	g8yeg	Cryptography Research's Paul Kocher on RSA Attack	GunkertyJeb	8	1	2		t5_2qq4h	False
1300186938.0	g4blp	Hi r/crypto, tomorrow i'm going to review a cryptographic algoritm invented by my university	corifeo	9	2	16	Hi r/crypto, tomorrow i will start an analysis on an algoritm developed in our department. I've some cryptoanalytic experience but i want to know if there are some methodologies or step to make a structured and omnicomprehensive review, could you help me?	t5_2qq4h	True
1297742622.0	flloz	New open source project: NTRUEncrypt and NTRUSign in Java	pgupta1984	9	2	3		t5_2qq4h	False
1293211878.0	eqzcf	Cryptography on Stack Exchange needs your help so it can become a thriving community.	SparxNet	12	5	2		t5_2qq4h	False
1291920645.0	ej2m3	"How Secure Is Julian Assange's ""Thermonuclear"" Insurance File?"	fmorstatter	15	11	10		t5_2qq4h	False
1291676295.0	ehafa	Taxonomy of glitch and side channel attacks	sanitybit	11	5	0		t5_2qq4h	False
1290327442.0	e9fb4	Is there a more active Cryptography reddit?	tleisher	7	1	5	This one doesn't seem too active and I was hoping to find something with a bit more people talking on it. Realized I was trying to figure something out that someone posted a month ago and probably has forgotten about by now.	t5_2qq4h	True
1273068028.0	c0d9d	Newly published related key attack breaks 13-round AES-256 with 2**76 effort	randombit	7	2	0		t5_2qq4h	False
1270587319.0	bnb2y	Can anyone identify this?	impomatic	6	0	4		t5_2qq4h	False
1268527170.0	bd2z7	Careers in cryptography?	webspiderus	8	0	10	"reddit,
I'm currently about to get my Bachelor's in Computer Science and Mathematics from decent UC. I've been interested in computer security in general and cryptography in particular, although my knowledge is limited by the only class that my campus offers on the subject. I've been a programmer first and a mathematician second, but I enjoy working on projects that are challenging both to solve as well as implement. I have also recently been offered admission into several Computer Science Master's programs in computer security / cryptography, but I don't know very much about the possible jobs that would qualify me for (beyond the government jobs such as NSA) and am not sure about where to start researching.
*tl;dr:* What jobs are out there that allow me to work with cryptography / computer security? Do I need and MS to have a good shot at these jobs? What's a good place to find out more about this?"	t5_2qq4h	True
1268072135.0	barnf	CryptoN00b seeks advice	bedsuavekid	8	2	13	"Hi, I've recently become interested in the concept of deploying cryptography as a civic duty. To put it another way, I've been aware on the periphery of my vision that people use encryption, but haven't given much thought to using it myself until Google Buzz made me suddenly think about privacy and whether I actually have any.

It's become an issue with me, and among my friends I'm encountering such (imho) silly arguments as ""I really don't think our government is that advanced"" and ""I don't have anything to hide, so let them look.""

To which I have thus far responded, ""Oh really?"" and ""Whether I jack off in the shower or not, I don't want a web cam in there.""

I come here seeking advice. I want to start using encryption more regularly, because I believe that people *should* use encryption. However, as evangelical as I may seem right now, I am not a pro. I am just your average geeky person, looking for reasonably easy-to-use implementations.

Thus far I have used OpenPGP with Enigmail to set up basic encryption in Thunderbird, and am publishing my public key as far and wide as I can. I can handle this, but it's a far cry from an elegant solution. I can deal with having to manually enter my passphrase every time I send an email, but it would drive my fiancée batty, for example.

Can you guys suggest some some smoother solutions for cryptonoobs? Any advice would be appreciated."	t5_2qq4h	True
1249000986.0	9663v	Another New AES Attack	ninguem	7	1	1		t5_2qq4h	False
1244738373.0	8rprg	Why won't RC4 go away?	johnlunney	8	2	0		t5_2qq4h	False
1243991346.0	8paww	Making encryption popular	apotheon	12	6	1		t5_2qq4h	False
1241196791.0	8h34g	Practical Aspects of Modern Cryptography video lectures (scroll down)	timelyinterruption	6	0	0		t5_2qq4h	False
1241174938.0	8h095	6 part series of crypto related podcasts	lmaurits	7	1	0		t5_2qq4h	False
1241113478.0	8gthi	Factoring integers in polynomial time (!)	shinigami3	9	5	1		t5_2qq4h	False
1241107169.0	8gsfo	Quantum cryptography with Alice, Bob and Eve	coffeegodfather	7	2	0		t5_2qq4h	False
1241080602.0	8goyl	I'm interested in cryptography, but don't know where to start	agscala	9	4	8		t5_2qq4h	True
1376450127.0	1kbpwi	Black Hat: Smarter algorithms threaten RSA	twignewton	9	5	2		t5_2qq4h	False
1375180870.0	1jca9t	How to write a good hash function?	firajaa	8	3	26	"I want to write an hash function (like md5 or sha1 but a little simpler) and I need some theoretical concepts (including those *mathematical theorems* that allow me to avoid collisions).

Up to now I wrote a *case-insensitive* hash with variable length output but i don't know how to verify if that function has collisions (if not through brute-forcing).

My aim would be a case-sensitive hash fuction with fixed lenght output and low number of collisions.

I'm looking for stuffs that can teach me."	t5_2qq4h	True
1374128411.0	1ijku6	Jon Callas on privacy in the modern age	skijeeper	6	3	0		t5_2qq4h	False
1373272974.0	1huqy7	2 keccak questions	pint	6	1	6	"1. keccak uses a permutation as its core function. are there any special reasons for this choice? the function could be any function with good mixing properties, it does not have to be reversible. or does it? i know for example that permutations has some benefits, like not converging into a single value or cycle, and entropy preserving. is there anything else?

2. there is an explanation for the 10*1 padding, but i just don't get it. what is the rationale for the 2nd 1? why don't just use 10 *  padding?"	t5_2qq4h	True
1370957463.0	1g4aw1	Differential Privacy and Fully Homomorphic Encryption	euler_identity	8	4	0	"http://jeremykun.com/2013/06/10/why-theoretical-computer-scientists-arent-worried-about-privacy/

Here again, the bad news is the good news. Complexity should be giving us a bit of protection against mass surveillance programs (today's fun exercise is to figure the complexity class for PRISM). We can hope, at least."	t5_2qq4h	True
1370882126.0	1g1x9j	Spy process analyzing cache miss timings	gcov2	7	1	5	"So I'm working on cache timing attacks.
I have the following problem:

I have a spy process spying on a cryptographic algorithm.

I stop the algorithm midtime and then I'm testing which parts of the cache take a longer time to read and so I'll know where the cryptographic algorithm wrote into the cache.

Buuuut: I can't see a difference in the timings.
I know how big my caches are and everything but my programmes don't show a difference.

If you know of any papers entertaining this subject or anything that might help me, please give me the links.

I will of course submit my paper when I'm finished.

Thank you very much."	t5_2qq4h	True
1360917420.0	18kmwb	Can someone with high school knowledge of math learn crypto?		10	5	10	See tittle	t5_2qq4h	True
1357527278.0	163hqm	WoT and application to DNS and other services	thugrat	7	1	4	"Looking for input on the below. It's mostly been a case of mental masturbation for awhile now, trying to come up with something that would work. I'd love to hear what you have to say.

###Trustd

A peer to peer framework for disseminating information based on a web of trust. Currently this is aimed at providing a DNS solution for the meshnet, however it is designed to be flexible enough for use with any type of data or resource.

#### Goals

  1. Store the location of a resource by distributing it among a network of peers so that no central point of failure exists.
  2. Utilize dynamically generated trust ratings of peers to ensure that users are directed to their most trusted instance of the resource.
  3. Secure the pointers to the resources location using cryptographically signed documents.
  4. Enable warnings and alerts to be propagated through the network in the event a server is seized or becomes malicious.

#### Key Points

  * Clients choose which servers they trust and how much they trust them. Servers choose which location for the resource they trust the most and provide that to the client. The client then chooses which server it trusts the most and accepts the location for the resource from that single server.
  * Every client MAY run a server instance and maintain their own database but it is not a requirement.
  * Every server node maintains a local copy of the location of the most trusted source for the requested resource.
    * Resources may be referenced by a pointer stored in the database, cached locally, or stored via DHT with the hash stored in the database.
    * In the event of caching, it should be refreshed periodically and if an update comes through the network then it immediately overwrites the cache once the updated is accepted.

### Network Operation

#### Resource Creation

When a client submits a request to create a new database entry, the following steps are taken:

 * Server checks the local database first and if no reference is found it then sends out a request to the entire network for the resource. If no pre-existing version is found, accept the resource as new and enter it in the database. The server will then broadcast the record to the network so that the other systems will update themselves.
   * If the resource already exists on the network, the server SHOULD refuse to create a new record. 
     * This doesn't prevent the record from being created through other means or other servers, but  this maintains the servers integrity by refusing to create duplicate content. 
     * The creator could go elsewhere and try again and perhaps find a node willing to create it, or he could create his own server and attempt to peer with the existing network. In this case, the duplicate content will be created, but the new server will have a non existent trust rating so his content will always be overridden by the preexisting version from other servers.
   * **If the server receives a notification of new resource for an existing record, it should....?** (This is still up for debate)
     * Lower the trust rating of the node that sent the request AND refuse to accept it?
     * Inform the sending server that we already have a record for that entry and let them figure it out?
     * Check the trust rating of the node that sent the request against the node that sent the initial resource for the already existing resource and update the record if the new record comes from a more trusted source?
     * Something else entirely? 


#### Resource Updates

 * Resource updates are pushed around the network. If a client receives an update for which it has more than one trusted source, it will wait until the most trusted source has the update, then accept it and forward it on to peers. (pending simulation) (**note:** I no longer believe this solution will work)
 * Alternatively, it may accept the update once it comes from a node with trust above a certain threshold, even if it is not the most trusted node available.


#### Resource Expiration

 * Servers will periodically check on the resource.
   * Verify that it still exists.
     * Resources will expire to keep from having a needlessly large database.
   * Verify that the resource data you have matches the data your peers have.
 * Allow withdrawal of the resource from the system.
   * Resource servers will use periodically rotated keys to sign their information. These periodic keys will be signed by a master key that SHOULD be stored offline in a secure location and only accessed when required.
   * Both the master key and the periodic key SHALL be accepted to sign documents for the server, however the server SHOULD prefer to use the periodic keys in case of a security breach. 
   * In the event of a hostile server takeover, the server operator SHALL access their master key and broadcast an alert message. Handling of this message is TBD.


#### Resource Revocation

 * In the event of an emergency, for example a compromised server, the owner may revoke the subkeys to prevent further damage to the network. 
   * Server sends a signed revocation method for each subkey it wants revokes using its master key.
   * All other servers see this and immediately refuse to use the requested subkeys to update records.
   * Server generates new subkeys, signs them with the master key, and re-distributes the information.
   * All other servers update their records to use the new subkeys for the applicable records."	t5_2qq4h	True
1357220950.0	15vyqq	"""solving"" the in memory symmetric key problem?"	nikitia	18	13	10	"Essentially, the recent recent ""truecrypt broken"" nonsense has made my fears of grabbing in memory encryption keys reemerge. However (this is more of a question) what if we were to set up a server system that does not use symmetric encryption, but rather asymmetric encryption. Obviously this system would not under normal situations have the decrypting key in memory, but rather only encryption key. This would essentially create a receiving only data server that does not posses the ability to decrypt the very data it encrypted.

Also, i have done a touch of research (just enough to know that its not practically possible to do securely with current CPU limitations) on crypto systems can can do work on data they poses but not actually know the data or the work being done (homomorphic encryption). Could a server of this type (or a special arrangement of several of these servers) ever possibly be set up to both encrypt data and decrypt it, but never have the keys to do so on the actual machine?

I could be missing the point entirely and doing everything wrong to defend myself against in memory key attacks, but i need a server that can readily be written to but only on occasion actually read from, in these few cases it would be fine to load and store the keys required to decrypt in memory temporarily."	t5_2qq4h	True
1356047512.0	1572kz	Security of practical one time pad implementation	marklarledu	9	4	14	"So we all know that the one time pad meets Shannon's definition of perfect security but that the key distribution problem associated with it makes it very impractical for most real world use cases. So instead we use symmetric keys for algorithms like AES that can have varying life spans sometimes measured in years. I was wondering if it were possible to get ""very close to"" the perfect secrecy offered by the one time pad but keep the benefit of the long key life offered by current symmetric schemes (yes, I understand that is exactly what symmetric algorithms are for ... I was just doing this as a mental exercise for fun). This is what I came up with:

a. Generate initial random data (called key) and distribute to all parties involved (i.e. same thing as normal symmetric key generation/distribution)

b. Encrypt message as follows:

1. Choose hash algorithm (called H)
2. Choose random number of iterations (called n) 
3. Generate random data (called rnd)
4. HMAC key and H n times (called derived key)
5. Ciphertext = Message XOR derived key
6. Send H, n, rnd and ciphertext

This scheme has the following benefits:

- Not vulnerable to known-plaintext attacks as easy as XOR is

- Can use the key for much longer than you can with just XOR

- Potential to be very fast (if random numbers are generated well in advance and a fast hash algorithm is chosen with a low value for n)

I believe a lot of the security of this scheme relies on the security of the chosen hash algorithm (and the strength of the random number generator used, of course). 

I work in a field where we apply crypto, not create it. So for all I know what I described is either completely dumb or very similar to how certain symmetric schemes work. If either of those are the case, please excuse my ignorance. 

With that all said, does anyone notice any obvious security holes in this scheme that I am not seeing? Is this similar to any symmetric algorithms out there?"	t5_2qq4h	True
1353383774.0	13hot4	Questions about compression and encryption schemes.	projectbluepants	9	6	19	"I'm new to the world of encryption and have a few questions. Hopefully some of you guys/gals can help me out.

In general how secure are encryption schemes that compress ciphertext that were already encrypted with a different algorithm such that the length of the ciphertext is smaller than the length of the plaintext? How much more secure would this process be if we added a ""significant amount of noise"" to the code/compression?

To give an example, say that we use encryption algorithm E (with or without noise) to encrypt plaintext message Y to produce message X (denoted as (E(Y)=X)). Then we use compression algorithm A to compress ciphertext X to get the compressed version of encrypted message Q (denoted as A(X)=Q) s.t. L(Q)&lt;L(Y) (length Q is less than the length of Y). If there is a ""significant"" amount of ""noise"" added to X then how does that affect the compression of X and the security of the encryption scheme?"	t5_2qq4h	True
1352847244.0	135cl2	"Active Implementation Attacks by Jörn-Marc Schmidt, Marcel Medwed

"	turnersr	8	3	1		t5_2qq4h	False
1351809550.0	12he5s	Where can I find test vectors for chacha20?	hhhred	6	0	11	Does anyone know where I can find test vectors for chacha20? For some reason the [spec](http://cr.yp.to/chacha/chacha-20080128.pdf) does not contain any examples.	t5_2qq4h	True
1351373227.0	126ugw	OCSP and CRL client	marklarledu	6	0	3	"Anybody know of an open source project where I can obtain the revocation status of a given SSL certificate by both CRL and OCSP? It looks as though [EJBCA](http://www.ejbca.org/features.html) supports both but from what I see it looks like it only handles the server component (i.e. responding to revocation status requests instead of making the requests and interpreting the responses). 

I realize that I could look at the source code for Firefox and get a client from there but if someone has already done that I'd rather not reinvent the wheel. "	t5_2qq4h	True
1350449519.0	11m5db	Any interest in a CryptoParty in Seattle?	thefinn93	6	2	1		t5_2qq4h	False
1348591815.0	10ghak	The Invisible Things Lab's blog: Evil Maid goes after TrueCrypt!	throwawayagin	10	5	3		t5_2qq4h	False
1344657077.0	y17ex	"Can anyone help me find a PDF of Kullback's ""Statistical Methods in Cryptanalysis"" ?"	JavaMonn	9	3	2	"Or even a summary? I've seen it cited in multiple other papers now, and It looks terribly interesting, but all I can find are physical copies, [such as this one](http://www.amazon.com/Statistical-Methods-Cryptoanalysis-Cryptographic-Series/dp/0894120069). Also note how amazon misspells ""cryptanalysis"", hehe.

 Any help would be appreciated. "	t5_2qq4h	True
1343823217.0	xi399	Question about the Elliptic Curve Discrete Logarithm problem	retardsrunfunny	8	3	8	"When calculating a public key point, you add base point G to itself d times, where d is our private key.  My question is this:  if the base point G is public information, what stops our attacker from adding G to itself using a counter for iterations and making checks against each new point?  They would essentially be calculating their public key in the same fashion.

If the answer is computational complexity, how can our curve holder calculate a public key using the same logic?"	t5_2qq4h	True
1342673808.0	wswe1	PhD in information security question	marklarledu	8	4	15	I am looking to do my PhD in information security or information assurance and was wondering if any redditors had advice on what schools to be looking at. I am open to schools in any part of the world. Appreciate any info you can provide. Thanks in advance.	t5_2qq4h	True
1342113770.0	wg8r1	Threats and Usability of Secure Voice (opportunistic crypto)	freeborn	10	6	9		t5_2qq4h	False
1341934589.0	wbxzp	File extensions associated with encryption software.	4144414D	9	4	17	"For example .tc is typically associated with Truecrypt. Are there any other file extensions associated with other encryption software?

I'm aware the user could name the file what-they.want and the software will still read the file no problems.

If anyone can help me with either a few extensions they are aware of or an official-ish list it would be greatly appreciated. "	t5_2qq4h	True
1341873030.0	wami8	Need help creating a key.	Azurinel	10	5	11	"I've worked on an encryption method for some time now, but was never sure how to go about creating a key. I just had an idea for one involving some math, but I'm not sure what information would need to be public for the key to be calculated while keeping a high level of security. So here are two examples.

In the first, let's say the key is (3x-2)(2x-1). With this key and the knowledge of the algorithm, a person can decipher a message, but is important to know that all a person needs to know are the 3 and 2 (sign doesn't matter). I know prime numbers are often sought after for encryption, so I decided to go with those. At x=15, the polynomial equates to 1247, which is 29\*43. Additionally, for the equation (3x+2)(2x+1) (remember only the 3 and 2 are important), at x=15, the polynomial equates to 1457, which is 31\*47. So, the important numbers here are:

3 &amp; 2 (key) //
2 &amp; 1 //
x=15 //
29 &amp; 43 = 1247 //
31 &amp; 47 = 1457 //
Because I'm using a polynomial, 31\*43 and 29\*47 also go with the polynomials, so 1333 and 1363 could be used. //
31 &amp; 43 = 1333 //
29 &amp; 47 = 1363 //

As for the second example, the polynomial is (23x-5)(13x-1). 24 is the lowest number I could find as a value for x that yields a product of two primes for the four variations of the polynomial.

23 &amp; 13(key) //
5 &amp; 1 //
x=24 //
311 &amp; 547 = 170117 //
313 &amp; 557 = 174341 //
311 &amp; 557 = 173227 //
313 &amp; 547 = 171211 //

So what numbers could I give out that would let a person find the two numbers needed for the key, while still keeping it secure? Or is that even possible with this method?

If that method is not secure enough, would some type of symmetric/asymmetric encryption process work to share the key? I was thinking of RSA, as my algorithm can work with any two prime numbers (the prime numbers being encrypted with RSA).

Edit: Here is how everything works. I'll give a very basic example then go into how it can be more complicated. It's a transposition cipher.

Let's say you have a message 32 characters in length. Take an 8x8 grid and place the first letter in the upper left slot (there are 64 slots in an 8x8 square). Now choose two different numbers that are not divisible by 4, let's say 3 and 2. Now move down 3 slots in the grid and right 2 slots. Place the second character. If you reach a side of the grid, wrap to the other side and continue. Repeat this process until you arrive at the original square. You now move to the upper right square, place the next character, move down 3 slots and left 2 slots until you arrive at the upper right square again. Move to the lower left square, and place the next character, then move up 3 slots and right 2 slots until you arrive at the lower left square. Finally, move to the lower right square and place the next character, go up 3 slots and left 2 slots until you run out of characters.

An 8x8 grid can have a maximum of 32 characters placed inside using this method. You may then fill the other 32 slots with random characters (preferably the randomness is based off of letter frequency). Now create a string by removing the letters as you would if you were reading a book. This string is the ciphertext.

There are a few rules to follow using this type of transposition. First, the sides of the grid must be divisible by 4. Second, the numbers chosen for movement must not be the same or equivalent and may not be divisible by 4. Third, the movement from the starting corners must be symmetric. Outside of that, you should be able to do anything you wish. For instance, if you do not need to follow the order of the corners I chose in the example. You may also move horizontally or vertically in any direction from a corner.

There are several properties to take note of:
- The patterns created by the process allow you to place copies of the grid next to each other (this isn't important)
- Different side lengths can be used, and the maximum number of characters that can be placed placed is four times greater than the length of the smaller side.
- An infinite number of dimensions may be used. If you want to use a cube and have three numbers for movement, you can. If you want to encrypt something in 100 dimensions, you should be able to (I haven't tried anything that big because it's too large to do by hand).
- The patterns can be superimposed onto one another (if you created a grid from the example and didn't fill in random letters, you could take another identically created grid and fill in the blank spaces with the second grid.
- There is a secondary pattern created in a grid. In the example I gave, you may move horizontally 2 and vertically 1 to reach all of the slots from that corner.
- I believe that as you include more dimensions, some, or perhaps all, of the rules I mentioned above become obsolete. For instance, a 4x4x3 or 4x4x2 or 3x3x3 cube seems to work (all slots have at most one character that can be placed inside).

You may also ""pad"" a grid by placing extra rows/columns/etc. around a grid and filling them with random characters.

Anyway, hope that makes sense. I got the polynomials by taking the movement numbers and the secondary patterns. This is all kind of tedious to do by hand, especially as you reach higher lengths and/or dimensions. Shouldn't be any trouble for a computer, though."	t5_2qq4h	True
1340807059.0	vop1i	Experts Say Attack on Crypto Tokens is Serious, But Not Catastrophic	TheloniusPhunk	10	5	0		t5_2qq4h	False
1334302320.0	s7n0i	Need some padding oracle exploit help.	xrthrowaway	7	2	6	"Currently, I am following along with:

http://blog.gdssecurity.com/labs/2010/9/14/automated-padding-oracle-attacks-with-padbuster.html

http://lasecwww.epfl.ch/php_code/publications/search.php?ref=Vau02a


The problem I am having is finding the *Intermediary Value* which can be used to encrypt/decrypt values at a certain byte. So as I understand it, encryption schemes in CBC mode have a 1-to-1 byte relationship with ciphertext and plaintext; if I modify byte 8 of the ciphertext, byte 8 of the next plaintext block will be modified. We can use this property to find the intermediary value; for example: change byte 8 in the ciphertext over and over until byte 8 in the last block becomes 0x1 (valid padding). The padding oracle will let us know when this happens. So far I think my understanding is correct (feel free to let me know if it isn't)

However, my problem is that I thought there could exist only *one* ciphertext byte which would lead to *one* 0x1 plaintext byte which leads to valid padding. I get two, though. When I retrieve the intermediary value at that byte (ciphertext byte ^ 0x1) I get two different intermediary values.

The problem does not stop there; as far as my understanding of padding oracles goes, I *should* be able to retrieve the plaintext at that byte by simply doing (ciphertext value ^ intermediary value), but I do not. In the previous paragraph I had stated that I found two values that lead to a valid padding, and neither of them lead to the appropriate plaintext at that position.

What am I doing wrong? I don't think I see anything obviously wrong here..."	t5_2qq4h	True
1334253502.0	s6iaa	Future of Cryptology?		8	2	18	"Hello, cryptological lay person here. I work in the networking field, although my specialty isn't security.

I'm curious about what the future of cryptology holds. It seems, based on my understanding, the goal of encryption is to prevent messages from being read. However, with the trend that technology is taking, it appears to be the case that encryption is far outpacing the ability to crack codes. As an example, WEP to WPA2 has seen a very significant increase in security, and there will undoubtedly going to be future increases. 

So, I guess my question is about cracking codes. Barring the invention of quantum computers or finding out that P=NP, is it going to be the case that, for all realistic purposes, codes become uncrackable? It doesn't seem too unrealistic to see a day where all network connections use a 1024, complex encryption scheme."	t5_2qq4h	True
1332488704.0	r9piq	Question: why use a local keyfile?		10	6	17	"Let's say instead of having a generated keyfile on a USB key, on my hard drive, or the like I choose to have a random binary file as my keyfile.  Let's say it's just a random image - any image - hosted on Imgur that I curl over SSL and pipe into my crypto program of choice.   Nobody needs to know the secret URL of the image - maybe not even you.  Obviously this means you need a connection to the Internet to unlock your business, but that's less and less of a problem these days.

What's wrong with this idea, assuming you wouldn't leave your curl history lying around? "	t5_2qq4h	True
1330049046.0	q3flb	Just finished a Network Security class at college, got really interested in cryptography. Can you guys point me what to do next?	fenrisar	8	1	11	"So I am a first year master student of Computer Engineering and  just finished an Network Security lecture, and I dare say I loved it. Now it had no real recommended book in English (I did this class in an exchange program, the bibliography was in german), so I was wondering if maybe reddit could point me in the right direction.

A little info on myself maybe, and my knowledge:

I consider my self rather capable at math, and to have a good base knowledge on networking. As for cryptography, this was the real time I approached it, and we covered the basics (I guess).

So, I am really interested in looking up into this, as I haven't decided what I really want to do with my life, and this seemed quite interesting! So, if you could point me some books, or something, would be really grateful.

Thanks"	t5_2qq4h	True
1330044796.0	q3cd5	Nested VMs and filesystem-level encryption	Divinorum72	7	0	7	"With regard to local security how viable is it to run nested VMs with filesystem-level encryption on the guest VM and subsequent nested VMs? The structure I am assuming is that the user is running instances of SELinux distros from the host all the way down to the last inner guest and that each level of encryption (including FDE before the host) are utilizing hidden volumes with keyfiles.

Assuming netsec has been covered thoroughly, like running CJDNS and your choice of proxy, how well would this overall setup be rated?"	t5_2qq4h	True
1318164107.0	l5yqx	Online Hash Finder	widowild	5	0	1		t5_2qq4h	False
1314584095.0	jxjfn	Javascript Cryptography Considered Harmful (x-post from r/programming)	snappywan	10	5	2		t5_2qq4h	False
1312574360.0	ja6ac	Where's Waldo Puzzle [taken from Wikipedia's entry on Zero-Knowledge Proofs]	anonuci	6	0	1		t5_2qq4h	False
1311962540.0	j3f4h	A code mystery for reddit to solve! (x-post from r/codes)	amazingnachos	9	4	7	"I was hoping that someone here would be able to crack a mysterious code buried in the menus of Bungie Studios' Halo: Reach, released last September.

It's a 64-digit hex number on the ""Network Status"" screen of the pause menu; it shows up after hovering on this particular screen for about 10 seconds.

The only official word on the code (that I'm aware of) comes from Bungie employee Eric Osbourne (aka Urk) who said ""Everybody's code is different and most users will have multiple code strings issued over the course of their Reach careers. Because we are all unique snowflakes."" on this Bungie forum:

http://forums.bungie.org/halo/archive36.pl?read=1060616

So here's my current and one past code.  My Xbox Live gamertag is ""Lord Friendship"".  The first code is from July 2, 2011.  The second is from July 18, 2011.  The codes don't change very often, and I don't know what causes them to change.  Since July 18 my code has changed, but it quickly changed back to the second number below, and I did not think to write it down.

FA8AEE1A7A87990E7D5112A9D9EE16004B918AC3E718929ACF96BCE42DC21C36

75927E505DAD84E433E466874C37F5D38C18017AC93BEE4F6ABA5F8701662650

Any help is appreciated!  Good luck and thanks guys/gals!"	t5_2qq4h	True
1311788715.0	j1c6e	Perfect eavesdropping on a quantum cryptography system	sanitybit	8	3	4		t5_2qq4h	False
1311427504.0	ixmtm	NSA Home For Kids Teaches How Codebreaking Works	soccer	12	5	0		t5_2qq4h	False
1309765128.0	ig8mp	Online enigma simulator	chew_toyt	8	4	1		t5_2qq4h	False
1306513555.0	hllyl	  Crypto.cat Aims To Offer Super-Simple Encrypted Messaging	commodoor	6	1	1		t5_2qq4h	False
1301832715.0	ghlu3	Scientists Develop New Method to Improve Passwords	cryptokey	10	6	10		t5_2qq4h	False
1294928075.0	f1jxq	ESFS: an encrypted steganography file system written in Python and FUSE	sanitybit	7	2	0		t5_2qq4h	False
1291936578.0	ej7mz	Program Obfuscation and Cryptography.	sanitybit	8	4	1		t5_2qq4h	False
1291791017.0	ei580	Hacking commercial quantum cryptography systems by tailored bright illumination	sanitybit	7	3	1		t5_2qq4h	False
1276713590.0	cfpp1	So I decided to calculate how long it would take to encrypt a dictionary into every possible single letter substitution cipher..	ophanim	9	3	10	"..and look for words that remained real words in the encrypted format.  I wanted to write something to do all this and note the original word, the new word, and the cipher used.  The intent was to have a searchable database for the simple purpose of puzzle making.  I needed to know how long it would take to do all this, though.

Assume that it takes a mere 5 milliseconds to convert an entire dictionary, search for real words in the encrypted dictionary, and save the original word and new word in a searchable format for later compiling.  The number of possible single letter sub ciphers for a 26 letter long alphabet is *roughly* 4.0836 x 10^26, a depressingly large number.  Still, I didn't think that it would take too long at 5 milliseconds a go..

So I punched it into [WolframAlpha](http://www.wolframalpha.com/input/?i=4.0836+x+10^26+x+5+millisecond).  Oh, wow.  That's a rather long time.

I thought you guys would get a kick out of my primitive understanding of large numbers.

"	t5_2qq4h	True
1267130720.0	b6j7n	Block cypher ECB using hashes	dada_researcher	8	3	13	"I have implemented a block cypher and I'd like to have feedback from experts. I do not know much about cryptography.

In this algorithm the user is expected to provide a pass-phrase. The key for each block is a hash of the passphrase + a salt value + the original data from the previous block. The purpose of the hash is to generate a random looking key for each block. Then that key is XOR-ed with the data for the block. The length of each block is the length of the hash value.

Example:

Suppose the hash function gives 16 bytes. '++' means concatenation.

    DATA_BLOCK1 = first 16 bytes of data to encrypt
    BLOCK1_KEY = hash( passphrase ++ salt )
    CRYPTED_BLOCK1 = DATA_BLOCK1 XOR BLOCK1_KEY

    DATA_BLOCK2 = next 16 bytes
    BLOCK2_KEY = hash( passphrase ++ salt ++ DATA_BLOCK1 )
    CRYPTED_BLOCK2 = DATA_BLOCK2 XOR BLOCK2_KEY

etc.

To increase the safety the hash method for each block is selected from a list of functions (MD5, SHA-1, SHA-384, SHA-512, etc) using a hash of the passphrase+salt+data of previous block. This produces blocks of different lenghts in a way determined by the data, and adds more variety to the keys.

Any weaknesses?

The implementation is here, in python: http://howlingmob.net/hashxorcypher/


EDIT: A modified version is posted here: http://howlingmob.net/hashxorcypher2/
It adds a counter and blocks of sizes from 8 to 24 bytes, not tied to the hash function used but only to the previous data."	t5_2qq4h	True
1260544638.0	adlw8	Somebody announces that he's built a large quantum computer. RSA is dead. DSA is dead. Elliptic curves, hyperelliptic curves, class groups, whatever, dead, dead, dead.	self	15	11	9		t5_2qq4h	False
1256769155.0	9ys74	"The ""Elephant diffuser"" - Niels Ferguson's design for Microsoft's BitLocker"	B-Con	6	1	0		t5_2qq4h	False
1244738455.0	8rps3	The First Few Milliseconds of an HTTPS Connection	johnlunney	9	5	1		t5_2qq4h	False
1243986425.0	8padc	n2n is an encrypted layer two private network based on a P2P protocol	johnlunney	6	1	0		t5_2qq4h	False
1241367073.0	8hhqt	A Brief History of Cryptography	cruise02	8	2	0		t5_2qq4h	False
1241325599.0	8hewa	An Overview of Cryptography 	lmaurits	6	1	0		t5_2qq4h	False
1241182090.0	8h0yu	What are some things to consider when choosing a passphrase, both from a psychological (ease of remembrance) and technical (hard to break) standpoint?	Enginerd	7	2	13		t5_2qq4h	True
1241070319.0	8gnvt	Bruce Schneier's Cryptogram, April 2009	lmaurits	7	2	0		t5_2qq4h	False
1376489144.0	1kcjoi	Pros and cons of securing personal data with public key crypto.	spin-one-half	7	5	14	"What are the pros and cons of using public key software, like gnupg, to secure
personal data (i.e., data normally secured using symmetric encryption)? In
short, it seems to me that the utility of public key methods extends to
one-party situations where multiparty communication is irrelevant.

Could you please comment on and add to the following lists?

**Advantages**

1. Two levels of security: to decrypt, one needs both the private key and the
password protecting the private key. Without the private key, brute force and
dictionary attacks are apt to be fruitless as the RSA or El Gamal key is
created from (nearly) random bytes.

2. Ease of use: if one decides to encrypt but not sign, then encryption
proceeds without need for a password. Hence no password plaintext is written to
swap files, left on the clipboard, or detected by keyboard sniffers.

3. Authentication and integrity are optionally gained through signing after encrypting.

4. Ease of updating passwords: one does not have download - decrypt -
reencrypt - reupload data in order to update the password. One merely applies
the password change to one's private keys. Very useful where data are stored on
cloud servers.

5. One can encrypt personal data as a message for two (or more) recipients. If
one loses one's private keys or forgets one's password, the other ""recipients""
can serve as a backdoor way of entry so long as you have their keys and
passwords. Of course, this is also an advantage for any attacker.

6. *Other advantages??*

**Disadvantages**

1. Handling a private key is burdensome where interactive keyboard entry of a
password is typical.

2. For the nonexpert user, public key methods are complex and often
misunderstood.

3. Symmetric encryption is integrated into software like zip, 7zip, etc.
Public key encryption is not (so far as I know).

4. *Other disadvantages??*

"	t5_2qq4h	True
1376376919.0	1k9j0w	Looking for feedback on a side project of mine (encrypted chat)	S201	11	6	23	"Hi all, I've been working on a side project for encrypted chat and I was looking for some feedback on it as I get closer to the point where I'm happy with it.

All the code is at https://github.com/shanet/Cryptully. The relevant crypto code is at https://github.com/shanet/Cryptully/blob/master/cryptully/crypto/crypto.py. I use M2Crpyto as the library for Python.

Here's the basic details on the encryption used:

* AES is 256 bits in CBC mode with randomly generated key, IV and 8 byte salt.
* RSA is 2048 bits with a public exponent of 65537.
* RSA fingerprints are the MD5 digest of a client’s public key.
* HMAC’s are the SHA256 digest of the AES key and the encrypted message payload. The receiver calculates and verfies the HMAC before attempting to decrypt the message payload.
* Each client generates a unique RSA keypair and AES key for each connection. The exception being if the user saved an RSA keypair. Then each connection uses the same keypair, but AES keys are still randomly generated.
* The AES key, IV, and salt are randomly generated for each message and sent along with the message encrypted with the RSA keys that are exchanged in the handshake.

Any feedback is greatly appreciated, thanks!"	t5_2qq4h	True
1373791179.0	1i9nmh	Solving the browser crypto problem	qnrrq	6	2	2		t5_2qq4h	False
1372235566.0	1h3idl	Does data leaks via the paging file in Windows make TrueCrypt very unsafe to use if you can't encrypt the entire drive the system is on?	incardia	5	2	10	If Windows is constantly writing decrypted stuff to the paging file that is supposed to be stored in the RAM, isn't this a huge hole in the TrueCrypt system for anyone that doesn't have a fully encrypted system drive?  I mean, anything decrypted in the RAM and written to the paging file would then be there on the hard drive, right?  I guess that you could turn off the paging file, right?  Or would that even help?  This seems like a huge problem with using TrueCrypt on most normal systems, so that you only option is either to encrypt your entire system drive, or only use a live CD when opening your TrueCrypt files, right?	t5_2qq4h	True
1371952545.0	1gvy8u	Would E2E Encryption in IM client possible?	cashbills1	16	14	23	Yeah. Would End-to-End encryption in an instant messaging client be possible? How would it work, and how would it work?	t5_2qq4h	True
1370271212.0	1fl0cu	The Great Everythingian Finite Field Writeup	pointfree	8	5	1		t5_2qq4h	False
1366915127.0	1d3l6n	php mcrypt implementation	slimm609	12	7	37	"Here is the crypto functions for php using mcrypt and pbkdf2.  Looking to see if anyone can see a problem that I may be missing.   TIA

    function encrypt($decrypted, $password)
    
        //set our salt to a variable
        // Get 64 random bits for the salt for pbkdf2
        $pbkdf2Salt = getRandomBits(64);
        // generate a pbkdf2 key to use for the encryption.
        $key = strHashPbkdf2($password, $pbkdf2Salt, 2093, 16, 'sha256', 32);
        // Build $iv and $iv_base64.  We use a block size of 256 bits (AES compliant) and CTR mode. 
        $iv = mcrypt_create_iv(mcrypt_get_iv_size(MCRYPT_RIJNDAEL_256, 'ctr'), MCRYPT_RAND);
        //base64 trim
        if (strlen($iv_base64 = rtrim(base64_encode($iv), '=')) != 43) {
            return false;
        }
        // Encrypt $decrypted
        $encrypted = mcrypt_encrypt(MCRYPT_RIJNDAEL_256, $key, $decrypted, 'ctr', $iv);
        // MAC the encrypted text
        $MAC = hash_hmac('sha256', $encrypted, $key);
        // We're done!
        return base64_encode($iv_base64 . $encrypted . $MAC . $pbkdf2Salt);
    }
    
    
    function strHashPbkdf2($p, $s, $c, $kl, $a = 'sha256', $st = 0)
    {
        $kb = $st+$kl;  // Key blocks to compute
        $dk = '';    // Derived key
    
        for ($block=1; $block&lt;=$kb; $block++) { // Create key
            $ib = $h = hash_hmac($a, $s . pack('N', $block), $p, true); // Initial hash for this block
            for ($i=1; $i&lt;$c; $i++) { // Perform block iterations
                $ib ^= ($h = hash_hmac($a, $h, $p, true));  // XOR each iterate
            }
            $dk .= $ib; // Append iterated block
        }
        return substr($dk, $st, $kl); // Return derived key of correct length
    }    "	t5_2qq4h	True
1364226653.0	1az8c1	Help with XXTEA - number of rounds	cryptonoob	8	3	11	"I'm using XXTEA for an embedded application (microcontroller without lots of flash, CPU, or RAM) and XXTEA seems to be the perfect algorithm to use.  

I'm pretty much using the reference code at [http://en.wikipedia.org/wiki/XXTEA](http://en.wikipedia.org/wiki/XXTEA).

According to an analysis article linked from that page there is a chosen plaintext attack when the number of rounds is reduced to six less. [Analysis paper](http://eprint.iacr.org/2010/254.pdf)

Since this is for firmware distribution, the user will not be encrypting with my key, only decrypting, so I don't think the plaintext attack applies to my case. However, I'm still unsure about the number of rounds. My feeling is that more is better - to a point of little return.

I'm not really under any time constraints, so what would be a good number of rounds, or n, using `rounds = 6 + 52/n;`?
"	t5_2qq4h	True
1363381663.0	1adfkq	Need help with encrypting files &amp; Carbonite backup. Have a few questions.	ganjamuncha	7	2	6	"I want to backup my files using carbonite. Just wondering if I should use Windows EFS to encrypt my files first, before backing it up with Carbonite. I know Carbonite uses their own encryption, but is this added security? What are some pros and cons? Hassle to decrypt when I recover these files? Thanks in advance.

I am a noob, but I only wish to learn."	t5_2qq4h	True
1362736991.0	19wlgb	Information Security—Before &amp; After Public-Key Cryptography	ThePiachu	5	3	0		t5_2qq4h	False
1358334475.0	16ohd8	Help porting AES from M2Crypto to pycrypto	gsks	7	3	5	"I want to convert some existing AES code from M2Crypto to the equivalent pycrypto. I have reduced the relevant code to a [gist](https://gist.github.com/4546068). The two main issues are:

* Pycrypto requires the input to be multiple of 16 in length, m2crypto does not.
* Even when the input length is multiple of 16, the ciphertext differs. After experimenting with M2Crypto cipher parameters, it turns out that setting `padding` and `key_as_bytes` to false encrypts to the same ciphertext with pycrypto. So I need to emulate `padding=True` and `key_as_bytes=True` in pure python.

Any help would be much appreciated.

EDIT: Thanks for the advice so far but unfortunately using a different (better even) encryption scheme is not a realistic option; there are tens of millions encrypted files on S3 using this particular M2Crypto implementation.
"	t5_2qq4h	True
1352771892.0	133ju6	[3DES] Need a hand with a puzzle... [x-post from /r/codes]	parliament32	8	5	10	"*Originally posted on /r/codes, a mod suggested I post it here instead*

I decoded a file with the following contents: http://pastebin.com/8hxMgyVr

As you can see, there are two strings (16 bytes and 4 bytes), followed by a block of ciphertext. They all appear to be hex. I assumed the 4byte string was actually the key, and the other string the IV, but mcrypt isn't coming up with anything useful. I've tried switching them around and shortening them, using portions of md5 digests, using their base64 counterparts... nothing interesting comes up. 

Any ideas?"	t5_2qq4h	True
1346008871.0	yv4gq	How to verify swap space is encrypted in Linux?		8	4	7	Is there a way to verify Swap space is actually encrypted?	t5_2qq4h	True
1344917639.0	y6osg	In the hope of being able to remember easily how to retrieve a strong and secure password but not having to write it down, what are the implications of using an extract from a well known book.	MeLoN_DO	10	4	12	"I am talking about a super secure password that you don’t have to write often. Like a key to an encrypted file/disk for one time transmission.

For example, let’s take the first chapter of the [Genesis](http://printkjv.ifbweb.com/Gen_txt.zip), keep only letters, converted to lowercase. This is to reduce errors in different versions of the text.

I get this:

    inthebeginninggodcreatedtheheavenandtheearthandtheearthwaswithoutformandvoidanddarknesswasuponthefaceofthedeepandthespiritofgodmoveduponthefaceofthewatersandgodsaidlettherebelightandtherewaslightandgodsawthelightthatitwasgoodandgoddividedthelightfromthedarknessandgodcalledthelightdayandthedarknesshecallednightandtheeveningandthemorningwerethefirstdayandgodsaidlettherebeafirmamentinthemidstofthewatersandletitdividethewatersfromthewatersandgodmadethefirmamentanddividedthewaterswhichwereunderthefirmamentfromthewaterswhichwereabovethefirmamentanditwassoandgodcalledthefirmamentheavenandtheeveningandthemorningweretheseconddayandgodsaidletthewatersundertheheavenbegatheredtogetheruntooneplaceandletthedrylandappearanditwassoandgodcalledthedrylandearthandthegatheringtogetherofthewaterscalledheseasandgodsawthatitwasgoodandgodsaidlettheearthbringforthgrasstheherbyieldingseedandthefruittreeyieldingfruitafterhiskindwhoseseedisinitselfupontheearthanditwassoandtheearthbroughtforthgrassandherbyieldingseedafterhiskindandthetreeyieldingfruitwhoseseedwasinitselfafterhiskindandgodsawthatitwasgoodandtheeveningandthemorningwerethethirddayandgodsaidlettherebelightsinthefirmamentoftheheaventodividethedayfromthenightandletthembeforsignsandforseasonsandfordaysandyearsandletthembeforlightsinthefirmamentoftheheaventogivelightupontheearthanditwassoandgodmadetwogreatlightsthegreaterlighttorulethedayandthelesserlighttorulethenighthemadethestarsalsoandgodsettheminthefirmamentoftheheaventogivelightupontheearthandtoruleoverthedayandoverthenightandtodividethelightfromthedarknessandgodsawthatitwasgoodandtheeveningandthemorningwerethefourthdayandgodsaidletthewatersbringforthabundantlythemovingcreaturethathathlifeandfowlthatmayflyabovetheearthintheopenfirmamentofheavenandgodcreatedgreatwhalesandeverylivingcreaturethatmovethwhichthewatersbroughtforthabundantlyaftertheirkindandeverywingedfowlafterhiskindandgodsawthatitwasgoodandgodblessedthemsayingbefruitfulandmultiplyandfillthewatersintheseasandletfowlmultiplyintheearthandtheeveningandthemorningwerethefifthdayandgodsaidlettheearthbringforththelivingcreatureafterhiskindcattleandcreepingthingandbeastoftheearthafterhiskindanditwassoandgodmadethebeastoftheearthafterhiskindandcattleaftertheirkindandeverythingthatcreepethupontheearthafterhiskindandgodsawthatitwasgoodandgodsaidletusmakemaninourimageafterourlikenessandletthemhavedominionoverthefishoftheseaandoverthefowloftheairandoverthecattleandoveralltheearthandovereverycreepingthingthatcreepethupontheearthsogodcreatedmaninhisownimageintheimageofgodcreatedhehimmaleandfemalecreatedhethemandgodblessedthemandgodsaiduntothembefruitfulandmultiplyandreplenishtheearthandsubdueitandhavedominionoverthefishoftheseaandoverthefowloftheairandovereverylivingthingthatmovethupontheearthandgodsaidbeholdihavegivenyoueveryherbbearingseedwhichisuponthefaceofalltheearthandeverytreeinthewhichisthefruitofatreeyieldingseedtoyouitshallbeformeatandtoeverybeastoftheearthandtoeveryfowloftheairandtoeverythingthatcreepethupontheearthwhereinthereislifeihavegiveneverygreenherbformeatanditwassoandgodsaweverythingthathehadmadeandbeholditwasverygoodandtheeveningandthemorningwerethesixthday

We then shasum it to get our password because it would otherwise be too long.

It can be achieved with this: 

    cat Genesis.txt | perl -p -e 's/[^a-z]//ig' | tr A-Z a-z | shasum -a 512

Which gives us a 128 char pass with an entropy of 16^128 or 10^154

---

What are the implications ?

Obviously, you need to tell the passfile to the recipient, but this shouldn’t be a huge deal no ?"	t5_2qq4h	True
1342632713.0	wrp4z	Tor question	marklarledu	9	6	11	"My knowledge of Tor is very limited but from what I think I know the exit node can read all the traffic between the client and the server even when the connection is done over HTTPS. I was wondering what the problem with implementing the following scheme is (or, if it has already been implemented):

Let:

* C = Client
* S = Server
* E = Exit Node
* C*_pub_* = Client's public key
* C*_priv_* = Client's private key
* S*_pub_* = Server's public key
* S*_priv_* = Server's private key
* SymKey = randomly generated symmetric key

1. C generates a random public/private key pair for the session.
2. C sends S*_pub_*(C*_pub_*)
3. E relays information in step 2 to S
4. S decrypts with S*_priv_* to get C*_pub_*
5. S generates SymKey
6. S sends C*_pub_*(SymKey) + signature
7. E relays information in step 6 to C
8. C verifies signature and then decrypts with C*_priv_* to get SymKey

Now, future messages between S and C are encrypted/decrypted with SymKey and E cannot eavesdrop on the conversation. 

Note: I left out details like C verifying that S's public key belongs to S and C sending a list of supported symmetric algorithms and hash functions to S but those would obviously be in there (left them out to make it easier to read). The use of nonces in there may help to protect against certain types of attacks but I need to think about that a bit more. 

This scheme is not backwards compatible with our current http(s) methods but I was thinking that it could be a protocol that is attempted first by the client and if the server doesn't support it the client can choose to degrade to the existing system (i.e. where the exit node can read all the traffic) or not to continue.

Am I missing something obvious here? Maybe there is a MITM attack I am not seeing?

**EDIT: I knew that SSL/TLS worked from end node client to server but for some reason I thought that the end node in the Tor scheme was the exit node and so it could read that traffic. Now that I think about it, it makes sense that the encryption could be done between the client (not exit node) and server. Not sure why I didn't see that before...**"	t5_2qq4h	True
1339652581.0	v18g3	Some crypto papers from Đặng Minh Tuấn, Vietkey Group	bolzano_1989	8	5	0		t5_2qq4h	False
1337055364.0	tnode	amateur cryptosystem -&gt; a very long boolean expression -&gt; attempt to reduce it	bohpa	7	3	9	"(newbie here)
I try to analyze amateur cryptosystem and wondering, if it's possible to reduce it as reduce a very long boolean expression?
What tool can I try to use?"	t5_2qq4h	True
1332890634.0	rgmr5	Ring signatures: possible with keys other than RSA (like DSA, ElGamal, ECDSA keys, etc.)?	gnos1s	9	5	8	It seems like RSA keys are not very common in people's PGP/GPG keys these days. How would secrets be provably leaked with the keys that are commonly used now?	t5_2qq4h	True
1331998308.0	r0uyv	Cryptography Question 2: Key Length relationships	etbrute	5	2	5	What is the determining factor that relates Asymmetric key lengths to Symmetric key lengths? It seems to be simply a matter of how many possible keys there are to check and how difficult it is to check each one. If this is true, then do Elliptic Curve systems require much smaller keys (e.g. 512 bits vs much larger for RSA) because there are more possible secret keys, or because brute forcing an EC key is more computationally difficult for each key? 	t5_2qq4h	True
1330655917.0	qdw72	html5, around the 52m30s mark there's talk of tunneling websockets using tls over http	throwawayagin	7	1	5		t5_2qq4h	False
1329864432.0	pzzim	General Number Field Sieve	andrewguenther	4	0	11	"I am taking a parallel programming course next quarter and my college has been granted a fairly massive GPU cluster. I am interested in implementing a parallelized RSA cracker as my final project. (For science)

Can someone explain like I'm five how General Number Field Sieve works?
I've gathered that it may be best to work my way up from Rational Sieve -&gt; Special Number Field Sieve -&gt; General Number Field Sieve

Can r/crypto help shed any further light on this for me?"	t5_2qq4h	True
1322724816.0	mvwfq	DM-steg: a (brand new) deniably-encrypted block device	finite	4	0	4		t5_2qq4h	False
1307983213.0	hymd8	A python wrapper for http://nacl.cace-project.eu/	DrWhax	5	0	0		t5_2qq4h	False
1304987114.0	h7qjz	[crosspost r/android] ZRTP with SAS key confirmation working in csipsimple	freeborn	5	2	2	"proof: http://i.imgur.com/tfIhG.png

related issue: http://code.google.com/p/csipsimple/issues/detail?id=262

Just made my first couple calls with ZRTP key verification,  this is a big win.. as the only other option is closed source(redphone)

grabbed the most recent tls version from here(r839)
http://nightlies.csipsimple.com/tls/

and then enabled TLS &amp; ZRTP under settings &gt; networking &gt; secure transport 
(ps dont enable SRTP)

Im connecting to freeswitch ( https://create.tanstagi.net ) ,

if anyone wants to test their handset feel free to give me a ring - 32906@tanstagi.net
"	t5_2qq4h	True
1296255863.0	fb108	A patent for a new quantum algorithm for integer factorization		4	0	1		t5_2qq4h	False
1295667226.0	f6vcl	TCHunt 1.5 is available for download		4	0	4		t5_2qq4h	False
1295455062.0	f56nh	Can someone help me beat my buddies challenge?	taffy-nay	10	7	11	"Hey r/crypto, A buddy of mine posted [this](http://i.imgur.com/x93r8.png) on his facebook.  
  
I used [this](http://pastebin.com/G0C1iPLm) Rot13 script to try and work it out and it gave me:  
  
    Ju))asi Fi*e a)e a( awesome g)oup
  
I'm assuming that my buddy is using some variant of Rot13 that includes non-alpha characters (but not Rot47 as it throws back gibberish). The apparently correct decoding of the word ""awesome"" coupled with the other decoded characters is making me think that the the full decoded string should read ""Jackson Five are an awesome group"".  
  
What do you guys think?
"	t5_2qq4h	True
1294885281.0	f1abl	In-memory extraction of SSL private keys	sanitybit	4	0	2		t5_2qq4h	False
1278527334.0	cmz60	(Some) AES Operations being built into new Xeon Chips	aviewanew	5	2	2		t5_2qq4h	False
1275885424.0	cc715	Numbers Stations broadcast messages to embedded spies out in the open where anyone could hear	mikem4rbles	7	1	8		t5_2qq4h	False
1273157689.0	c0m11	Learning to exploit a timing attack against a DES software implementation	B-Con	5	0	1		t5_2qq4h	False
1250916242.0	9d0cm	"Hitchhikers Guide to the Galaxy ""Order for Destruction"" translated from the original Vogon"	bobcat	5	2	0		t5_2qq4h	False
1244650433.0	8re7e	Comprehensive book about New Zealand's role in Echelon, free PDF. Encrypting everything tonight!	johnlunney	6	2	2		t5_2qq4h	False
1376380516.0	1k9lhv	Need to hire crypto folks	niceguy999	5	2	2	"Not sure if this is a right place, but I am hiring crypto people in SF bay area. Specifically, we will be implementing privacy preserving schemes. 

If you know of someone who is willing to be hired as an early employee of cloud security start-up, please PM me. I will be happy to share more details.

Thanks! "	t5_2qq4h	True
1367968938.0	1dw8sg	Need help with theory of decrypting alphabetic based ciphers	captainskybeard	6	4	7	"Ok, here’s the situation: Say you are decrypting a piece of cipher text which is comprised only of the 26 letters of the alphabet (NO WHITESPACE), which decrypts to the same - only the 26 letters of the alphabet. As in a basic Caesar or Vigenere cipher. Before you run away in boredom, my problem isn't to just find the key.

So imagine you know the algorithm and are using an automated tool to brute force the key. Also suppose the plaintext is perfect English, and every letter is used as part of a real dictionary word. Here is the problem: How do you know when you get it right? This isn't random 1's and 0's which can be checked for a ratio of ascii characters, the cipher and plaintext come from the same character sets. How would you write a program that could look at the results from the brute force and determine either definitively that this is the correct plaintext, or at a minimum assign it a probability? This needs to happen automatically without a human looking at it. Oh yeah, and it is very important (critical) that the solution is COMPUTATIONALLY ECONOMICAL. 

One note, I do have a real world problem (not homework) that I need to find a solution for, but it has nothing to do with crypto. It just so happens that the solution to the scenario would exactly match the one I described above. Therefore, I don't need a lecture on how insecure alphabetic substitution algorithms are.

So some basic ideas I had:

Somehow compile a list of short sets of characters (a black list) that could never exist in a string of properly formed English words, even accounting for the words being smashed together without whitespace. How I would find such a list I have no idea, I am sure someone who is an expert in English or language would have some insights.

Write a formula that calculates the probability that the string is English, based on things like certain double letters, vowel combinations, etc. Again, language isn't my bag, so I think I'd be pretty aimless at this. 

The less computation that is used to check the string the better. The more bad strings it can ""filter out"" the better. It doesn't have to be 100% perfect at finding the one sure fire key, but if it could narrow it down by 75% or more it would probably be enough for my purposes. 

I hope that makes sense. Thanks for taking some of your brain cycles to help me work this out.

EDIT: unfortunately i need to do this without frequency analysis as an option"	t5_2qq4h	True
1366906167.0	1d390a	Intuitive explanation of a round function in a Feistel network?	rick2g	5	4	8	Ok... so the F function in a Fiestel cipher does *not* need to be invertible... that kinda blows my mind, and I haven't been able to get a good understanding of exactly how and why that's true.  Anybody?	t5_2qq4h	True
1366234669.0	1ck86o	CryptoParty being held in Dallas tomorrow!	EthoMunk	5	3	1		t5_2qq4h	False
1360862708.0	18ivt0	How would you protect a file from aliens?	fuckingbagre	11	9	38	"This question was inspired by [this askreddit question](http://www.reddit.com/r/AskReddit/comments/17r9o4/real_question_for_computer_programmers_if_you/). 

The guy didn't ask the proper question but i found it to be a fairly interesting thought experiment.  You have an unknown adversary, with unknown computational power and unknown sets of algorithms.  Assume you can't just go OTP, since they can read your mind or something, and because it makes the question unfair.

So how would you defend yourself from a massively powerful adversary but have no idea what their powers are, think the nsa on steroids, with less information about the state of their tech."	t5_2qq4h	True
1352306859.0	12syg6	M3AAWG Recommends New DKIM Best Practices	TheloniusPhunk	5	2	0		t5_2qq4h	False
1347340768.0	zp1ap	New Cypherpunk Dev Forum	cy4m	6	3	10		t5_2qq4h	False
1347107215.0	zjx4c	I want to build a crypto p2p system using C#, what crypto materials to learn ?	xander7b	4	2	9	"The system would be fully distributed, with C#, so a lot of the lower level crypto details could be handled easily.

I know the basics of public key cryptography, and comfortable with basic client/server programming, and I have some rough ideas about how the design of a distributed p2p system should look like, however, is there some good and modern resource which would guide me better in building it ?

I don't want to build something overly-complex, it should be fairly small system, but without weird big crypto mistakes.

So, what are your suggestions crypto redditors ? :)"	t5_2qq4h	True
1347106549.0	zjwsh	"Have Yourself a Merry Little CryptoParty
"	EquanimousMind	7	2	1		t5_2qq4h	False
1344957231.0	y7em2	PDF Signing	arbiterxero	5	2	5	"We're looking at doing some imaging at work and they want to be able to say that the images, once stored have not been changed.

They want to use a simple hash (not signed)....which I know is silly (storing the keys with the lock) but that's not my real concern.

I'd like to be able to sign JUST the images in the PDF's and not the surrounding Meta-data. We don't actually care that the meta-data has changed but do care if the image has changed.

For example.... when we store the document, maybe the OCR made a mistake in the text conversion......no problem, just go correct the TEXT in the PDF. But we don't want to have to resign the PDF.

So I want to sign and be able to verify the image without verifying the rest of the data in the PDF. Anyone have experience in this?"	t5_2qq4h	True
1344954544.0	y7c3m	Key recovery on AES (CTR) with static IV?	bates151	6	3	4	"I have many blocks of ciphertext that were encrypted in AES256CTR with a static, empty initialization vector.  I know this is [catastrophically](http://tools.ietf.org/html/rfc3686#section-2.1) bad because it leaks information about the key.

I would very much like to create this catastrophe.  How do I get started?  Can anyone link to resources on cryptanalysis that exploits poor AES implementation?"	t5_2qq4h	True
1340804001.0	vomnd	Cracking PRNG's - How to encode the problem as satisfiability?	breen-machine	5	2	3	"After reading this exchange, I'm very curious about how one would encode the problem of predicting the output of an LCG as an instance of boolean satisfiability.

http://crypto.stackexchange.com/questions/2086/predicting-values-from-a-linear-congruential-generator

""A more general approach, applicable also to odd n, and perhaps to unknown a and/or c, would be to encode the problem under the formalism of boolean satisfiability, and use one of the many automated solvers available. I can't predict the runtime, though. This flexible approach has broken some mildly serious ciphers, see e.g. this cryptanalysis of A5/1, or this one.""

It's not immediately clear to me and my research so far hasn't turned up anything. Has anyone else heard of this before?

It would be very nice to have a way of detecting when a series of data comes from an modified LCG as described in the above post and predicting the next values."	t5_2qq4h	True
1340515039.0	viixm	Given todays ciphers, can you be mathematically sure you have decrypted the ciphertext correct?	cts	7	4	6	"Here goes my question:
Let's assume my plaintext is non-readable ""rubbish"", which ciphers allow an attacker to use brute force and yet be able to be mathematically sure he has arrived at the correct key? Are there any ciphers that do not show this behavior, ie. where every key tried yields the same ""probability"" of being correct?
Thanks for answering."	t5_2qq4h	True
1333298665.0	ro3yn	Pontifex/Solitaire Crypto Strength Help	MikeKaz	5	2	5	"According to Bruce this paper cipher is supposed to handle military/government adversary using only a deck of cards. Is this true? Assuming both people used a randomly shuffled deck insync would this protect a few thousand character message perfectly?

Would this provide the same level of protection as the one time pad without requiring large amount of OTP code books? Would love everyones input on this.

https://www.schneier.com/solitaire.html"	t5_2qq4h	True
1330076530.0	q3w3q	long-string passwords vs passphrases? Cryptographic entropy sources for Javascript? (Xpost from /r/netsec)	jesset77	5	2	13	"Hello, new subscriber here.

I am curious what everyone's thoughts on password security are, for example the pros and cons of using computer-generated random strings verses passphrases, and what are the best ways to measure the strength of said passwords? Is it fair to just talk about bits of entropy?

I got nudged to think about this by the [XKCD comic on password strength](http://xkcd.com/936/). I liked the method suggested and started using it, but being cumbersome to generate such passwords I eventually made a commandline tool and then a [web page](http://lightsecond.com/passphrase.html) implementing a client-side-only generator in Javascript.

My commandline tool in ruby uses /dev/urandom so it gets good entropy, but Math.random() didn't have that in JS so today I got done coding a newbie library to collect and pool entropy from mouse movements instead.

All my code is CC0 in case anyone else finds it useful; but I was wondering if you have some pointers on how to confirm it is secure enough to use to generate high quality passwords, whether there are libraries I could be using for entropy instead of making my own (or else what faults in my code are obvious at a glance) and whether I am even approaching things right or using the right kind of terminology. :3
Thanks!"	t5_2qq4h	True
1330014405.0	q2n2l	Random number generation: An illustrated primer	cryptoguy	3	0	0		t5_2qq4h	False
1327944830.0	p37n9	Can someone explain to me the PCBC security flaws in WASTE network? How severe is it?	otiseatstheworld	5	2	2		t5_2qq4h	False
1327874350.0	p23i7	Homomorphic encryption implementation — shapeCPU	pwnwaffe	3	0	0		t5_2qq4h	False
1323935704.0	ndjv0	Do we seriously not have a good Outlook MUA plugin for GnuPG?  [X-Post from /r/GnuPG]	race_bannon	3	0	0		t5_2qq4h	False
1315530507.0	k9hq8	Ask /r/crypto - Given a list of SHA256 hashes devised using [secret + string], can secret be predicted?	cjoudrey	5	1	12	"I have a ""checksum"" that I use to validate data passed by a client. 

This ""checksum"" is built using: SHA256[secret + string].

If ""secret"" remains the same and the client has a list of over 100 combinations of  ""string"" and the resulting ""checksum"", could he possibly predict the ""secret"" that I am using to generate the ""checksum"".

Excuse my ignorance, I am not Crypto-savvy."	t5_2qq4h	True
1310655226.0	ipgv9	File scrambling algorithm		3	0	16	"A long time ago (edit: ~1995 when I was ~14), I wrote an algorithm that encrypted a file through a pseudorandom generator producing byte swap addresses based on a key. One would generate as many byte swaps as there were bytes, and so byte 0 would swap with the generated position (edit: 0 to length of file, so passed-by bytes would be swapped again), byte 1 would swap with the next generated position, etc. Encryption was pretty fast, and especially for large files they were heavily scrambled. Combining with other algorithms (edit: read 3DES, etc at the time) yielded a pretty secure file. The drawback was, undoing the scramble required building a table that had as many entries as the number of bytes in the file and re-producing the byte swaps while keeping track of the destinations in the table. eg the table would start out with 0 : 0, 1 : 1, and each swap would track the position of the byte through the tables so they could then be undone. (Edit: For some reason I thought of this algorithm today, and...) I'd love to reinvigorate this algorithm, but was hoping someone had a nifty idea to shorten the descrambling process and memory requirements to make it sustainable for up to 10 GB files. Is there a practical way to do so?

edit: a way to save on memory but not CPU would be to iterate through the entire file length sequence for each byte and just worry about the final destination of that byte such that one would write descrambled file back out one byte at a time by determining which offset in the scrambled file to pull from."	t5_2qq4h	True
1307108598.0	hqrq3	What’s in a SSH RSA key pair?	ehamberg	4	1	1		t5_2qq4h	False
1304815337.0	h6eac	A question about DES	Digital_Addict	7	5	12	"I'm a cryptography newbie, but I've been doing research on DES. In particular I've been looking for a CUDA implementation of bitslice implementation of DES for a project I'm working on. None exists, so I figure I could try my hand at least at implementing regular DES. I found a step-by-step guide [here](http://www.comms.engg.susx.ac.uk/fft/crypto/des_algorithm_details.txt), but I'm confused on step one. So, the first step is to process the key. The problem is that I only have a plaintext (password) and a salt. I'm not really sure if the plaintext is the key.

I suppose a little background is in order to frame the problem. So I'm building a bruteforcer for tripcodes. The [algorithm](http://en.wikipedia.org/wiki/Tripcode#Description_of_the_algorithm) mentions only a password and salt and no mention of a key. Which leads me to my question: Is the plaintext/password the key?"	t5_2qq4h	True
1295142794.0	f32kc	Anyone up for it? xpost from gaming	ThatBritishKid	3	0	1		t5_2qq4h	False
1286348150.0	dngs6	Authentication and Cloud Seeding	sublime_confusion	3	0	14	"Let's say I have a document that, at some time in the future, I may wish
to prove I was in posession of today.  Let's further say that I do not
wish the contents of this document made public unless and until it may
be necessary to do so to prove the above, so publishing the document
today is not a solution.

I understand that there are various schemes for digitally signing
documents, and I'm in the process of trying to understand which of those
would best suit this scenario.  It seems to me, though, that there is
a very simple approach that would serve.

I believe that if I encrypt the document with a symmetric cipher (AES,
for example) and keep the key secret, then compute a secure hash of
the encrypted document and publish that hash, I will have accomplished
my need.  In this case, by ""publish"" I mean distribute it in such a way
that it acquires evidence of the approximate time it was made public.

An old fashioned way to do this would be to put an advertisement in
a newspaper with the hash in it.  This poduces thousands of physical
copies distributed over a large geographical area, with lots of correlated
date evidence.  The more modern equivalent, of course, is to simply cast
it into the Cloud and let the currents carry it far and wide, accreting
more date evidence as it goes (hence, ""cloud seeding"").

If I need to prove that I posessed the document at the time I claim
I did, I simply need to track down one or more public copies of the
hash (noting the date evidence), demonstrate that the hash matches the
encrypted document, and show that I have the key to decrypt the document.
The greater the number of disparate copies of the hash value that I track
down, the stronger the evidence for the claimed date.

""Cast it into the Cloud"" above is actually a bit glib.  It is important
to place the seed in places where it has the maximum probability of being
replicated and further distributed.  Furthermore, it must be done in
such a way as to maximize the chances of being able to recover one or
more credible copies when the need arises.

Hash collisions are not a great concern, because the colliding source
would have to be not just arbitrary data that hashed to the same value,
but data that also decrypted to a plausible document.  (If this existed
it would weaken my claim to the date and document, but not necessarily
invalidate it.)

I realize this is somewhat probabilistic and sloppy in a sense, but
it has the advantages of not requiring a public key infrastructure,
signing authorities, certificates, trusted third parties, commercial
interests, etc.  In some ways this makes it harder to subvert than a more
deterministic system.  Also bear in mind that the application in question
calls for a legal standard of proof beyond a reasonable doubt, rather
than a mathematical proof of correctness.  The required precision of
the time is also rather lax.  An accuracy of a few days would be adequate.

So I invite anyone who has borne with me this far to comment.  Am I
missing something basic.  Am I flat out wrong?  Is this just dumb?

Oh, and by the way...

CloudSeed:1a4924b303de38171d56480a509ec834
"	t5_2qq4h	True
1279350265.0	cqkm3	How advanced is modern brute force hacking these days? 		4	1	15	"I am trying to come up with a strong password that is easy to remember. I'd like to take some short cuts and not use a completely random password but i don't know how much i can get away with before it becomes a serious security risk. It would really help if knew how a dedicated individual or a government would crack a password assuming no back doors. I mean I know there is the obvious dictionary attack. But what do they do after that? Systematic cycling of combination of numbers? So I should just avoid the first million combination?

FYI: I already disable my Excel macros, you can't make a visual basic GUI to track my IP. So don't even bother.
"	t5_2qq4h	True
1271767221.0	btk6k	Quantum broadband becomes reality 	cavedave	4	1	0		t5_2qq4h	False
1265646684.0	aziv4	New Attack on Threefish (and other similar ARX algorithms).	B-Con	4	1	0		t5_2qq4h	False
1264796339.0	avt5r	FPGA Cluster Demonstrates Massively Parallel, Hardware-Accelerated DES Cracking	B-Con	3	0	1		t5_2qq4h	False
1262876755.0	ampq1	RSA-768 factored	wtbw	4	2	0		t5_2qq4h	False
1259015281.0	a7ftc	Why is bank security so far behind the curve?	apotheon	5	1	11		t5_2qq4h	False
1243990314.0	8pass	The importance of being encrypted	apotheon	5	2	1		t5_2qq4h	False
1241114547.0	8gtnu	How secure are password protected ODS files?  	Enginerd	3	0	8		t5_2qq4h	True
1376506452.0	1kd6ll	Microsoft to Eliminate Weak MD5 Crypto Algorithm	GunkertyJeb	4	2	0		t5_2qq4h	False
1375836065.0	1jumkd	What is, in your opinion, the best book(s) on Social Engineering?	rohanivey	12	11	1		t5_2qq4h	True
1375690348.0	1jq9lg	Is there a password security solution like this on the market?	garbonzo607	11	10	27	"First of all, tell me if I should submit this elsewhere....

In another thread, they were talking about losing the database for Keepass and thought of an idea. What if you had a built in algorithm into the program and it outputs a password based on some variables?

So you put in your master password and the website (it can catch the website automatically or you type it in yourself) and it outputs a unique password for you, mainly based on the security of the master password characters, but uniqueness of the website characters? That way you don't have to worry about a database as it would be the same across all installations.

If you reformat your harddrive you can just download the program, input your master password and the website, and get you get the same password that was generated for you in the first place?
Wouldn't that be a lot better than keeping your passwords in a database?

I'm not naive enough to think I'm the first to come up with this, so if there a problem with this solution, or is there already a program like this, please tell me!

Thanks a bunch!"	t5_2qq4h	True
1373548470.0	1i2t1u	Detecting Compromised Bootloader	mr_machine	2	0	5	"In discussions of the security of an encrypted computer when the attacker has physical access, two vulnerabilities are most commonly mentioned:

1) the potential introduction of a physical keylogger

2) the potential compromise of the machine's bootloader, to introduce keylogging or similar

In reference to #2, it seems to me that such an attack could be detected by having the encrypted machine checksum the bootloader immediately after the encrypted container(s) are unlocked. If the binary responsible for checksuming the bootloader (and the reference checksum) are stored in the encrypted container itself, this would be a reliable and effective means of ensuring that one had *not* been compromised in this manner, wouldn't it..? Do any full-disk encryption systems incorporate this feature? Would it be difficult to add in?"	t5_2qq4h	True
1372758110.0	1hhknl	How to convert challenge/response into input for oclHashcat?	De_Lille_D2	4	2	0	"Hey,

I need to convert a [PEAP](http://en.wikipedia.org/wiki/Protected_Extensible_Authentication_Protocol) challenge/response (from a Radius server) into input for oclHashcat.

[Here](http://wirelessdefence.org/Contents/FreeRadius%20Wireless%20Pwnage%20Edition.htm) is an example of the challenge/response:

* challenge: 15:37:16:6d:49:77:76:d3
* response: c5:0e:63:87:c6:7f:b8:6f:97:0e:ef:d1:9f:d0:f3:a0:9a:8d:f8:42:43:06:68:12

I need to convert this so I can feed it to oclHashcat. So far, I've used the script on [this page](http://blog.opensecurityresearch.com/2012/04/capturing-and-cracking-peap.html) (made by Reddit user winfang!) to convert the format (it also mentions that the hash is a NetNTLM hash): 

* challenge: 1537166d497776d3
* response: c50e6387c67fb86f970eefd19fd0f3a09a8df84243066812

[Here](https://hashcat.net/wiki/doku.php?id=example_hashes) is a list of example hash formats for oclHashcat input.
[Here](https://hashcat.net/trac/ticket/98) is a page that details NetNTLM format, but I haven't been able to find this info elsewhere.
[Here](http://hashcat.net/wiki/doku.php?id=oclhashcat_plus) is the oclHashcat-plus help file.

Apparently, I need 3 parts: LM respnse, NTLM response and Challenge, but I only have the last 2.
Can I generate the first part? Am I using the wrong hash algorithm in oclHashcat?

Main question: How do I crack the example challenge/response using oclHashcat?

"	t5_2qq4h	True
1370760882.0	1fyz10	UX Problems Holding Back Crypto And Anti-Wiretapping Technology	whitefangs	8	6	1		t5_2qq4h	False
1366112985.0	1cgf2o	Two Encrypted Notes from the 1999 Murder of Ricky McCormick (xpost from /r/UnresolvedMysteries	mothafaka	9	7	0		t5_2qq4h	False
1362826678.0	19ysyj	Is this method for exchanging private key using RSA sound ?	neoneota123	5	4	12	"Bob know's Alice's public key, and he wants to make sure he's connecting to the one which has that key. Furthermore, Alice wants to verify when she gets a connection from Bob who'll give his public key that he is indeed the one who has that key.

Bob will send Alice half the AES private key and half the initialization vector which he generated randomly, both encrypted using Alice's public key.

Alice would reply by sending back what Bob sent + the other half of the AES private key and the initialization vector which she generated randomly as well.

Afterwards communication begin using AES crypto stream with a key composed of the two halves both exchanged. If a crypto exception was thrown at either side at any point, the connection will be terminated. No third message will be sent from Bob to Alice to verify that he got her part of the key, the AES stream will begin directly after Alice's message.

Note: I thought about using Diffie-Hellman, but what I didn't like what that the private key agreed upon would be the same for every session assuming the two parties will not change their public keys.

Is this enough for both to verify that each one is the actual owner of the claimed public key, and to exchange the AES symmetric key safely without creating potential security issues ?"	t5_2qq4h	True
1362197360.0	19i8hv	Quantum Crypto &amp; SSL?	roverroverman	5	3	5	Given that someone/something is recording all data encrypted using SSL, will quantum computers eventually allow for SSL to be broken? Will the entire recorded history of the internet be able to be viewed?	t5_2qq4h	True
1360797307.0	18h58y	Cryptology Project: Eliminating Brute Force Weaknesses: Market Research Survey	Festivefire	11	10	39	"Hello, Redditors!
I am an engineering student in the CREST program at Paradise Valley High School and I wish to conduct a survey for a cryptology project. My engineering team, consisting of myself and two others, are currently in the early stages of developing a new, experimental algorithmic technology in an attempt to eliminate susceptibility to brute-force attacks and conceptual variants. Prior to doing so, we must execute some preliminary market research. It would be appreciated for you to complete our survey and distribute it to others. The survey may be found [here](https://docs.google.com/forms/d/1n5bCyHiJzqx78gySaOQs1DQgBhwJc8p2YCrXrTp1ZAQ/viewform). please note that by invulnerable encryption, we mean invulnerable or insusceptible to brute force, not impervious to all methods of decryption (such a thing would be impossible)
Thanks in advance,
-Zachari Darian, Cody Partin, and Hunter Ferguson"	t5_2qq4h	True
1350978333.0	11xplj	Challenge Response Authentication	gcov2	2	0	4	"Hello fellow reddit cryptographers!

I am working at a project where I have to give a talk about challenge response authentication (and later implement it maybe) and I thought maybe one or some of you have some especially good papers or links to recommend. Would be nice!

Thanks, a fellow redditor."	t5_2qq4h	True
1338783565.0	ujot7	gpg: [don't know]: invalid packet (ctb=48)	sebosp	3	1	5		t5_2qq4h	False
1337840441.0	u2dwu	Block size of AES-CBC?	brianethan	3	1	3	Does anyone know if the block-size of AES-CBC mode is fixed? And at what size is it for, eg, AES256?	t5_2qq4h	True
1336656668.0	tgfqu	Is modern encryption needlessly complicated?	cruise02	4	4	3		t5_2qq4h	False
1335568656.0	sw1s2	I had an idea about government issued ID cards last night.	DPErny	3	1	3	"I was lying in bed thinking last night about a story I'd heard about someone with a fake ID, and this came to me.

Obviously, given enough technology, anybody can make a reasonably realistic fake ID card. What if, however, one embedded some sort of data storage device in the card, such as an RFID chip. It would store a small amount of data unique to the card among that a picture of the owner. (That picture is the hairy part; we're still waiting on the tech for this, I think.)

This data would be produced and cryptographically signed by a government computer. This way, anybody simply has to use the government's public key to verify that the card is legitimate.

What is the viability of such a design?"	t5_2qq4h	True
1334261347.0	s6pgz	Some thoughts on post-quantum cryptography	cryptoguy	3	1	3		t5_2qq4h	False
1331998141.0	r0uvd	Cryptography Question 1: Block cipher repetition	etbrute	5	3	6	"Is there something in the construction of block ciphers that dictates the repetition period of a single input being repeatedly encrypted? 

Put another way, if I encrypt a single 128 bit block repeatedly with the same key, is there any restrictions on how many times that block must be encrypted before I get the original block back? Is there any reason to believe all possible 2^{128} blocks will be produced before the original shows up again? 

Put a third way, if we generate a group-theoretic multiplication table with elements defined as the number of encryptions (1C, 2C, 3C, etc.) will we see a cyclic group over the whole GF 2^{128} space (e.g. a Toeplitz matrix), or will we observe subgroups? "	t5_2qq4h	True
1327649606.0	oyvqx	Playfair cracker resource	torridzone	4	2	2	"Hi everyone, I was wondering if anyone had a good resource for cracking the playfair cipher. I'm looking for a program that can take an enciphered message and reveal the message, but I'll also be happy with a list of common English digraphs and their frequencies.

Any help would be greatly appreciated."	t5_2qq4h	True
1317302904.0	kv8tl	Ron Rivest On Fixing SSL, APTs and The Future Of Security	TheloniusPhunk	4	2	0		t5_2qq4h	False
1308794558.0	i6rgs	Off server key used in conjunction with server key for cryptographic operations?	DudeWheresMyQuran	4	2	4	I'm using RSA keys from a keystore to encrypt configuration file settings. The usual enveloping of data with AES and RSA. However I would like to add in an off-site key, that must be used in conjunction with the on-site RSA keys, to achieve decryption. So if someone were to gain admin level control of the box, and hence the RSA keys in the keystore, they would still need a key from an off site server to decrypt the data in the configuration files. Does anyone have any ideas as to how this could be achieved?	t5_2qq4h	True
1308477086.0	i3hzq	ask r/crypto: I am having an hard time understanding Garbled Circuits, can you help me?	minifig	3	1	2	"What I know is that are used to perform secure computation of arbitrary functions.

Like A want B to perform a function f, but don't want B to know both f and the result.

So A build the garbled function of f, say f*, and send it to B along with the input x. B perform f*(x) and send back the result to A for evaluation.

My problem is that I don't really understand how to build f * . What I know is that f has to be a boolean function, then for each wire W of f the constructor assign two randomly chosen garbled value, w0 and w1, then for each gate create a garbled table T that allow to decrypt the output key from the gate's inputs. And the garbled circuit per se consist of the garbled tables of alla gates.

So my big concern is HOW the constructor works in details? How the garbled tables works exactly?

Also if someone can point me toward some documentation it would be really helpful. I've read the original Yao paper but crypto is not exactly my field :(

Thanks!"	t5_2qq4h	True
1308442753.0	i3963	RSA Laboratories - Wireless Access-Control Research Project (WARP)	isisgrimalkin	4	2	0		t5_2qq4h	False
1308428531.0	i34mi	NTRU 0.6 released	pgupta1984	4	2	0		t5_2qq4h	False
1308249803.0	i1fxi	Researchers Successfully Eavesdrop On Quantum Encrypted Communications	Brattain	5	3	2		t5_2qq4h	False
1307793290.0	hx3i6	An implementation of Manger's Oracle, and a timing attack in libgcrypt	aviewanew	4	2	0		t5_2qq4h	False
1306442759.0	hky6k	Does this cryptography algorithm exist?	AnonymousHermit	8	8	15	"Is there any encryption algorithm such that I can have an encrypted string that contain two strings encrypted at different times, and decrypt the entire thing once with a single key?

The use case is that I have a secure sender, receiver and intermediary, all three are trusted entities that have access to my keys. 

The sender encrypts the message and the receiver decrypts the message. 

Between the sender and receiver, I want the intermediary to append a string to the message. Normally, the intermediary will have to decrypt the message, append the string to it, and re-encrypt the message. This is a computationally expensive function that I'd like to streamline.

For example:

1. Sender encrypts ""Hello, "" and sends to intermediary.
2. Intermediary appends the string ""world!"" to the original string, and sends the final, encrypted message to the receiver.
3. Receiver decrypts the secure message once and receives the string ""Hello, world!""


Is there any way that the intermediary can do magic with the encrypted message and append an encrypted string such that it doesn't interfere with the receiver's ability to decrypt the message once to receive both the original and appended string? 


"	t5_2qq4h	True
1300215026.0	g4l0q	Would /r/crypto mind giving me the lowdown on KeyScrambler?	bedsuavekid	3	1	13	"I encountered this plugin for the first time today while hoovering my housemate's trainwreck of a laptop. I had never heard of it before today, and it strikes me as a reasonably good defence against keystroke loggers. 

But I'm also somewhat sceptical about the amount of lag it would introduce to a system. Can anyone comment about the effectiveness of the software? Does it cause a performance hit?

If you've also never heard of it, check it [here](http://www.qfxsoftware.com/)"	t5_2qq4h	True
1295577449.0	f67q2	Cipher Cracking - Students from Adelaide University take on the Taman Shud Mystery	flyingblogspot	3	1	4		t5_2qq4h	False
1295394175.0	f4qsg	CipherSaber: write your own RC4 encryption program! Old page, sort-of-weak cipher, but a good first crypto project.	mr_bitshift	3	1	1		t5_2qq4h	False
1285790717.0	dknyb	Any idea what was going on here?	bondiblueos9	6	4	10		t5_2qq4h	False
1280837197.0	cwsxy	ECM MARK 2 and CCM MARK 1 - Operators manual	ethicszen	2	0	0		t5_2qq4h	False
1246638312.0	8xz1o	Two Centuries On, a Cryptologist   Cracks a Presidential Code - WSJ.com		4	2	0		t5_2qq4h	False
1246488351.0	8xfr8	A new attack on AES	johnlunney	3	1	0		t5_2qq4h	False
1243601678.0	8o7e6	Mission Impossible: The Code Even the CIA Can't Crack	cruise02	6	5	0		t5_2qq4h	False
1241802626.0	8iy8e	CUDA based implementation of parallelized Pollard's Rho algorithm for ECDLP	stillbourne	4	2	2		t5_2qq4h	False
1241111843.0	8gt6l	OTPChat idea		4	2	16		t5_2qq4h	True
1235688248.0	80lqs	SMS4 Cipher as a Spreadsheet	apotheon	4	2	0		t5_2qq4h	False
1229628106.0	7ke0v	AskReddit: My PGP key is 1024-bit DSA. Is this good enough for normal usage, or should I revoke and re-publish with something stronger?	phyzome	5	2	3		t5_2qq4h	True
1376611952.0	1kgedh	IronKey Backup	Dolpheus	3	2	3	"I used to have an 8GB Ironkey, and it was great. Luckily, I made a backup of it shortly before it getting stolen. So, I contacted IronKey support, and they said that I cannot decrypt my backup file--*even though I know the password to decrypt the files*. They said I'd have to purchase another Ironkey of equal or larger size, then restore the backup to that key, then I could have my files.

I no longer have a need for an IronKey, so I don't want to do that. Does anybody know how to break that encryption given that I know the password?

Thanks ahead of time!!!

tl;dr: I need to decrypt an IronKey backup file that I have the password for."	t5_2qq4h	True
1374661228.0	1iy4x6	Cryptocat: Adopting Accessibility and Ease of Use as Security Properties	riveravaldez	3	2	2		t5_2qq4h	False
1364147656.0	1ax898	My Secure P2P VOIP Spec; Please Critique	doomrobo	2	1	8		t5_2qq4h	False
1364070287.0	1avk4o	Some standard cryptographic algorithms	ritratt	7	4	0		t5_2qq4h	False
1362890554.0	1a0chl	Should I use Ubuntu FDE During Install, or Truecrypt After Install?	mikebiox	4	3	7	"I am doing a fresh install of Ubuntu 12.10 and it gave me the option of encrypting the drive, and my home folder. Should I take this option, or just do a regular install and then encrypt the drive with Truecrypt (which then gives me the option of a hidden partition)?

Thanks,"	t5_2qq4h	True
1362861782.0	19zjtg	Wiping LUKS-header, need help with calculations	Uplus0021	4	3	4	"First of all, sorry if this is the wrong place. I thought this might be too specific for /r/netsec or /r/linux.

So, I'm trying to make a script for wiping a LUKS-header, and only the header.

According to LUKS' [FAQ](https://code.google.com/p/cryptsetup/wiki/FrequentlyAskedQuestions#5._Security_Aspects) (See 5.4), I can calculate the size of the header using the following formula:

    (keyslots x stripes x keysize) + offset bytes

Using the standard options, this should be exactly 1.052.672 bytes.

To get all the pieces for the calculation, I call the following command:

    cryptsetup luksDump &lt;disk&gt;

The relevant parts of that command is, AFAIK this:

    Cipher name:               twofish
    Cipher mode:      cbc-essiv:sha256
    Payload offset:               4096
    MK bits:                       256
    AF stripes:                   4000
    Slots:                           1

So my formula looks like this:

    (1 slot * 4000 stripes * 256 bits) + 4096 = 1.028.096 bytes

However, if I set the amount of stripes to 4096, I get the correct amount of bytes:

    (1 slot * 4096 stripes * 256 bits) + 4096 = 1.052.672 bytes

I then made a header-backup using cryptsetups internal command:

    cryptsetup luksHeaderBackup --header-backup-file &lt;backup-file&gt; /dev/&lt;disk&gt;

The size of &lt;backup-file&gt; was excactly 1.052.672 bytes, so something's wrong with my first calculation.



**Question**

What's wrong here? The number of AF Stripes seems to be wrong in my calculation, even though it's based upon a luksDump command."	t5_2qq4h	True
1360463182.0	1885le	Life, Death, and Splitting Secrets [xpost/programming]	phyzome	5	4	3		t5_2qq4h	False
1358276939.0	16msxq	PGP an attempt to understand	fereck1	5	4	8	"I have been tasked with creating a few FTP jobs at work and do not understand PGP encryption.  I've currently been going around with a tech support guy from another country trying to get my FTP job to work.  Any help would be welcome.

The PGP encryption process as I understand it is as follows:
1. Recieved a public key from the organization that wants to have encrypted messages go to them
2. Add other corporations key to key ring
3. Create key pair and send public key to corporation
4. Encrypt the file with the public key that was given to you by other corp
5. sign file with private key that was newly generate
6. Send file via binary transfer to other corp who also has binary mode enabled.
7. ??
8. Profit

I keep getting told that the file does not decrypt am I missing a step?  Keys that were generated have 2048 bits.  Passphrase for private key is correct.  Using encrypt and sign in one step not first encrypting then signing."	t5_2qq4h	True
1349994336.0	11c146	detontech.com challenge found in NYT	wrudebusch	9	6	5		t5_2qq4h	False
1343207563.0	x4gso	Bitlocker encryption corrupted my entire drive trying to figure out what went wrong so it won't happen again. 	5uperuser	14	12	10	"I am trying to understand better the concept behind how a professional would go about recovering an encrypted boot sector and how the data behind this particular standard (i'm assuming AES?) can be reversed (if at all) 

I would like to educate myself so that I can preventative measures from letting something like this from happen again. Also this question is very targeted and I've found /r/techsupport not to be very specific in terms of area specialization.

This is a 32 gb SanDisk Cruzer key drive."	t5_2qq4h	True
1342531041.0	wp70s	An idea for Truecrypt	FuZzY_BuBbLeS	2	1	2	"Would it be possible to implement hard disk serial number checking in Truecrypt, so that a container could only be mounted from a specific hard drive, or FDE would only allow booting from the correct disk? This could help in access control, and also prevent an adversary from imaging a drive and trying to decrypt it somewhere else (because they only had the data, not the drive with the specified serial number). Or can hard drive serial numbers be emulated/faked by Virtualbox etc.? I would fiddle with the Truecrypt source code myself but I don't have the time or the skill to make sure my implementation was secure.

I guess it wouldn't have to be a hard drive serial number; it could be any token unique to that drive."	t5_2qq4h	True
1315152395.0	k4fut	Redefining the Password System	Vektorical	5	4	7		t5_2qq4h	False
1310661660.0	ipk3c	RSA Conference 2011	Cruzade	9	1	0		t5_2qq4h	False
1310653918.0	ipgay	Help design a binary-oriented writing system?		5	5	2	I'm sort of a crypto hobbyist, mainly in the computer, but I have always been devising my own handwriting systems for fun and for privacy. For a long time now I've been considering making a binary oriented handwriting system. I intended to make some one time pad encryption and since that's basically just an XOR, thought it might be interesting visually if the pre-xor and xor'd symbols were visually reflective of their yin/yang sort of nature. My basic ideas for the symbols were sort of position sensitive pieces that you either include or don't include- and I considered making it such that a line through one of those pieces meant the piece was times 2 or something as well. Anyway, I thought I'd run it by reddit and see if anyone wanted to put their brain into coming up with something really elegant. This is purely for hobby and academic interest. Handwriting one time pads in binary is obviously not the fastest thing, but if you've memorized the ascii values for A-Z, a-z and 0-9, it shouldn't be too bad. Moreover, I figured I could make a computer font and print sheets of one time pad in the font as well. Then its just a matter of writing the message, visually assembling with the one time pad, writing the encoded message, and crossing the used one time pad symbols. So, anyone interested?	t5_2qq4h	True
1296376922.0	fbqgn	libperseus (python + java binding)	adesnos	3	2	0		t5_2qq4h	False
1279321349.0	cqh16	Looking for tables 	rutmath	1	0	3	I'm looking for frequency tables of letters. Would love to find single letter, 2 letter pairs and three letter pair frequency tables for monoalphabetic substitution cipher decryption. Any help would be appreciated. 	t5_2qq4h	True
1257237846.0	a0fz5	Marian Rejewski and the First Break into Enigma	cavedave	3	2	0		t5_2qq4h	False
1245189510.0	8t36w	Old link about how FileVault was blown wide open, PDF and source code	johnlunney	2	1	0		t5_2qq4h	False
1241951636.0	8jash	How can cryptography help political dissidents in opressed countries communicate with foreign journalists safely?	lmaurits	3	2	2		t5_2qq4h	True
1241126368.0	8gvfy	Hellman and Rainbow Tables	Monkeyget	2	1	0		t5_2qq4h	False
1376618315.0	1kglx0	Steganography in Real time in a game	tja-	2	2	4	"Basically:
Heard that user data (from any source, database, memory etc.) can be embedded in real time into the rendering window of a game (by altering the frame buffer data).

I think it's bullshit and would like to be proven wrong.


What I've got so far:

I dont know any steganography software that works in real time:


* S Tools 
* Steganos Suite 
* Camouflage 2.0 
* Dmagic 
* Hermetic 
* Stego 
* jpeg-jsteg 
* Snow 
* Steghide
* wbStego


All do their embedding post image, not during the drawing of the image.


The world of warcraft etc embedding is done when using the **game engines screenshot function**.

Apparently the guy who found the WoW stegnograph **used the screenshot function** on specific settings. [Thread on WoW stephograph](http://www.ownedcore.com/forums/world-of-warcraft/world-of-warcraft-general/375573-looking-inside-your-screenshots.html). 

Take note of this: 

&gt; The secret watermark which is being intentionally embedded inside **WoW generated screenshots** below top quality

&gt; Do note that this covert watermarking has been confirmed, by multiple sources, to have started immediately or soon after Patch 2.1.0 in 2007 (before the Activision deal), **which introduced JPG screenshots** for the first time

&gt; It looks like when Blizzard decided to add JPG screenshots into the WoW client, they also teamed up with [Digimarc](http://www.digimarc.com) to provide us this wonderful service of secretly tagging our **in-game screenshots** with our account and realm information


Does this not seem slightly odd? It's not being embedded in real time, it's being done via the **in-game screenshot function**, and for some reason still not being done at top quality.


Not saying they don't encode data, just that using your own screen capture device and not the in game screenshot will not produce a code.

When you're playing a game the pixels are being drawn in line by line (per pixel vertically, but an entire horizontal line AFAIK) in real time, there's no way you could embed a bunch of queer code like information into the rendering window as the initial data of the render hasn't been made fully yet so the extra data can't be hidden within it?

The image you're seeing while playing a game is not a JPG like the screenshot taken by the in game screenshot function. So it can't carry the data.

Also from that WoW thread: ""Thanks to _Mike, we also verified that there is no pattern included in high quality screenshots like TGA and JPG/10""

Seems to me like people are far too tin-foil hat at the moment."	t5_2qq4h	True
1375458570.0	1jkitr	Cryptocat questions	john_alan	6	6	10	"Hello all,

I came across this https://crypto.cat/ - it seems very cool,

2 quick things.

1. does it keep chat logs or a record of chats?
2. if I create a room, there is nothing stopping strangers from joining and ruining the private chat?"	t5_2qq4h	True
1374230909.0	1imh50	proposal: keccak pbkdf	pint	4	4	34	"so i thought, since we have keccak now, with all the versatility it offers, why not use it as a swiss-army-knife kind of key stretching, key derivation, safe storage mechanism? i have experimented with it a little, and came up with this scheme. anyone care to look at it? and maybe some criticism/comments if you have any.

here is a brief, maybe too brief, description i put together:

https://docs.google.com/document/d/1kq6f3o-30ao7Dq4CGvBYL0SwzqdSNU0t4JN3r-7kdfk"	t5_2qq4h	True
1373026435.0	1hoqyr	SecureGmail Encrypts Your Gmail Messages with One Click	whitefangs	5	5	3		t5_2qq4h	False
1372698168.0	1hfp9h	Played around with ciphers. Is this a bad idea?	orre	2	2	0	"I was reading and playing around with ciphers the other day and thought of making a kind of reverse One Time Pad with Vigenère cipher where the cipher text is random instead of the key.

This gives me the chance to give a cipher text many meanings depending on the key entered.

Is this a bad idea?
Some info on my thoughts: http://oskarhane.com/playing-with-ciphers/
Demo: http://oskarhane.com/deniable-vigenere-cipher/

It's in JavaScript so check the source if you're interested.

All thoughts are welcome."	t5_2qq4h	True
1372366226.0	1h7c3i	Please help explain crypto voting	habeanf	2	2	1		t5_2qq4h	False
1372033301.0	1gxroe	Question on encrypting my traffic with a provider and emailed keys.	anhydrous	2	2	6	"Because the key was emailed to me, Private Internet Access being my provider, does that allow anyone who has access to my account/email to negate that encryption?

The NSA is the boogeyman of the moment, so let's say they have access to my email, am I only encrypting against those that have no prior access?"	t5_2qq4h	True
1371203414.0	1gbvdq	Proposal: Create a browser plugin to secure social media communication (or: bring control of privacy back to whom it belongs -&gt; the user) #blindfoldNSAprism [x-post r\crazyideas]	milkmilmi	7	7	0		t5_2qq4h	False
1370524263.0	1fsde1	For cryptographic hashes such as SHA-512, are all outputs possible? : compsci	eleitl	2	2	0		t5_2qq4h	False
1370411451.0	1fpeta	Differential Cryptanalysis for Dummies - my attempt at a crypto talk	jkthecjer	3	4	1		t5_2qq4h	False
1370178147.0	1fim8z	Has anyone made any headway with HElib?	OlderThanGif	1	1	2	"HElib is IBM's open source implementation of the fully homomorphic Brakerski-Gentry-Vaikuntanathan scheme.

In my spare time, I've been fiddling with the HElib code and going through Gentry's thesis at the same time. I've got some toy examples going and that's about it. I can quickly build circuits to the point where the noise becomes too large to decrypt, which is expected. My understanding is there should be some mechanism to ""bootstrap"" (simulate the encryption) in order to get the noise levels reset, but I can't find this in the code.

I know Gentry's thesis isn't entirely relevant anymore because BGV has moved beyond it, but I thought BGV still worked on bootstrapping. Maybe I should abandon reading Gentry's thesis and read the papers published from IBM. HElib doesn't come with any documentation (hardly any comments in the code even) so it's a slow struggle to figure out what's going on.

I'm just curious if anyone else has been playing with fully homomorphic encryption and what sort of progress they've made.

Edit: Ah I just reread the README (which I first read before I had any notion of anything). This explains a lot. Still, I'm very curious how much people have done with library.
&gt; We still do not have an implementation of bootstrapping, hence so far we can only support ""leveled"" HE, where the parameters must be set large enough to evaluate the desired functionality."	t5_2qq4h	True
1369924758.0	1fc6pu	Strength of a block cipher applied on its own key vs classic hash function ?	Elyotna	2	2	2	"Dear /r/crypto redditors,

after a lot of googling, the internet seems very poor on that matter, so I'm going to ask away here : 

what's the strength of a block cipher (e.g AES-128) applied on its own key ?

There I mean : AES(""key"", ""key"")

In english : Encrypt the key, with the key. The key becomes also the plaintext.

If an attacker gets hold of the ciphertext, and that he knows it's the key encrypted with itself, does he have a better chance to recover the original key ?

How is that compared to a classic SHA-X ?

For example, you could store your user's passwords this way instead of using a classic HASH-function.

Thanks in advance for your answers"	t5_2qq4h	True
1369514116.0	1f1ogv	GPG 3072-bit DSA/ElGamel Key Security?	FFC7420D	2	2	5	"Hello all. Throwaway because I don't want my normal reddit account linked with my real life identity. 

I created a GPG key in November of 2010. At the time, I selected a DSA/ElGamel key, 3072-bits in length. Recently I was perusing the internet and came across [this](http://www.debian-administration.org/users/dkg/weblog/48) debian post discussing migration from DSA 1024-bit to RSA 2048-bit because of the vulnerability of SHA-1.

My GPG key ID fingerprint is 7A96 A45E 1603 6FCB EA72 146D 33D6 60E9 FFC7 420D.

Is my much larger key vulnerable to this? My message signing algorithm is SHA256. Here's a signed message:

    -----BEGIN PGP SIGNED MESSAGE-----
    Hash: SHA256

    Hello world!
    -----BEGIN PGP SIGNATURE-----
    Version: GnuPG v2.0.20 (GNU/Linux)

    iF4EAREIAAYFAlGhGJUACgkQM9Zg6f/HQg1LiAEA5zWe5gN5JMih8CGti+E9+XVB
    MWxe67vUJ2dvMqZQRCwA/i5dTLZk3uEx57Lx0zgnHMpc374W6z1HO+obU7i3CySm
    =G7E/
    -----END PGP SIGNATURE-----

If I were making a key today, I'd use RSA 4096-bit, but do I need to generate a new RSA key and revoke my old DSA one because of serious security vulnerabilities?"	t5_2qq4h	True
1369345927.0	1exj9k	Algorithm to analyze	Newbiedoodle2	2	2	2	"So I wrote a simple encryption algorithm and, first, posted it to /r/cryptography to see if they could break it, because someone said that would be a good place. Unfortunately, I forgot to read the sidebar and so didn't see the link there to /r/codes, I will post it there in a bit. Anyway, [this is the link](http://pastebin.com/uhv8jREB) to the code. There are a few things I plan to add (Adding random characters to the string, for example).

The way it works is by going through a 3-step process:

1. First, it adds a pseudorandom value to each letter, which basically makes it a fancy and pseudorandom Caesar shift
- Second, it scrambles the letters around using that same PRNG as before.
- Lastly, it adds a sprinkling of random characters that are not the same each time. However, they ARE in the same place.

A few things that I would greatly appreciate:

- A decryption algorithm
- Ways to improve performance.
- Ways to make it more secure.

Note that, with all of these, something written in Java would be ideal, but even if its just a written description, that's still just as good.

By the way, consider the code open-source. Use it wherever you like, maybe as an extra layer to whatever you use."	t5_2qq4h	True
1368825879.0	1ejivp	Breaking VISA PIN	notlostyet	2	2	0		t5_2qq4h	False
1368711140.0	1eg6j5	Help me describe/identify this challenge-response protocol/algorithm (an intruder alarm anti-code decoder)	cybergibbons	2	2	2	"My area of expertise is reverse engineering, specifically embedded systems. I do attack cryptographic systems, but this largely involves key recovery or exploiting the implementation.

I was asked to reverse engineer a simple Windows executable used as part of a challenge-response protocol used for intruder alarm systems. This was trivially easy. I would like some assistance in describing the protocol/algorithm, so that I can look into the security of the system more.

**The protocol**

The protocol is designed to stop users resetting their alarm without contacting their alarm receiving centre.

a) When the alarm is triggered, a message is displayed:

&gt; CONTACT ARC 

&gt; QUOTE 83647

This is called the ""*quote code*"" and is always numeric and 5 digits long. I don't know how it is chosen, but it appears random.

b) The alarm user calls the alarm receiving centre and informs them of the quote code.

c) The alarm receiving centre inputs the quote code into a piece of software (the ""decoder"") which returns the numeric 5 digit ""*reset code*"".

d) The user is informed of the ""reset code"" and inputs it into the alarm. It is accepted and the alarm is disarmed.

The alarm and alarm receiving centre share a secret which is a number from 0-255, this is called the ""*version*"".

So at a superficial level, both the alarm and alarm receiving centre are doing:

&gt; ResetCode = F(QuoteCode, Version)

Where the QuoteCode and ResetCode are integers in the range 00000-99999 and the Version is a number between 0-255.

**Algorithm implementation**

This is my basic implementation of the algorithm used to generate the reset code given the quote code. The vector at the top is altered, but the rest is the same.

    # Taken from the data in the exe
    vector = [3,3,5,5,8,1,3,9,8,0,5,9,3,9,4,1,1,0,9,4,3,0,2,2,8,4,3,2,8,4,9,4,1,3,3,3,3,8,5,3,0,2,4,3,2,1,8,9,0,5,4,3,9,5,8,3,9,9,1,0,0,9,9,3,3,8,2,
             1,4,9,1,4,9,2,9,0,9,5,3,9,5,3,3,5,9,1,0,2,9,3,2,1,2,9,8,0,4,9,4,2,3,9,4,0,1,8,5,3,3,9,9,1,0,5,9,3,8,9,4,8,4,2,3,1,0,3,9,4,8,2,0,4,3,3,
             1,0,5,2,8,3,3,5,2,8,3,2,9,5,2,1,2,4,4,3,0,4,2,3,4,1,8,2,9,1,0,5,1,8,2,4,3,5,1,0,3,8,5,3,2,1,1,3,9,3,2,3,5,8,3,9,0,3,2,3,5,3,8,4,0,3,9,
             1,9,3,0,2,9,3,8,1,4,2,8,4,0,1,9,1,0,1,2,1,3,5,3,3,9,0,2,1,4,1,2,3,4,3,4,9,5,3,5,9,3,1,3,9,4,0,3,2,3,3,4,4,2,1]

    
    def generate_reset(quote, version):
        i = 0
        tens = 0
        reset = []
    
        while i &lt;= 4 :
            j = 0
            result = 0
    
            while j &lt;= 4:
                offset = (version + tens + quote[j]) % 256
                result = result + vector[offset]
                tens = tens + 10
                j = j + 1
    
            reset.append(result%10)
            i = i + 1
    
        return reset
    
    print(generate_reset(quote = [0,0,0,0,2], version=131))

I have run several simulations (simply by looping through all combinations of inputs), and noted the following:

1. The coverage of reset codes for any given version number across all quote codes is between 60-70%. This means that you have a higher than 1/10000 chance of guessing the correct reset code randomly.

2. Given a quote code and reset code, most of the time there is only a single valid version number. At most, two pairs of quote and reset codes are needed to derive the version number. The ""version"" isn't very secret as a result.

**Questions**

I hope these aren't too vague, or broad.

1. What would you call the type of algorithm? To me it looks like a hash with a key - does this make it a MAC?

2. Does this specific implementation have a name? It looks very ""roll your own"" but the vendor uses the phrase ""military grade"".

3. Are there any glaring issues with this algorithm? (I'm not expecting someone to do a full analysis, just some pointers would be great). My gut feeling is that the secret ""version number"" is not long enough to provide adequate secrecy."	t5_2qq4h	True
1368637706.0	1ee5by	[xPost from /r/Python] I made a small module to perform transparent encryption of temporary files using session keys. Could I please have some feedback?	omginternets	2	2	0		t5_2qq4h	False
1368508497.0	1eaqaq	Create my own hashing system, how do I	conradsymes	5	5	6	I don't want a secure hashing system, I'm not planning on publishing it. I just want one that would make secure passwords based on predetermined seeds. Any suggestions?	t5_2qq4h	True
1367964872.0	1dw3iw	Secret Sharing in Practice	MeleeIslandTM	1	1	1	I was hoping someone could tell me some of the current ways people are using secret sharing.  I'm not as much interested in the applications of secret sharing in other cryptographic protocols, but more common scenarios in which people use it.  Thanks!	t5_2qq4h	True
1367550973.0	1dliiy	I figure this is the place to come to find people experienced in cryptography. I'm looking for a partner to head up the Internet Education Initiative.	Cogito4816	4	4	1	"To be completely transparent, this is about the fifth or sixth post I've made in pursuit of a partner to start this -- I just posted this over in /r/CryptoAnarchy too, but it looked kind of dead.  I'm sorry if that seems like spam, but I feel strongly that this is something that needs to be done, and I'll keep looking until I can find someone.  So, here's what I propose:

The idea behind the Internet Education Initiative is quite straightforward and rooted deeply in the CryptoParty Handbook ([PDF](http://weise7.org/tmp/cryptobook-v1.1.pdf)).  I want to teach people about the Internet.  That includes how to use it to find reliable sources of news as well as different viewpoints on events, about the wealth of free software that exists which respects one's privacy, and how to operate on the Net safely.

The Internet is one of the most valuable resources that we have today.  In fact, it will make this generation great.  I know that sounds hyperbolic, but think about it:  The Internet is a neutral platform, which can be devoid of oppression or censorship, on which people from all races and creeds can collaborate.  All of the ideas and beliefs, all of the talents and abilities, all of the minds could work together to solve all the problems of the world if we taught people to use the Internet and use it safely.

Of course, that's a long way off, but we have to start somewhere, don't we?  And that's why the Internet Education Initiative is something that we need to start up.

The Internet is scary to some people, and understandably so.  There is a lot that goes on, whether it be human trafficking or the distribution of illegal content as well as viruses and just plain malicious people, all lurking in the dark depths of the Internet.  But, the Internet is so much more than all of that -- it has so much more potential than the hands that have stained it.

Recent events only evince the malfeasance and ignorance (both terms meant in the least derogatory way possible) surrounding the Internet.  People simply don't understand it.  The Internet, to a lot of people, is just Google, Facebook, and Wikipedia and that's okay.  Those three things capture the essence of what the Internet is capable of:  the sharing of ideas, the collaboration of people, and the acquisition of knowledge.  We just need to teach people to go deeper and to do it safely.

Now, I don't claim to be some Internet or software savant.  I've put in place many insurances, whether they be software or habits, to ensure my privacy and safety, but I do not, truthfully, understand them.  That's why I'm looking for someone skilled in cryptographic practices and technologies.  In order for us to teach each others, we must first learn, and that's what the Internet Education Initiative will be all about.  Teaching people how to do things, like find reliable and opposing sources of news to get a better view of events, like visiting platforms on which they can discuss and share ideas, and like arming themselves with tools to protect themselves on the Internet.  But there are only so many people that we can reach through the Internet itself.  Many people will never hear of us if they don't venture as deep into the Net.  That's why the Internet Education Initiative will not only teach people how to use the Internet, but also to teach other people to use the Internet.  Hopefully, we can found groups within communities who can reach out and teach others in a friendly way outside of the Internet.

Not only will we teach people about how to use the Internet, but the Internet Education Initiative will also stand as vanguards to the Internet, besides organizations like the Electronic Frontier Foundation, the Free Software Foundation, and the American Civil Liberties Union.  We'll teach people about the threats that the Internet faces and what we can do to ensure that remains a free platform.  Of course, we will aim to be as un-hyperbolic as possible, aiming to teach people with impartial information rather than feed the FUD machine.

So, that's the Internet Education Initiative in a nutshell.  Of course, cryptographers are not the only ones welcome to join in.  Anyone who has any talent or ability, or anyone who just wants to help me spread the word -- please do.  The Internet is home to all, and the Internet Education Initiative can be the people's school."	t5_2qq4h	True
1366157749.0	1chyht	Banking PINS Entry Theorie	bpr2102	5	5	3	"Hello everybody, 

I am a university student trying to understand a simple system used by many banks. The PINS Entry gadget. I am a bit confused and would like to read up on this more and would like to consult your help.

For this case, lets take the Barclays Online Banking:
You need 3 things to login to your online account:

1. Membership Number 

2. Debit/Credit Card + PIN

3. PINEntry Gadget

The gadget: http://farm2.staticflickr.com/1218/1438197131_1e0d474266_z.jpg

**The process:**

1. When you log in, you specify your membership number and the last 4 digits of your card. 

2. You put your card into the pinsentry and click on respond, enter your PIN and a 8-digit number is generated.

3. Enter 8-digit respond number into the online form and login.


So this  is the process, now what about the cryptography. **How simple is that system and how secure is that ?**

I assume that the card holds some basic information such as the card number. The gadget itself has some sort of algorithm working with a timestamp or some sort of generator of the bank to create a 8-digit number. 

Is the same number generated on the server side as well ? If so, how is that possible ? The server does not know when and how fast I type in the 8-digits. Obviously people are different, an older person might be slower than a younger one. How can it come up with the same number, when there is a time difference of 5 minutes ? I can still login after 5 minutes. I could create also 20 new 8-digit numbers within that 5 minutes. Each of them would be valid. How does that work? 

Since there is no password set, and only the 4-digits of the card and the PIN is used. What is actually checked? I assume that the 8-digits of the PINSentry responde message is used as the initial IV for an AES counter mode encryption? 

I would be interested if somebody could tell me about the theory behind this and what I need to read up. 



"	t5_2qq4h	True
1358657571.0	16wyek	Defeating AES without a PhD (or Use Crypo Properly)	B-Con	2	2	0		t5_2qq4h	False
1352901282.0	136i79	Nonblocking crypto API	gcov2	6	6	10	"So I'm doing this project and I need to find a good crypto API for Java or Javascript maybe which is nonblocking.


Any tips from more experienced cryptographers?


I really appreciate it. Thank you."	t5_2qq4h	True
1352209666.0	12q7vs	"Whats the website that starts with a ""3""?"	format120	2	2	3	"I think it's in base 64 or something, it's just a bunch of numbers.  It looks like it was written in the 80's because it's all green text on a black background?

Yeah you know the one."	t5_2qq4h	True
1350066257.0	11dl6t	So I understand Diffie-Hellman for two parties, but can someone explain (or point me to a resource) how this works for more than two parties?	eaggegea	1	1	1		t5_2qq4h	True
1347995789.0	103e14	Where to download command line PGP software?	InterPunct	6	6	6	"I opened my mouth to my client and told him that we could safely encrypt payroll data files using PGP, that it was free and open source and we could easily script it. I guess it's been a while because everything I try to find now is owned by someone (*&lt;cough&gt; Symantec &lt;cough&gt;*). At this point all I want to do is give him a small proof-of-concept on my laptop so we can move into a development phase. 

Can anyone recommend where I can download a command-line version of PGP (or a modern equivalent) that's also licensed for use in a commercial environment? This is for a Windows platform. "	t5_2qq4h	True
1345964235.0	yuf8h	Recommended # of iterations when using PKBDF2-SHA256	B-Con	1	1	2		t5_2qq4h	False
1345533660.0	ykjus	Need help with an easy PGP system, true public-key if possible7 , GUI interface for a political project.	JimMarch	2	2	1	"Folks,

I have a group discussion that needs to happen among a bunch of non-technical users...think ""granny who barely knows how to operate IE, but can follow simple instructions"".  Not the usual ""geek user"" set.  This is time-sensitive urgent, we're meeting in person tomorrow, flying on meet up once.

To make it worse, there's a mix of Windows/Mac and in my case Linux going on, although I can run something in a VM on XP or Win7 if need be.

Advice sought.  Thanks!"	t5_2qq4h	True
1337870909.0	u2t5l	Point me to some graphics that explain an IV?	bearsinthesea	2	2	4	"Can anyone point me to some basic graphics explaining the purpose and use of an IV? Most people seem to think it is just like a seed for a PRNG. Many programmers use a static IV for all their encryption. I need to explain to some programmers exactly why the IV must be random for each encryption. Some graphics (more than what is in wikipedia) could help a lot, I think. Then I will follow it up with this:

[http://www.di-mgt.com.au/cryptoCreditcard.html](http://www.di-mgt.com.au/cryptoCreditcard.html)

Thanks!"	t5_2qq4h	True
1335985827.0	t3q08	Al Qaeda Steganography	fraggle42	1	1	3		t5_2qq4h	False
1334124719.0	s3yje	Can anyone identify what cipher this is? 	his_place	2	2	4	"Both of these messages are encrypted the same way with the same cipher, message, password and salt.   Can anyone identify what the cipher is?  Trying to see how easy it is to identify the type, etc.  TIA 

    tuBetTr+7YFmbmFwIhFkjQ63tDleXAIsJrmiqapdZZRGw2gbg4jrAMZ6HTuPmxHUOvOv6DSf41tc9x0pFfoonpEMXXJrhw8at7KsAZtFHli9kzTOpAiqdszHSgfccqde/AOEvmXKCHyCVb2G+GvOrYkopVlI2H5nrT6HZioxQ11sRQ1sdRWq1lrhZ75EpKBADEWwYqIt8TymdZMOeCPFtnWMtRd4ukLYdaebiZB30n1JPnlRKpSKtewo73AoPO56yR90V3VuqYKAeI72lGl9qx1bYjVDrnriz/UCSDODdu8dgS1aU0naPXeVfC0yTpzL4Ytz6DmG0GKu1YLJpnqzYayma6H+kDCbKQHgwdM5iaaDTo8kDdFv6CK6Ojhy3L7fZvcyvYcQcLa8iK33x9lczquYpabLIZ8FYvbJJOMZFQl0HE/8YxCvyYxqTl4w5UePFLo4eGvNA3DtGV0GzzzT51O9d9gu71GjppZqMFiWBLtfsYsO9WVDI4F5uSXHzaGoQ=


    C59CfcbXPTCU4I88NiCakQfTbnlwZhpWgyCpvLkc/a2qL6hkfi7Kx+P/QU4Of6WwG7m+Thbk6Ie2PuY6yAKDaOSlbIHdQXBOpRz60vGX4XJCOYpkvF6WDBWdOtiFsfgyEpu7hkQWPrAPQ1fLGGKs66ZjrZ4K7/PCen/r3wGlWT2cnryzkMopEJfdzL7aFUjK3bInmBxKs4yBTw0KMPk1qHsfREAqs2ushOmucS1xbU/MLe4JSbfFXn1mXYc9sI78uD+PMQ9p6ldSuJ9srievhOGrWcj35vMPoDt+kcNF/jQnsknyu/yNory6mDoBFOAIG6c3f9YP2mbV92l+XlcYb+L1VVamWXEq82cBgSRrIXcjA9+So5Yfpn/DA47YkxxOE9lwUIFMPyCgFxqC3sr5j64ijmjbjsYVAgSvSn2yhj3XloDLg1uslHSYIJnhzWqNS6t0c2QZgoGwAGSRY+FrxEx/1WIPgZOTqx8tikrvFNgypFQ3IuWIHdApHUjNlo0FQ=
    "	t5_2qq4h	True
1333078504.0	rke7b	Bruce Schneier Facts -- It's awesome!	Forgott3n	2	2	0		t5_2qq4h	False
1332080606.0	r20xa	One Time Pad Cryptography	babkjl	3	3	1		t5_2qq4h	False
1332030473.0	r1fn7	I have a problem understanding the CSS LFSR that dvds use	Doc_st0rmy	2	2	0	For example the LFSR1 gives us output of 00001000 (8 decimal) and the LFSR2 gives us 00000111 (7 decimal), then we add them and we have 000001111 (15 decimal) all good till here now its the part i dont get: 15 mod 256 = 15 (so that must be the carry-out) BUT what is the cipher that we will XOR to encrypt the data?? if it is the result of the 15/256 should it be one because it is larger than zero, OR it should be zero because it is too small and so it is negligible? To be more specific 15/256 = 0.05 which i want to believe we cant XOR it to encrypt the DvD's data	t5_2qq4h	True
1331998811.0	r0v9f	Cryptography Question 5: Best symmetric algorithm (in theory)? 	etbrute	2	2	4	At this time, what is regarded to be the best symmetric cipher algorithm from a standpoint of theoretical attacks? By this I mean what cipher is presently regarded to be the most resistant to attacks on the algorithm (cryptanalytic) and not physical attacks such as side channels. 	t5_2qq4h	True
1331998683.0	r0v6o	Cryptography Question 4: Streams with non-optimal information content	etbrute	2	2	0	"If we have a source of information, say an RNG or a stream cipher, but it is flawed such that each character produced does not provide a full unit quantity of information (as defined by Shannon), then how long can that source be useful before it is compromised? 

As an example, there is Bruce Schneier's Solitaire algorithm which exhibits a bias towards repeated characters. Because of this bias, each produced character is slightly more likely to be the same as the preceding character than what it should be; at any stage, the next character is not truly random. As such, each character does not provide a unit of information content, but slightly less, so that after about 7000 output characters, we will have lost one unit of information. How long can the output stream be used before this information loss makes cryptanalysis practical (or easy)? "	t5_2qq4h	True
1331998425.0	r0v1t	Cryptography Question 3: Are there Asymmetric cryptosystems that are not based in Group Theory? 	etbrute	2	2	2	RSA, Discrete Logarithms, and Elliptic Curves all are mathematical problems that define a mathematical group where the public (encryption) key is a single element of the group and the secret (decryption) key is the other group element that is the element that is the inverse. Do systems exist that work on different mathematical principles? 	t5_2qq4h	True
1331920941.0	qzocb	Encrypted Parameter	digitalice	3	3	1	"Hey crypto! Last day I was playing a facebook game and when I finished the level,
the flash app sent this data using POST:

http://pastebin.com/i6U48Cxf

Any idea of content/encryption type?
Thanks"	t5_2qq4h	True
1331101132.0	qlebn	Question about SHA1	dropcode	1	1	2	"I have an unlimited number of SHA1 hashes generated by the same hashing system, and I know some information about the plaintext for each one, For example:

    c6cde13f5de830d47b4e0caf645ceb62d018fd15
is one hash and it's somehow made up of this timestamp: 2012-03-06T22:35:30 and this integer: 5447960.

how could I go about figuring out how those values are laid out when passed to the hashing system?"	t5_2qq4h	True
1329338694.0	pr79z	TrueCrypt hidden volume question	marklarledu	1	1	5	"I was reading the TrueCrypt documentation on hidden volumes and operating systems and didn't quite understand how full plausible deniability is achieved. From the documentation on hidden volumes:

&gt; TrueCrypt first attempts to decrypt the standard volume header using the entered password. If it fails, it loads the area of the volume where a hidden volume header can be stored (i.e. bytes 65536–131071, which contain solely random data when there is no hidden volume within the volume) to RAM and attempts to decrypt it using the entered password. Note that hidden volume headers cannot be identified, as they appear to consist entirely of random data.

From the hidden operating systems docs:

&gt; When you enter a pre-boot authentication password, the TrueCrypt Boot Loader first attempts to decrypt (using the entered password) the last 512 bytes of the first logical track of the system drive (where encrypted master key data for non-hidden encrypted system partitions/drives are normally stored). If it fails and if there is a partition behind the active partition, the TrueCrypt Boot Loader (even if there is actually no hidden volume on the drive) automatically tries to decrypt (using the same entered password again) the area of the first partition behind the active partition where the encrypted header of a possible hidden volume might be stored (however, if the size of the active partition is less than 256 MB, then the data is read from the second partition behind the active one, because Windows 7 and later, by default, do not boot from the partition on which they are installed). Note that TrueCrypt never knows if there is a hidden volume in advance (the hidden volume header cannot be identified, as it appears to consist entirely of random data). If the header is successfully decrypted (for information on how TrueCrypt determines that it was successfully decrypted, see the section Encryption Scheme), the information about the size of the hidden volume is retrieved from the decrypted header (which is still stored in RAM), and the hidden volume is mounted (its size also determines its offset).

Why can't the person forcing you to reveal your password see that the password authentication failed on the first attempt and succeeded on the second attempt, thus proving that you are mounting the hidden volume? Is it because you could put your *real* volume as the first or second volume and your adversary wouldn't know the difference and couldn't prove that you have a second volume? If that is the case, is it possible to make the first volume attempted always be random noise (and not decryptable) so that your adversary wouldn't know by the failure of the first decryption attempt that you are showing a hidden volume?"	t5_2qq4h	True
1327393734.0	ou90m	One time FDE	throwawayagin	1	1	4	Does one time use full disk encryption exist? For instance a bootable pen or cd that will encrypt a disk while traveling and then decrypt after arriving at your destination? I'm already aware of truecrypt's ability to decrypt permanently but it seems like overkill. 	t5_2qq4h	True
1326177971.0	oajod	Implementation of cryptography.	LyTeo	2	2	5	"Where could I find information about technologies and devices that uses cryptography. I have found like 10 books about cryptography, but there is little information about implementaiton. 
Thank you guys for information!"	t5_2qq4h	True
1325478298.0	nzdhr	An interesting idea	lachiemx	2	2	2	"Read this on another forum and the idea intrigues me. What are everyone's thoughts about this?

-----------


I used to work in tech support for an encryption startup called ""Authentica."" They eventually were bought out by EMC and their product didn't go anywhere.

From what I learned of encryption is that it goes letter by letter, and ""cracking"" encryption is about trying different algorithms until you start getting clear text, which the computer recognizes as clear text and the encryption is cracked.

Why not use numbers to words encryption though? Can anyone tell me if this is not a better way? Basically, you take the words from the dictionary, assign each word a string of numbers (like using Perl key-value pairs, the number is the key, the word is the value), and write an algorithm so that each time a word repeats, it uses a second and third and fourth string of numbers so you can't crack it based on repeating number patterns.

You keep the encryption/decryption software on computers that are not connected to the Internet, and use a USB drive to transfer the messages to the un-networked computers and back.

it seems to me this would be harder to crack than encrypting letter by letter.

-------"	t5_2qq4h	True
1321363423.0	md1ke	I have a 99 Character encrypted message, What types of encryption might be in be using?	autotom	5	5	6	"Unfortunately I can't post the code, I dont want it to show up on any search engines. If you leave a comment I'll happily send you an orangered with the key.

I have a key that is likely to decrypt it.."	t5_2qq4h	True
1320151455.0	lwcyp	Hi crypto-guys, I created this javascript client-side-app for my favourite password-scheme, SHA1-hashed passwords. Comments welcome.	jerguismi	3	3	8		t5_2qq4h	False
1317298207.0	kv6yp	xpost from /r/codes - Need help with some Base64 encoding!	aconite33	1	1	3	"Doing a local competition here in town. I'm in 2nd place, and I can't seem to decode this base x64.


Was in a file called ""key.dat"" :


Np/SNWKcNazf4FP6ivK uQKAv9yIKFIRK47Eqj/xwg2v 4AegMHhJx2tk5pyTKUjHnyuSVhhGZcSw2o53cpV8ID xo1/XjdNuNZKqB gMNgt8ee2N4So876hW1GfcypLp2nYoJ5SZMGxwxM5lNmqQuJ6NmGmq+Rd4a1ZVw8CO62kTa38Vzbx/2pW96cDLgF9DxVXx/PpkSQY7VeGLP616WIToWw2TliyvyDw7PHLEYutEEIIYdHlJZBNldoGtsQep1Ue7niTtvqMSvZCKAJBV4JHVirX1UIxMCV7oVbg5Hy37f8xQdvHS3O73BJPa8mPe1MK/pA1ygeSLYrqGK6n3t34DnZttQfBLeUG6/DaU6fBhWBeBSmWc45IM56WYldIkpGIoeBhs36eZiamKNWH13epXhNYFKOM1zlV6OgSL+JGOn86WMf8T6G6iU/gHOVVmYzU6ZTdXzg4QzDJIgp2M0e7iZZybhzA+Nm5cLoEIrM6XTMzLnEe/Ck32QLxUmRICplFbthKY2Q/Cnf1jzskQ1wBiJYUNVtx4+abG6cHAuQVMcwW80Z3b4am4ycouZBz8BoEA6J65qJPUvodEkyF4onl5uYp5OhhV6Flw+wCoy34dq6IVXPlRXf/VaZurSHPpKsK6B0QFRykormSeHUqnMIWp00ICqOYTq6i11wWyC5pj7BhrbkXP7keJSj+Iib47M


It looks like x64 but decoding it renders gibberish. Could it be xor'd before hand? I tried putting the decoded Base64 into a file, header of the file read 36 9F, couldn't find any viable information on this.

Any tips?"	t5_2qq4h	True
1315168534.0	k4nf9	My best idea of the week. Thanks guys.	lumberingJack	2	2	1		t5_2qq4h	False
1314195257.0	jsvh1	PHP 5.3.8 Released, Fixes Crypto Bug	TheloniusPhunk	1	1	1		t5_2qq4h	False
1311110854.0	iu77j	Free copy of Applied Crtptography	ollybee	1	1	0	I have a copy of Applied Cryptography ISBN 0471117099 that I will post to anyone who will cover the postage cost from the UK. I will accept bitcoin.  	t5_2qq4h	True
1308600780.0	i4m6g	CrypTool is a free, open-source e-learning application, used worldwide in the implementation and analysis of cryptographic algorithms.	bobwobby	2	2	0		t5_2qq4h	False
1306882289.0	holg8	Made an online file encryptor, thought you guys might like. Questions? Comments? Suggestions? [XPost netsec]	peteyb1313	4	4	11		t5_2qq4h	False
1304359554.0	h2fk3	Is this an ok way of doing things in order to enable users to supply shorter than normal keys?	haywire	1	1	2		t5_2qq4h	False
1302700337.0	gp12g	How Dropbox sacrifices user privacy for cost savings		2	2	0		t5_2qq4h	False
1301502690.0	gesj7	My first crack at cyphers and encryption.	taffy-nay	1	1	8	"Been playing with Cyphers and Encryption. Can someone try and decode this for me and let me know how you did it so I can work on the weaknesses.

8C29D23D2JD2AH1  
AH28D25D2AH14C2  
AH16D22C2JC2AH1  
  
  
2D25C22C20C2AC2  
4D2AH12C29C25D2  
0D28C2KD23C25D2  
  
AH1QD2AD2KC2QC2  
5C2AH17C28D25D2  
AH14D22C27D22D1"	t5_2qq4h	True
1298987481.0	fv1cp	Hey Experts: How secure is Password Safe? (TIA)	clemdia	4	4	5	"I'm trying to be good boy and use a different password for each site I visit, but I need a good way to store them (impossible to remember so many passwords without them being significantly similar).

Question is: assuming I have a 20+ character password (mixed case, numbers, special characters), just how secure is a Password Safe file? If my laptop were stolen, what's the chance of someone cracking that file?

EDIT: Twofish encryption algorithm? Does that mean something to you, the crypto experts? Is it good? Is it inaccurate to say there is only on factor of authentication with this program (your master password)? Is that really bad?"	t5_2qq4h	True
1294880016.0	f18s1	Google Recruiting Crypto Code (Old?)	tleisher	1	1	1		t5_2qq4h	False
1293662410.0	etbha	Where can I find the exact WEP specification? 	jfasi	1	1	2	I'm a CS student, and I'm curious about how WEP was attacked. WEP is apparently clause 8.2 of the 802.11 specification, but I can't seem to find the document itself. I just discovered this subreddit, so I'm not sure if this is the sort of question you guys answer, so I'm sorry if this is too involved. 	t5_2qq4h	True
1284582015.0	decnu	An easy cypher from the webcomic Questionable Content.	ModernRonin	3	3	2		t5_2qq4h	False
1269312574.0	bgw9m	The new Chuck Norris?	phmongeau	2	2	0		t5_2qq4h	False
1268686565.0	bdrhh	Spooks scramble to replace failed secret messaging system	igeldard	1	1	0		t5_2qq4h	False
1265997151.0	b1crw	"AskCrypto: ""So ... mostly for fun I made this program that generates a pseudo random 20 character passphrase for me when I wish using a-z+A-Z+0-9 as characters..."	LocutusOfReddit	4	4	0	"an example:

FEKfVsW60ULpO4ofgCLX

Now, I find some encryption experts saying that is not really secure. That maybe 30 or more characters are needed.

I realize this is may be a little off topic for students of cryptography, but I wanted your opinions. 

edit:

I would think that even with the older ""easily decryptable"" zip format, such a random 20 char. password would be VERY hard to crack. No?"	t5_2qq4h	True
1253648797.0	9n2b3	Thoughts On Encryption	blogannath	6	5	1		t5_2qq4h	False
1251145283.0	9dpkz	Substitution ciphers in Cryptol	dons	4	4	0		t5_2qq4h	False
1248675188.0	94uf0	Tech Talk: Mathematics of Cryptography: A Guided Tour	dons	2	2	0		t5_2qq4h	False
1246580893.0	8xs69	"""Fully homomorphic encryption"", data encrypted in a way that allows calculation to be carried out on it without decrypting it! This is big."	johnlunney	2	2	0		t5_2qq4h	False
1241497768.0	8hwc5	EMC Community Network - ECN: Community: RSA Share	antarest	1	1	0		t5_2qq4h	False
1241077402.0	8gomu	The electronic payment industry uses Triple DES and continues to develop and promulgate standards based upon it	khammack	2	2	0		t5_2qq4h	False
1376533326.0	1ke62x	Let's talk about file headers.	moscheles	5	8	6	"The following image is a random JPEG file opened in something called a Hex Editor. 

+ http://i.imgur.com/xQ6MnWl.png

The header of a JPEG file is quite elaborate, and contains a peculiar stream of 0x01 bytes. Then paragraphs of very-low entropy alphabet strings ""56789HIJKLMNOPQRST"" etc. 

To date this JPEG header file was a mystery to me. To a cryptographer, it is altogether obvious what this is for. If an attacker makes a presumption that your plaintext is a JPEG file (an altogether valid assumption), then these weird headers could be some sort of backdoor for the attacker.  The fact that this header appears at the smackdab beginning of the file is too suspicious. The use of a plaintext attack on this header would work wonders.  An entry-level guy at the NSA could discover your key before he even goes to lunch.

Does anyone know some material that deals with the fact that plaintexts contain well-known headers?  I don't see this little nagging point addressed anywhere on wikipedia (for instance). 

Your thoughts...?



"	t5_2qq4h	True
1375836393.0	1jumx6	Crypto Assignment question	kousuke	2	3	5	"Hi guys, I am new to crypto and have a question from an assignment I am doing.

Here is the question.
http://i.imgur.com/A2ifd8N.png

What I am stuck on is that the letters and binary that I am given give me the cipher text of KHHLTK and KTHLLE. I want to find the plain text but I do not know the keys of either. 

Ciphertext here: xxx
Key here: xxx

XOR those two lines to get the plaintext. But I do not know the key or the plain text. Is my mind of thinking right or wrong? 

"	t5_2qq4h	True
1373446341.0	1hzwjk	Heml.is, developed by the founders of Flattr, is yet another secure messenger	Rhymoid	1	2	1		t5_2qq4h	False
1373262090.0	1huja5	Question- Is it possible to do Bulk Encryption on GPU using Bitslice approach?	crypt_hc	1	2	4	"I am interested to do AES bulk encryption on GPU as of my project. In this regards, i have found many papers discussing bulk encryption on gpu using Lookup Table approach. I didn't found any paper which discuss bulk encryption on GPU using Bitslice approach. There is a paper titled ""Symmetric Key Cryptography on Modern Graphics Hardware"" by Jason Yang and James Goodman which discussed Bitslice implementation of AES and DES on GPU for Key-search applications. 

One paper titled ""Fast, Scalable and Secure encryption on GPU"" mentioned that above Bitslice implementation by Yang needs a lot of input dependent preprocessing and is thus completely unsuitable for HPC applications.  It seems that it is not beneficial to do AES bulk encryption on GPU using Bitslice approach. 

Can anybody Please explain and assure me whether bulk encryption on GPU using Bitslice approach is possible or not?

thanks in advance!"	t5_2qq4h	True
1372785668.0	1hib6v	"Why is it called ""brute force"" when the technique involves more speed than power?"	solomania9	4	5	6	The name has always seemed mis a misnomer to me. Anyone else?	t5_2qq4h	True
1371877646.0	1gub6b	What is a good Crypto	tiredlv	2	3	6	I am new to the crypto deal and want to learn. The sad thing is that is is so confusing. I've looked at Trucrypt, but it is so confusing. Please help me understand. I have hard drives I like to keep safe. Thank you	t5_2qq4h	True
1370651268.0	1fwdev	Is Cryptocat mobile still available?	kotor610	1	2	0	"Is the iOS and/or android app still available? I saw a post on the cryptocat blog describing it back in 2011. It linked off to a video demonstrating how to install it on iOS, yet the video is no longer available.

Just wondering if anyone knows if they scrapped the app or are planning a rerelease?"	t5_2qq4h	True
1369384814.0	1eylyu	Homomorphic Encryption with HELib: A Quick Start	tom-md	1	2	0		t5_2qq4h	False
1368780484.0	1eiaiy	Java Script Crypto	Factum_Est	1	2	2	"How psuedo random are the results of this generator?
window.crypto.getRandomValues
Can it be trusted?

Edit: here is the url https://developer.mozilla.org/en-US/docs/DOM/window.crypto.getRandomValues"	t5_2qq4h	True
1368538405.0	1eb9nc	Advice on a secure fingerprint visualization scheme	cmars323	3	4	2	"I had this thought today, of ways to visualize a cryptographic hash that would be easier to recognize than a long string of hex digits, a QR code, or an abstract ASCII art.

Assume an engine that can deterministically generate a cartoonish, Spore-like character where each bit controls an attribute (skin/hair color, mouth type, eye type, pose, etc) from a string of bits. It produces a memorable, unique creature from that fingerprint, kind of like nature.

It might be easier to recognize your public key's avatar at a glance. These might also help non-technical users to verify downloads.

What would the security pitfalls be in such a scheme? One thing that comes to mind is the potential for creatures so close together that it is easy for an attacker to spoof by creating a character that looks almost the same -- kind of like those ""circle the picture that's different"" puzzles in a kid's coloring book. Could this be overcome with better encoding (mixing, instead of one-bit-per-feature? a simulated DNA expression that controls the features?) Are there other issues with this sort of scheme? Has it been tried before?"	t5_2qq4h	True
1368240110.0	1e3xcb	Forensic detection of LUKS/two-factor authentication setup	sectr9	2	3	0	"During a forensic analysis of a machine that uses dm-crypt with LUKS is it possible to detect if a two-factor authentication setup is present? I.e. two keyslots - one passphrase, one keyfile.

This question lends toward the discussion of plausible deniability (not in the strictest interpretation). In a scenario short of involving rubberhose does it yield to protest that the keyfile is lost/unknown/destroyed when in reality there exists only one keylot, which is occupied by a passphrase?"	t5_2qq4h	True
1367965298.0	1dw436	Comparison of TLS implementations - Excellent tables summing up protocols support for the main libraries	wasthatacat	3	4	0		t5_2qq4h	False
1367425554.0	1dhm04	Setting Up And Using Bitmessage – An Encrypted Communications Platform Based On Bitcoin	CryptoJunky	3	4	3		t5_2qq4h	False
1366481998.0	1cr4of	Why does ECC with a 256 bit prime only has 128 bit security?	hyh123	2	3	7	"I saw this conclusion somewhere, e.g. wikipedia said

&gt; For example, for 128-bit security one needs a curve over F_q, where q ≈ 2^256.

Why is this? I assume this means with about 2^128 attempts one can figure out a private key from public key, is that right? How? (If one naively test every possibility, he would have try ≈ 2^256 times.)"	t5_2qq4h	True
1366301092.0	1cm22p	A code a man can make another man can break	kafrofrite	5	7	9	"Reddits, what's your opinion about the saying in the title. And btw if you have any references on the topic, they are more than welcome.
Kafrofrite"	t5_2qq4h	True
1363940006.0	1asfd4	Bitmessage v0.2.7	HostFat	2	3	2	"0.2.7

* Added API. See API Reference.

* Added error handling for the case where the client tries to send a message from an address for which the human has deleted the keys.

* Improved GUI messages when doing work (or pending work) for broadcast messages.

* Added error handling for the case where the proof of work takes practically no time.

https://bitmessage.org/wiki/Main_Page"	t5_2qq4h	True
1363627270.0	1aj8pq	Preprint: The Vernam cipher is robust to small deviations from randomness. TLDR: One-time-pad is probably still secure.	mnp	2	3	0		t5_2qq4h	False
1363486539.0	1afyhk	Free One Time Pad Encryption Program	innoncent1	3	4	0		t5_2qq4h	False
1362408951.0	19n1lw	Prepare for 'post-crypto world', warns godfather of encryption	CognitiveJots	1	2	1		t5_2qq4h	False
1361676628.0	1945b8	never bring tequila to a key signing party (xkcd)	null_radix	2	3	0		t5_2qq4h	False
1360686048.0	18dsyg	String and file encryption generator (for developers)	montanafrench	1	2	0		t5_2qq4h	False
1358753548.0	16z8cv	Need help in finding a book on Cryptography.	guissmo	3	4	1	"Is there anyone who knows where to get ""A Graduate Course in Applied Cryptography""?"	t5_2qq4h	True
1358294015.0	16nfd6	Encrypt everything with Phil Zimmermann's new suite of tools 	whitefangs	12	13	6		t5_2qq4h	False
1358230224.0	16lrq1	Question about key exhaustion (and why something is insecure) (Cross-post from r/Cryptography)	Salusa	3	4	0		t5_2qq4h	False
1357834417.0	16bi03	AES based CTF challenge [x-post from /r/codes]	forstalker	2	3	0		t5_2qq4h	False
1356497280.0	15gbk7	I was hoping you gentlemen could throw out some knowledge to the un-informed in this thread[x-post from r/politics]	dr3dg	7	7	2		t5_2qq4h	False
1355235165.0	14ny6f	Is there a safe encryption JS(?) library for web apps to stop data mining?	thats_how_you_cook	1	2	3	"If you were building a web application where you wanted the data kept secret from the host, what would you do - is there a Javascript library that does this effectively (ignoring man in the middle attacks). 

I have read some of the previous posts on this (2010), but with the recent increase in mining of personal info in the last couple of years I'd have thought this would be a huge incentive for new applications to encrypt data at the browser so they cant be targeted for ads."	t5_2qq4h	True
1354903545.0	14gd71	Is cryptography a noun or a proper noun?	ritratt	8	8	5	"Pardon me if my question seems very trivial, but I am writing a statement of purpose for a University. I want to mention that I like cryptography but I am not sure if it should be cryptography or Cryptography.
"	t5_2qq4h	True
