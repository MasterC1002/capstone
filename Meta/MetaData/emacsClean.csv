created_utc	id	title	author	ups	downs	num_comments	selftext	subreddit_id	is_self
1368821702.0	1ejdu6	How to Learn Emacs: A Hand-drawn One-pager for Beginners	sachac	110	17	23		t5_2qhwu	False
1320308759.0	lysb0	Emacs Rocks!	shubhamharnal	101	12	14		t5_2qhwu	False
1367436821.0	1di1at	Let's have a Emacs tips thread!	StudentRadical	101	13	116	"Time is ripe for a new tip thread, since the last one was oh-so-long ago!

I'll start with a simple tip (that I embarrassingly didn't figure out any earlier than today):

In Dired, you can get rid of timestamp field by adding ""--time-style=+"" to variable **dired-listing-switches**. This works as '+' by itself is empty format for 'date' command. This works at least with GNU ls."	t5_2qhwu	True
1360573788.0	18au81	xkcd: Workflow	ani625	90	12	6		t5_2qhwu	False
1317393564.0	kwhnc	Best Girlfriend Ever!!!	daysaver	99	25	11		t5_2qhwu	False
1355840874.0	151w64	What the .emacs.d!? - A blog about emacs settings from Magnars the Emacs Rocks guy	the-fritz	83	8	5		t5_2qhwu	False
1273315417.0	c1f0i	Emacs 23.2 released! Lots of changes. CEDET is now part of Emacs.		79	5	9		t5_2qhwu	False
1359273053.0	17d0cw	The WikEmacs experiment is over! Long live EmacsWiki!	bozhidarb	89	15	17		t5_2qhwu	False
1266095929.0	b1r8a	/r/emacs: Tell us about the obscure, but useful features of Emacs that you know about.	gnuvince	78	5	54		t5_2qhwu	True
1248923431.0	95unp	Emacs 23.1 released!	zhangsen	79	5	12		t5_2qhwu	False
1366136718.0	1ch5rw	What the .emacs.d	tpk1024	83	11	0		t5_2qhwu	False
1268320525.0	bc3io	Plans for Emacs 24	arvid	74	7	25		t5_2qhwu	False
1323727786.0	na581	What’s New in Emacs 24 (part 2)	mickeyp	74	5	4		t5_2qhwu	False
1301448326.0	ged5p	Emacs in Tron: Legacy (three images)	skeeto	81	15	19	"So I was watching a high quality version of *Tron: Legacy* and I was pausing to look at the computer screens, looking for anything interesting. That's when I noticed there's an Emacs buffer,

[First Emacs sighting](http://i.imgur.com/KW4Di.png)

The young Dillinger is using eshell to kill some processes to stop the young Flynn. 30k lines, he's been busy.

[eshell screenshot](http://i.imgur.com/TKx7R.png)

Apparently he was also goofing off a bit at the meeting.

[Tetris and hanoi buffers open](http://i.imgur.com/AynwU.png) (you can use this screenshot to determine the exact second this scene was filmed)

So, along with *The Social Network* where Emacs appeared all over the place, Emacs played a role in two big movies last year.

Edit: [here's another screenshot](http://i.imgur.com/62WPf.jpg), though not one with Emacs. This system is supposed to be from the 80's, and, while it looks like an authentic session, a number of anachronisms show that they messed up a little bit.
"	t5_2qhwu	True
1360772307.0	18g8l4	elisp: it's all Greek to Google Chrome	ianoxley	74	6	7		t5_2qhwu	False
1358594986.0	16vemq	What Nic Ferrier will be doing this year with Emacs.	nicferrier	80	12	20		t5_2qhwu	False
1363092564.0	1a57gy	If you use ido, make sure that you know about ido-restrict-to-matches	wadcann	67	5	21	"I'd been using ido for some time, but was unaware of `ido-restrict-to-matches` (`C-SPC` or `C-@`), which is quite useful.  Just in case someone else is in the same position, I thought I'd point it out; it lets you provide multiple substrings from the results that you want.

`ido` supports substring matching.  So, for example, let's say that you are trying to open a particular .c file in a directory.  You hit `C-x C-f` to run `ido-find-file`.  You think that there's only a single .c file in that directory, so you type "".c"", expecting only a single option to have that string in its name and come up.  To your surprise, there's both a foo-internals.c and a foo-externals.c file.

Well, if you deleted the "".c"" bit, and started typing ""externals.c"", that'd get you the file in question.  But that seems wasteful; you've already filtered the possible files down to just two.

You can simply hit `C-SPC` or `C-@` to save your existing set of matches, then plug in more criteria.  So `C-x C-f .c C-SPC ex RET` would get you the file that you want.

This is probably old hat to serious ido users, but I'd been completely oblivious to it, and certainly wanted it."	t5_2qhwu	True
1348443590.0	10d5h4	Emacs Rocks: multiple cursors	magnars	79	13	12		t5_2qhwu	False
1332905907.0	rh040	Introducing: WikEmacs	shubhamharnal	91	27	23		t5_2qhwu	False
1271635921.0	bst7w	"""Guile can implement Emacs Lisp better than Emacs can."""	semente	73	7	14		t5_2qhwu	False
1335046942.0	sltv4	"How Emacs changed my life - Yukihiro ""Matz"" Matsumoto"	cagedmantis	74	14	12		t5_2qhwu	False
1269215660.0	bgcd5	Emacs color-theme creator	vcrash	72	10	13		t5_2qhwu	False
1363890341.0	1aqw9s	I understand the vim fanboys will win, but we can't let Sublime beat Emacs...	shedwardweek	75	15	42		t5_2qhwu	False
1366327361.0	1cn3lm	Gmane -- Org Mode Release 8.0	cdkamat	69	10	9		t5_2qhwu	False
1323211376.0	n32yy	What’s New In Emacs 24 (part 1)	mickeyp	66	7	8		t5_2qhwu	False
1316780927.0	kozhe	How many of you swap the CTRL and the caps-lock key 	seansay	67	7	71		t5_2qhwu	True
1253709373.0	9nagc	Student: Do I have to use Emacs?	juvenn	69	12	12		t5_2qhwu	False
1371849611.0	1gtipn	"Emacs 23+ will automatically encrypt and decrypt files with names ending in "".gpg"""	vebyast	68	11	9		t5_2qhwu	False
1339337153.0	uuku1	Time for an upgrade - Emacs 24.1 is here	shortsightedsid	65	7	14		t5_2qhwu	False
1277827238.0	ck6up	M-x google-maps	mac	64	7	5		t5_2qhwu	False
1374780466.0	1j1pod	Learn #Emacs Lisp in 15 minutes (by Bastien)	cog2011	68	7	14		t5_2qhwu	False
1324712457.0	noy8j	Browsing the emacs manual at 7:40 in the morning with no sleep, i stumbled on this gem	sevkih	71	17	11		t5_2qhwu	False
1313851213.0	jov1m	nyan-mode.el - Turn your Emacs into Nyanmacs!	TeMPOraL_PL	72	14	10		t5_2qhwu	False
1294738866.0	f04rg	Neal Stephenson on Emacs		68	10	2		t5_2qhwu	False
1366654061.0	1cvl1f	Dealing with huge (gigabytes) files in Emacs	m00natic	63	6	11	"OK, this is second attempt (the first did not get to the rss feed
even) to announce [VLFI](https://github.com/m00natic/vlfi).  For those
who have tried to deal with files larger than RAM - this is
[vlf.el](http://www.emacswiki.org/emacs-se/VLF) on steroids.  As need
forced me, I added things like search, occur style indexing, editing,
jumping to arbitrary chunk and polish.  Hopefully it will be useful to
others as well."	t5_2qhwu	True
1315730011.0	kbx3l	A peek at Emacs 24		65	6	25		t5_2qhwu	False
1362971802.0	1a27f5	Emacs 24.3 released	atomic_rabbit	69	15	46		t5_2qhwu	False
1361158454.0	18qa15	Dired discussion	wadcann	65	10	20	"I'm curious as to people's opinions on [Dired](http://emacswiki.org/emacs/DiredMode), and what if any dislikes they have, or tips for use.

I'm writing this because I hope to inspire some people who have not tried dired to give it a shot.  I took a very long time after starting to use emacs to seriously try out dired: I'd been using emacs for years before that point, and really regret not having tried it beforehand.

I don't see a huge number of posts about it on here, and I wonder a bit whether perhaps a lot of people were just like me: holding off and having not really tried it.

For those who have not used dired, it's a file-manager that displays a menu of files and directories and permits operating on them.  The closest program to dired I'd seen beforehand would probably have been [Midnight Commander](https://en.wikipedia.org/wiki/Midnight_Commander).

I really like using dired or other file-managers when operating on files that are hard-to-specify-by-name, like filenames with foreign language characters in them or where I need to see the list of files to pick from.

Some basics: you can get into dired by hitting `C-x d`.  If you're not using ido-mode, simply using `C-x f` and opening a directory will also work.  Once in, ^ will move up a directory, navigating to a directory and hitting RET will enter it, and navigating to a file and hitting RET will open it.

You can also get a dired buffer containing a selected set of files: try `M-x find-name-dired` or `M-x find-grep-dired`.

You can flag files for deletion with ""d"" and execute flagged deletions with ""x"".  Hit ""R"" to rename or move a file, and ""C"" to copy it.  There is a [lot more to dired](https://www.gnu.org/software/emacs/manual/html_node/emacs/Dired.html), but that was enough to start me out when I started out.

Some init.el snippits that I find helpful for dired:

dired is smart about .tar.gz files, and lets one open a browser simply by hitting RET while point is on one.  It's also possible to make it do the same with .zip files:

    ;; Handle zip compression
    (eval-after-load ""dired-aux""
      '(add-to-list 'dired-compress-file-suffixes
                    '(""\\.zip\\'"" "".zip"" ""unzip"")))

I use ibuffer for my C-x C-b binding instead of list-buffers.  This has the ability to group buffers.  I tend to wind up with a lot of dired buffers, so it's nice to group them together:

    (setq ibuffer-saved-filter-groups
          (quote ((""default""
                   (""dired"" (mode . dired-mode))))))

By default, dired spends a lot of screen space showing the permissions and owner and modification time and so forth of a file: more than half of an 80 column display.  I very rarely want to refer to this material...I'd rather use the space for filenames.  There's a nice package called dired-details that will hide this by default and permit hiding and showing that information with `(` and `)`, and an add-on to that called dired-details+.  Some of the systems I work on have dired-details+ installed, and some don't, so I use it if present, and if not, ignore it so that loading my init file won't fail.

There's also a nice add-on called diredful, which permits assigning faces to particular filetypes.  I like to color-code images and .exe files, so I load that if present as well:

    ;;; Dired
    ;; Use details
    (add-hook 'dired-load-hook 'my-dired-load-hook)
    (defun my-dired-load-hook ()

      (if (require 'dired-details+ nil t)
          (setq dired-details-propagate-flag nil)

        (progn (message ""Notice: dired-details+ not present"")
               ;; If we don't have dired-details+, at least try for dired-details alone
               (if (require 'dired-details nil t)
                   (dired-details-install)
                 (message ""Notice: dired-details not present""))))
      (setq-default diredful-init-file ""~/.emacs-diredful.el"")
      ;; We can function on systems without diredful, even though it's nice to have
      (if (not (require 'diredful nil t))
          (message
           ""Notice: diredful not present; not using extended highlighting"")))

By default, dired shows filesizes in bytes.  This uses up a lot of screen space, and is usually not very useful to read: I almost never want the exact byte-size of a file, but rather a summary of how large it is.

Also, many file browsers these days auto-detect numeric fields, and if they are present, sort files numerically by that field instead of lexicographically.  And example would be three files: foo-1.zip, foo-9.zip, foo-14.zip.  By default, dired will first list foo-1.zip, then foo-14.zip, then foo-9.zip, because ""1"" comes before ""9"".  However, it's possible to ask dired to sort things numerically.  Here's how I ask for human-readable sizes and files sorted numerically:

    ;; Make sizes human-readable by default, sort version numbers
    ;; correctly, and put dotfiles and capital-letters first.
    (setq-default dired-listing-switches ""-alhv"")

Normally, when I try to copy a directory, dired asks me if I really want to do a recursive copy.  I always want to do this, and even if I didn't, the cost of accidentally starting a recursive copy isn't really all that bad.  This stops dired from prompting me:

    (setq dired-recursive-copies 'always)

Dired can execute a command on the file that point is currently on if you hit `!`.  However, this is a blocking operation: nothing else can happen in emacs while this is running.  This is obviously a problem if one wants to, say, play a movie or do some other long-running operation.  `&amp;` will start the command in the background.  Unfortunately, that stores the command's output in a buffer named ""Async Shell Command"" which will cause two running programs to crash into each other and complain.  It's possible to ask dired to come up with a unique name for each:

    ;; Allow running multiple async commands simultaneously
    (defadvice shell-command (after shell-in-new-buffer (command &amp;optional output-buffer error-buffer))
      (when (get-buffer ""*Async Shell Command*"")
        (with-current-buffer ""*Async Shell Command*""
          (rename-uniquely))))
    (ad-activate 'shell-command)

I use [emms](https://www.gnu.org/software/emms/), an emacs-based playlist manager and media player frontend.  I like having a keybinding to add the media files in an entire directory tree to emms from dired.

I also like to have an easy way to enter wdired, and do so with `C-c e`.  Instead of renaming a file one at a time, it's possible to use wdired, where a dired buffer becomes editable.  Make all the filename changes you want, using all of emacs' powerful text-editing tools, and then just hit C-c C-c when done to apply the changes.

    (defun my-dired-mode-hook ()
      ;; Let us have a key that puts the dired buffer into interactive renaming mode
      (local-set-key (kbd ""C-c e"") 'wdired-change-to-wdired-mode)
      (local-set-key (kbd ""M-p p"") 'emms-add-dired)
      )

    (add-hook 'dired-mode-hook
              'my-dired-mode-hook)

I sometimes use dired to open various sorts of files, and it's nice to be able to have dired be able to suggest the type automatically:

    (defun add-dired-extension-list (command extension-list)
      (mapc (lambda (extension)
              (add-to-list 'dired-guess-shell-alist-user (list extension command)))
            extension-list))


    (add-hook 'dired-load-hook
              (function (lambda ()
                          (load ""dired-x"")
                          (add-dired-extension-list ""mplayer -really-quiet --"" (make-regex-file-extension-list (make-file-part-extensions '(""avi"" ""mkv"" ""mpg"" ""mpeg"" ""mp4"" ""flv"" ""wmv"" ""rm"" ""asf"" ""wav"" ""VOB"" ""ram"" ""divx"" ""mov"" ""ogv"" ""flc"" ""swf""))))
                          (add-dired-extension-list ""xterm -e mplayer --"" (make-regex-file-extension-list (make-file-part-extensions '(""spx"" ""flac"" ""mp3"" ""ogg""))))
                          (add-to-list 'dired-guess-shell-alist-user (list ""\\.cbr$"" ""comix --""))
                          (add-dired-extension-list ""evince --"" (make-regex-file-extension-list (make-file-part-extensions '(""pdf"" ""ps""))))
                          (add-to-list 'dired-guess-shell-alist-user (list ""\\.pdf$"" ""evince --""))
                          (add-to-list 'dired-guess-shell-alist-user (list ""\\.cbz$"" ""comix --""))
                          )))

A common paradigm in text-based file managers is the two-pane [orthodox file manager](http://www.softpanorama.org/OFM/index.shtml); Norton Commander and Midnight Commander are among these.  I'm not a tremendous fan of these, but they do have one very nice feature: I often work with two directories, and do things like want to do many operations where I move files from one directory to another.  It's possible to ask dired to, if there are two dired windows open, suggest the other as a target for operations from the first:

    ;; Try suggesting dired targets
    (setq dired-dwim-target t)

"	t5_2qhwu	True
1348673009.0	10id66	Fractal Rendering in Emacs	skeeto	70	15	5		t5_2qhwu	False
1322747266.0	mw3vz	The Ultimate Collection of Emacs Resources		61	4	2		t5_2qhwu	False
1244575614.0	8r4qx	great org-mode tutorial	elq	60	5	0		t5_2qhwu	False
1369747894.0	1f74ll	GSoC 2013: Guile-Emacs	the-fritz	55	6	18		t5_2qhwu	False
1363009004.0	1a2wxc	What's New in Emacs 24.3	mickeyp	60	8	32		t5_2qhwu	False
1339831918.0	v4rex	Emacs co-maintainer wanted	kcin	60	4	1		t5_2qhwu	False
1329684009.0	pwsrb	Why I Still Use Emacs	gnuvince	62	12	22		t5_2qhwu	False
1297949282.0	fn6fb	A new major-mode for Python	skeeto	57	1	0		t5_2qhwu	False
1295590016.0	f6bd4	org-mode is awesome 	gst	59	6	14		t5_2qhwu	False
1365631323.0	1c3crm	Emacs Conference 2013 Videos	agumonkey	59	9	7		t5_2qhwu	False
1351454437.0	128esh	A modern on-the-fly syntax checker for Emacs.	lunaryorn	56	8	13		t5_2qhwu	False
1299441383.0	fyjgb	I just had my first patch accepted into Emacs! It's incredibly minor, but it's still exciting.	zck	63	10	7		t5_2qhwu	False
1348212906.0	108mae	Emacs Rocks: Working with HTML (2 min video)	magnars	51	3	2		t5_2qhwu	False
1333975674.0	s0pbm	An Emacs conference (emacsconf.herokuapp.com) is #1 on hackersnews. Let's show them reddit!	dlhero	54	2	6		t5_2qhwu	False
1321746749.0	mii0n	Why Emacs?		60	10	25		t5_2qhwu	False
1311506253.0	iyb9h	Emacs Tips n Tricks for Everybody	madpedro	59	10	0		t5_2qhwu	False
1299778239.0	g1b2c	Emacs 23.3 released	skeeto	52	2	7		t5_2qhwu	False
1346091271.0	ywy4h	Emacs 24.2 released today! (Aug. 27, 2012)	tsuru	58	6	10		t5_2qhwu	False
1341395830.0	w0xsh	Emacs Rocks! This time with live browser coding.	magnars	55	5	12		t5_2qhwu	False
1306515395.0	hlmsi	Let's just use Emacs	gst	57	7	4		t5_2qhwu	False
1366642957.0	1cv6y8	Disassemble C/C++ code under cursor in Emacs with disaster.el	jart	51	6	10		t5_2qhwu	False
1344907718.0	y6ejm	Impatient-mode -- see your HTML rendered as you type it	skeeto	56	6	5		t5_2qhwu	False
1343635518.0	xdsls	Tips and tricks for EmacsLisp programming - consider Elisp as a practical language and follow some of this advice.	nicferrier	54	6	8		t5_2qhwu	False
1259567261.0	a9e7d	Emacs standing alone on a Linux Kernel	eclig	57	10	4		t5_2qhwu	False
1370725720.0	1fy1yo	With all thats going on in the news, lets not forget M-x spook!	st0rm79	52	7	5		t5_2qhwu	False
1363450167.0	1aewbw	"showcss-mode.  If you use Emacs to edit html, you might find this mode
I wrote useful."	smmcg	59	14	21	"Show CSS is a minor mode for emacs.

With showcss-mode turned on, as you navigate around an HTML file the
matching css for that element will be displayed in another buffer.

Here's an [animated gif](http://i.imgur.com/VCqEwAp.gif) that 
shows how it works.

In the current html buffer, if you move the cursor over a class="".*?""
or id="".*?"" a buffer will open with the external css file loaded and
scrolled to the matching selector.

Show Css will look at the &lt;link&gt; tags and/or a magic comment tag to get
the location of external css files.

For more info, [Show CSS is at github](https://github.com/smmcg/showcss-mode)."	t5_2qhwu	True
1358837974.0	171kxs	"""emacs"" is the most important VFX in Tron Legacy (X-post from r/linux)"	tincholio	50	6	2		t5_2qhwu	False
1298207636.0	foyu5	Emacs as the Ultimate LaTeX Editor 	gst	53	7	18		t5_2qhwu	False
1361727192.0	195163	Hey mac users...	Quasimoto3000	57	9	37	"Do you guys know about this emacs port ?

https://github.com/railwaycat/emacs-mac-port

I've just switched to it from emacsforosx... And it is phenomenal! Complete fullscreen support, continuous scroll, pinch to zoom, two finger swipe to switch buffer (safari style)!

Not only that, for those of you with retina displays, the text looks much much better.

I highly recommend anyone using emacs on OSX to switch to this port. Oh, and its available via homebrew.
&gt;
&gt;If you are using Homebrew, copy ""emacs-mac.rb"" to your brew's
&gt;   	formula directory(usually at /usr/local/Library/Formula/), and
&gt;       
&gt;        $ brew install --HEAD emacs-mac

Or even easier:
&gt;$ brew install --HEAD https://raw.github.com/railwaycat/emacs-mac-port/master/emacs-mac.rb

Try it!"	t5_2qhwu	True
1358773181.0	16zipv	The Wikemacs Experiment: 300 Days Later	tir-na-nog	57	8	20		t5_2qhwu	False
1325509837.0	nzqq4	Sync emacs with google docs	shubhamharnal	50	6	4		t5_2qhwu	False
1274353291.0	c69e5	Are there any up to date step-by-step guides describing configuration of CEDET and related tools to acheive IDE-like features?	zeroDivisible	51	6	14		t5_2qhwu	True
1365370853.0	1bvjd2	Announcing visual-regexp.el	benma2	53	6	10	"Link: [https://github.com/benma/visual-regexp.el/](https://github.com/benma/visual-regexp.el/)

visual-regexp for Emacs is like `replace-regexp`, but with live visual feedback directly in the buffer. Check out the screenshots on the GitHub page for some examples.

It is the successor of pyregexp, which is being deprecated. If you are using it, you are kindly advised to switch. 

If you desire Python's regular expressions, check out [visual-regexp-steroids](https://github.com/benma/visual-regexp-steroids.el/).

Your feedback is welcome."	t5_2qhwu	True
1351695286.0	12efh2	Introducing Skewer -- Emacs live interaction with browser JavaScript	skeeto	48	2	9		t5_2qhwu	False
1336686028.0	th564	FSF store is now selling GNU Emacs reference mugs	mattl	48	7	7		t5_2qhwu	False
1281223529.0	cyljf	ELPA coming to Emacs 24	dotemacs	47	3	7		t5_2qhwu	False
1364035429.0	1auqgm	Speeding up your emacs startup	wadcann	48	3	20	"I've run into a couple of general techniques to speed up startup of emacs.  Here's a summary of what I've found to work well.

* Use emacsclient.  The most obvious thing to do is to use emacsclient instead of emacs; if you do that, a pre-existing emacs ""server"" instance will be used, if available.  That way, there *is* no emacs startup.  If you want a new graphical window each time, `emacsclient -a """" -c` is probably what you want; the `-a """"` will cause a new emacs instance to be started if one isn't already running, and `-c` will cause a new frame to be opened.

    I like running emacs in a terminal only, with a new xterm popping up containing an emacsclient instance if emacs is launched from, say, Firefox.  If you think you'd like the same behavior, I've just [posted a script](http://www.reddit.com/r/emacs/comments/1auowq/script_for_using_terminalbased_emacs_as_editor_on/).
    
* Many packages require loading for use to be made of them.  Since this often requires modifying one's ~/.emacs.d/init.el file to contain a `(requires 'foo)` snippit, it adds to the difficulty of using emacs for new users.  Many Linux distros simply have emacs packages that must be loaded drop off a file in `/etc/emacs/site-start.d`.  Every time emacs is started, it executes every file in here, and loads every package installed on the system.  This makes things simpler for a user — he doesn't have to see any elisp.  However, it also means that every emacs instance startup runs slower as more packages are installed on the system.

    If you're comfortable with loading up what you want and don't like the startup overhead, you can run `emacs --no-site-file`.
    
* Where possible, use `autoload` instead of `require`.

    It's possible to tell emacs in your ~/.emacs.d/init.el, ""if anyone tries to run function `foo` and it hasn't been loaded yet, load `bar.el`, and then try again to execute `foo`"".  This is done via a statement like the following:

        (autoload 'ibuffer ""ibuffer"" ""List buffers."" t)
        (global-set-key (kbd ""C-x C-b"") 'ibuffer)

    The `global-set-key` function will tell emacs to run the fancy colorized, grouping `ibuffer` package instead of the simpler `list-buffers` when a user his `C-x C-b`.  The `autoload` function says ""if the user tries running function 'ibuffer, and that function hasn't yet been loaded, try loading a file called ""ibuffer.el"" or ""ibuffer.elc"" and then repeat the attempt.
    
    This way, if you don't actually use ibuffer in a particular emacs run, ibuffer is never loaded up.
    
    I use autoloading heavily in my init.el:
    
        (autoload 'gid ""idutils"" nil t)
        (autoload 'gnuplot-make-buffer ""gnuplot"" ""open a buffer in gnuplot mode"" t)
        (autoload 'ansi-color-for-comint-mode-on ""ansi-color"" nil t)

    So on most emacs sessions, these packages never need to load.

    Another really common time I need to autoload something is if I install a package to handle a particular filetype.  Then, whenever I open that filetype, I want emacs to load up the package with the mode required to edit that filetype, and switch to the mode...but I don't want emacs to read through code to handle a bazillion different filetypes unless it really needs to do so.  Sometimes, I have multiple possible modes to edit a filetype, and some systems have one mode and others another...I'd like to load up only the mode that is actually installed on the system and that I most like.  Heres' the function I use, and some examples:
    
        (defun find-in-list (f list)
          ""Find an element for which f returns true in list and return that element""
          (let ((templist list))             
            (while (and templist (not (funcall f (car templist))))
              (setq templist (cdr templist)))
            (if (null templist)
                nil         
              (car templist))))

        ;; Given a list of ((filetype-regex, (""libname"", ""Description"",
        ;; 'function-symbol)...)...), for a given filetype, finds the first
        ;; libname that is present, and sets filetype-regex to autoload the
        ;; specified function-symbol in libname for that filetype-regex.
        (defun autoload-filetype-with-preference (regex description list)
          ""Autoloads for given regex a preferential list of libs/function pairs""
          (let ((mode-pair (find-in-list (lambda (x) (locate-library (car x))) list)))
            (if mode-pair
                (let ((mode-name (cdr mode-pair))
                      (mode-file (car mode-pair)))
                  (autoload mode-name mode-file description)
                  (add-to-list 'auto-mode-alist (cons regex mode-name))))))

        ;;; Autoloads

        (autoload-filetype-with-preference
         ""\\.wiki\\'""
         ""Major mode for editing documents in Wikipedia markup.""
         '((""wikipedia-mode"" . wikipedia-mode)))

        (autoload-filetype-with-preference  ""\\.\\(gp\\|plt\\)\\'""
                                            ""Gnuplot major mode""
                                            '((""gnuplot"" . gnuplot-mode)))

        (autoload-filetype-with-preference  ""\\.m\\'""
                                            ""MATLAB major mode""
                                            '((""matlab-mode"" . matlab-mode)))

        (autoload-filetype-with-preference ""\\.\\(pov\\|inc\\)\\'""
                                           ""PoVray scene file major mode""
                                           '((""pov-mode"" . pov-mode)))

        (autoload-filetype-with-preference ""\\.lg\\'""
                                           ""LOGO major mode""
                                           '((""logo-mode"" . logo-mode)))

        (autoload-filetype-with-preference ""\\.twiki\\'""
                                           ""Twiki major mode""
                                           '((""erin-mode"" . erin-mode)))

        (autoload-filetype-with-preference ""\\.ml[iylp]?\\'""
                                           ""CAML major mode""
                                           '((""tuareg"" . tuareg-mode)
                                             (""caml"" . caml-mode)))

        (autoload-filetype-with-preference ""\\.smb\\.conf\\'""
                                           ""smb.conf major mode""
                                           '((""smb-mode"" . smb-mode)))

        (autoload-filetype-with-preference ""\\.\\(sml\\|sig\\)\\'""
                                           ""SML major mode""
                                           '((""sml-mode"" . sml-mode)))

    In the above example, I'm loading up tuareg-mode for Ocaml files if it's available on a system.  If not, I fall back to sml-mode.  If that's not available, I just use whatever emacs defaults to.
    
    All code released to the public domain.

* Use locate-library to only use a particular feature if a system has it installed.
    
    I often work with older systems; some don't have, say, ibuffer installed.  I'd hate to have to maintain a different init.el for those systems.  What I do is make the load conditional on the library being present, so that my init file won't fail while trying to autoload a package that isn't present:
    
        ;;; ibuffer
        (if (locate-library ""ibuffer"")
            (progn
              (setq ibuffer-saved-filter-groups
                    (quote ((""default""
                             (""shell"" (mode . shell-mode))
                             (""dired"" (mode . dired-mode))))))

              (add-hook 'ibuffer-mode-hook 
                        (lambda ()
                          (ibuffer-switch-to-saved-filter-groups ""default"")))

              (setq ibuffer-show-empty-filter-groups nil)

              (autoload 'ibuffer ""ibuffer"" ""List buffers."" t)
              (global-set-key (kbd ""C-x C-b"") 'ibuffer)))

* Timestamp your load messages to profile loading time

    This one doesn't actually speed up loading, but it does help you see what is hogging your startup time.  Normally, packages print messages in your \*Messages\* buffer as emacs loads up; you can ask emacs to timestamp these so that you can see what it is that's causing the slow startup.
    
    Thanks to [other /r/emacs users](http://www.reddit.com/r/emacs/comments/16tzu9/anyone_know_of_a_reasonable_way_to_timestamp/) for helping me put this one together:
    
        ;;; timestamps in *Messages*
        (defun current-time-microseconds ()
          (let* ((nowtime (current-time))
                 (now-ms (nth 2 nowtime)))
            (concat (format-time-string ""[%Y-%m-%dT%T"" nowtime) (format "".%d] "" now-ms))))

        (defadvice message (before test-symbol activate)
          (if (not (string-equal (ad-get-arg 0) ""%s%s""))
              (let ((deactivate-mark nil))
                (save-excursion
                  (set-buffer ""*Messages*"")
                  (goto-char (point-max))
                  (if (not (bolp))
                      (newline))
                  (insert (current-time-microseconds))))))

EDIT: modified `find-in-list` to not eat stack space linear in the size of the list, as per nitroll's comment below.  Elisp doesn't do tail-call optimization!  Unlikely to break in the usage here here (since the list is unlikely to be long), but bad for a general-purpose list-processing function.
"	t5_2qhwu	True
1359861428.0	17sec0	GNU Press releases new edition of the Emacs manual!	johdu	48	7	19		t5_2qhwu	False
1339093928.0	uq5yf	Let us welcome our new brother Abstruse Goose who found the true way from the pits of vim	suhrob	54	14	0		t5_2qhwu	False
1334106298.0	s3j8t	Emacs Rocks: Ace Jump Mode	lyrae	49	5	12		t5_2qhwu	False
1262422075.0	akqc5	What is your favourite emacs feature?	jdhore1	46	3	41	I'm reasonably new to emacs and i'm looking to check out some cool stuff. So what're all your favourite emacs feature? :)	t5_2qhwu	True
1369009942.0	1enwhc	What about spicing up our sub-reddit a little bit?	climatewarrior	60	20	14		t5_2qhwu	False
1365714755.0	1c5til	Meet Magit -- intro, remote, reflog, rewrites - 20min	agumonkey	45	2	12		t5_2qhwu	False
1344463959.0	xwm8j	Elnode (emacs webserver like node.js) is nearing a release.	nicferrier	50	9	18		t5_2qhwu	False
1320962103.0	m7xd0	"The Mastering Emacs Reading Guide | Mastering 
Emacs"	mickeyp	46	5	3		t5_2qhwu	False
1319493574.0	lnm2f	[maybe OT] R.I.P. John McCarthy	petrux	48	2	3		t5_2qhwu	False
1315144884.0	k4cxv	"Eclim makes Eclipse's language support available for 
other editors and there is an Emacs interface too. 
That means you can have intelligent Java, C++, etc. 
code completion in Emacs"	kcin	50	7	20		t5_2qhwu	False
1283381071.0	d8f7q	Some .emacs tips from Hacker News	edavis	46	4	1		t5_2qhwu	False
1370206738.0	1fjelk	Emacs is Dead (translated from Japanese)	tkf41	64	19	22		t5_2qhwu	False
1364733840.0	1bct0o	Google Reader alternative for Emacs Ninjas	12358leet	48	10	15		t5_2qhwu	False
1340315179.0	veixg	Emacs Reference mugs are back!	donaldrobertsoniii	47	7	5		t5_2qhwu	False
1333153161.0	rlqgh	Very extensive and acessible tutorial for emacs [IBM developers website]	clemenstimpler	42	0	2		t5_2qhwu	False
1321086417.0	m9n5c	Emacs For OS X . com gets a new Mac Mini (a success story of David Caldwell tapping the help of emacs community especially those on Macs to help him buy a new emacs nightly build server). Congrats David.	chocolait	46	3	0		t5_2qhwu	False
1310662028.0	ipkar	Buy a GNU Emacs mug and help raise money for the FSF!	kemushi88	44	3	25	"[Previous Offering](http://www.reddit.com/r/emacs/comments/fst37/i_designed_and_am_selling_limited_quantities_of/)

http://www.amazon.com/dp/B004N1TRLA/

Long story short, I have created an Emacs Mug! It is for sale on Amazon. It is also Fulfilled by Amazon, which means **free delivery** for those of you with Amazon Prime or if you order a total of $25 or more qualifying items. 

**All profits are going to the Free Software Foundation**. (I'm not making any money off of this). 

More information about the project located [here](http://www.rudzitis.org/refmug/). This is an open source mug so you're encouraged to download the source and make your own!"	t5_2qhwu	True
1252795427.0	9jyl8	"""I have finally done the impossible: embedded a fully-featured web browser in Emacs."""		53	8	11		t5_2qhwu	False
1360677517.0	18dkqk	Evil mode has reached 1.0!	deech	56	12	16		t5_2qhwu	False
1343906037.0	xk3le	Viewing Java Class Files in Emacs « null program	agumonkey	44	3	3		t5_2qhwu	False
1318077716.0	l52bu	Vimgolf in Emacs = learn cool Emacs features and practical microskills	suhrob	50	11	16	"http://vimeo.com/timvisher/videos/search:VimGolf%20Emacs/sort:newest

Tim Visher goes through some http://vimgolf.com/ challanges and discusses very practical editing skills. It's really cool and helpful (e.g. I've just learned about keep-line flush-line and to use c-e c-f instead of c-a c-n in macros - lot's of neat stuff like these!)"	t5_2qhwu	True
1317218581.0	ku2z7	The Emacs Starter Kit, version 2	cwgem	46	6	13		t5_2qhwu	False
1307503879.0	hubkl	Emacs user at work	gst	49	9	38		t5_2qhwu	False
1292268451.0	el63i	Guide to mastering Eshell, the Emacs-Lisp shell	mickeyp	44	5	1		t5_2qhwu	False
1251695257.0	9fqgw	Org-Mode	gst	45	3	8		t5_2qhwu	False
1374623020.0	1ix4ro	Famous Emacs Users (that are not famous for using Emacs)	jackhammer2022	52	14	34		t5_2qhwu	False
1374501941.0	1it8w0	What's the state of CEDET, especially for non-C languages?	ccharles	47	6	18	"**TL;DR:** How realistic is it to use CEDET with Python today? Can we ever expect to use CEDET without doing [heaps of configuration](http://alexott.net/en/writings/emacs-devenv/EmacsCedet.html)? Is development still going? How can I help?

**Edit:** I will leave the body of the post intact, but I am not *just* looking for something to work with Python. I had hoped that CEDET would give me for language support what `vc` provides for version control: a unified set of tools that I can use with various ""back ends"". It would rock pretty hard if I could work on Python, PHP, and JavaScript (and a sprinkling of other languages like Emacs Lisp and C) using the same tools. Thanks to `gcr` for [making me think about what I really want](http://www.reddit.com/r/emacs/comments/1it8w0/whats_the_state_of_cedet_especially_for_nonc/cb80n7k).

Original post follows.

When I first read about CEDET I was really excited. It sounded like a fantastic project, and I couldn't wait to try it out. I even tried to use some pre-releases, though I wasn't able to get much use out of them.

When version 1.0 came out I tried it right away, finding that (a) it was quite a lot of work to set up, and (b) it was very focused on a few languages like C and Java. Cool, but I rarely code in those languages these days.

I looked forward to the 1.1 release, but when it came out I wasn't able to see many differences, though I appreciate that there was lots of work that went into the release.

Now that I am running Emacs 24.3.50 I see that version 2.0 is built in, and I am still having trouble leveraging it, or even seeing dramatic user-facing changes. Maybe I just need to read the entire Info page again.

* Is CEDET still [a lot of work to set up](http://alexott.net/en/writings/emacs-devenv/EmacsCedet.html)? 
* Are there updated guides for getting started?
* Where should I be looking to keep up with its development considering [the website](http://cedet.sourceforge.net/) appears not to have been kept up to date with the development of version 2.0?
* Even though I seem to remember Python being listed as a supported language, it looks like [the actual case](http://cedet.sourceforge.net/languagesupport.shtml) is that Python support is still somewhat lacking.

Finally, as somebody who works primarily with pretty high-level languages and has only a little bit of Elisp experience, what can I do to help improve CEDET?"	t5_2qhwu	True
1370677048.0	1fx0oy	web-mode.el v6 is released	fxbois	46	7	13	"I've just released on [web-mode.org](http://web-mode.org) a new version of **web-mode.el** (major mode for editing html templates). Here are some of the new features :

* compatibility with new engines (e.g. Go Template, erlydtl)
* complete rewrite of the indentation code (much faster)
* compatibility with &lt;script type=""text/html""&gt; and &lt;script type=""application/ld+json""&gt;
* can be used to edit plain css, json files
* web-mode-enable-block-faces can be used to set background on server blocks
"	t5_2qhwu	True
1364550636.0	1b8g6c	A new blog dedicated to Emacs	bozhidarb	54	13	10		t5_2qhwu	False
1358954269.0	174i3l	The Limits of Emacs Advice	skeeto	41	4	5		t5_2qhwu	False
1357762348.0	169mst	I want to learn emacs. Any tips from veterans?	Tribaal	48	8	91	"As a professional programmer, I spent years using heavy IDEs, and relatively recently (1 year) switched to vim, with the idea that I wanted a programming environment in the terminal instead. I mostly program in python, go and c.
I would like to start using emacs, for the purpose of making an informed choice on which to keep using in the longer run . Also, I like learning new things, and ""because I can"".
While I can find a tutorial, I would be interested in hearing about tips some of you might have to make learning the beast easier, or simply sharing some of your ""ahhhhh!"" moments!"	t5_2qhwu	True
1349643953.0	113qro	Achievements for Emacs (it was inevitable)	gvol	49	14	14		t5_2qhwu	False
1342002534.0	wdnlz	Emacs Rocks! Live at WebRebels (not the best audio) - YouTube	zenspider	41	2	4		t5_2qhwu	False
1320413056.0	m08ot	How I feel when I C-x C-f for the first time each morning (link to image)		58	16	18		t5_2qhwu	False
1302713297.0	gp6eq	11 Concepts The Emacs Newbie Should Master	gst	50	9	2		t5_2qhwu	False
1284720429.0	df57z	Accidental Emacs	rberenguel	46	6	2		t5_2qhwu	False
1282107632.0	d2g2v	Emacs undo trees	gst	49	9	11		t5_2qhwu	False
1269105028.0	bfxr1	What are three features that you would like to see in Emacs (core or libraries)?	gnuvince	43	5	91	"1. [Code folding](http://www.php-editors.com/featured/code_folding.gif) as done in modern editors and IDEs
2. Complete (and conflict-free) Vim keybinding mode
3. Concurrency model
"	t5_2qhwu	True
1260916573.0	af2sg	BNF-mode for emacs	jmmcd	42	3	7	"I have to write a lot of grammar files in BNF format. I was amazed that I couldn't find a BNF-mode for emacs. Here's what I came up with. It's a testament to the emacs framework that you can achieve this result with such unimpressive-looking code.

    (define-generic-mode 'bnf-mode
     () ;; comment char: inapplicable because # must be at start of line
     nil ;; keywords
     '(
       (""^#.*"" . 'font-lock-comment-face) ;; comments at start of line
       (""^&lt;[^ \t\n]*?&gt;"" . 'font-lock-function-name-face) ;; LHS nonterminals
       (""&lt;[^ \t\n]*?&gt;"" . 'font-lock-builtin-face) ;; other nonterminals
       (""::="" . 'font-lock-const-face) ;; ""goes-to"" symbol
       (""\|"" . 'font-lock-warning-face) ;; ""OR"" symbol
       )
     '(""\\.bnf\\'"") ;; filename suffixes
     nil ;; extra function hooks
     ""Major mode for BNF highlighting."")

[Screenshot here](http://imgur.com/oo27Z)

EDIT just realised nonterminals won't have any whitespace, so fixed the regexps to exclude it."	t5_2qhwu	True
1259437730.0	a90u0	Anyone here use emacs as their shell or as a full shell replacement? How did you customize it?	Jengu	43	4	17	I was thinking it'd be nice to have total consistency between my terminal keybindings and my emacs keybindings, and simply using emacs as my terminal seems like the best way to do that. I fondly dream of a terminal that follows ido-mode (zsh completion comes close but it's not the same). term mode doesn't really provide any integration (doesn't use emacs completion mechanisms, no syntax for doing things on buffers), it just gets you a terminal in your emacs window.	t5_2qhwu	True
1368286795.0	1e4re8	Do you use shell, eshell, term, or multi-term? Do you find it sufficient for your needs?	revocation	41	2	41		t5_2qhwu	True
1349467417.0	110bx8	New promising web-mode for Emacs	bradleyw	47	9	13		t5_2qhwu	False
1311333873.0	iwq03	ace-jump-mode - best fast jump mode  I've ever seen	fangzhzh	42	3	4		t5_2qhwu	False
1309867005.0	ih3t8	Why I'm still using Emacs	gst	46	9	34		t5_2qhwu	False
1301952597.0	gimiq	The solarized theme for Emacs 24	monotux	40	5	31	"I just made a quick conversion [of this port](https://gist.github.com/888286) of the [solarized theme](http://ethanschoonover.com/solarized), but working in Emacs 24. As of now it works pretty ok, but it can probably be improved a whole lot. So, ideas and corrections, please! :)

**Edit**: [Here's the actual code for the dark theme,](https://github.com/monotux/emacs-d/blob/master/themes/solarized-dark-theme.el) [and the code for the light theme.](https://github.com/monotux/emacs-d/blob/master/themes/solarized-light-theme.el)

**Another update:** I've changed the default foregrund in the -dark theme to a slightly brighter hue, which makes the theme a lot more useful imo. Try it out, [here's a screenshot of how it renders on my netbook.](http://imgur.com/P492r)"	t5_2qhwu	True
1283171229.0	d770s	CEDET 1.0 Released		40	2	1		t5_2qhwu	False
1279072641.0	cpa9n	The single most useful Emacs feature - Stack Overflow	jrh0090	49	11	40	"This actually had a lot of cool things I hadn't heard of before. Since reading it use M-x occur all the time now

http://stackoverflow.com/questions/60367/the-single-most-useful-emacs-feature"	t5_2qhwu	True
1264101880.0	asiqx	Git users: What's your preferred way to use Git with GNU Emacs?	GJ1214b	43	6	25	I've decided that I need to learn version control. So I chose to learn Git.  I'm fairly new to Emacs, but I feel I've learned enough to work with it full time. Is the standard, packaged way of using Git from within Emacs the best way for a Git beginner or should I use Magit or some other method? Your opinions are greatly appreciated.	t5_2qhwu	True
1254941206.0	9rsdr	Project to create a Google Wave client for emacs	greenrd	43	3	16		t5_2qhwu	False
1350610833.0	11q2v7	mulander - How emacs keeps replacing my tools at work	bigfig	46	6	4		t5_2qhwu	False
1350393732.0	11kh4s	Graphene: a new set of defaults to ease refugees from GUI text editors into Emacs	rdgray	44	7	8		t5_2qhwu	False
1332180064.0	r3qpr	Another cool feature from org-mode I just discovered	maxwell_power	43	7	6		t5_2qhwu	False
1289251085.0	e33vc	Running Shells in Emacs: An Overview	mickeyp	42	6	10		t5_2qhwu	False
1287307698.0	dsc1g	smex - A smart M-x enhancement for Emacs	mac	39	2	8		t5_2qhwu	False
1272777260.0	byy9o	Got Emacs?: The All New Compact Org Mode guide	gst	42	5	1		t5_2qhwu	False
1269695553.0	bizmc	Why do I use Emacs	gnuvince	47	12	4		t5_2qhwu	False
1248828771.0	95h66	Emacs 23 is very near	tryptych	43	7	1		t5_2qhwu	False
1376068267.0	1k1bfi	emacs-calfw: A calendar framework for Emacs	climatewarrior	37	4	9		t5_2qhwu	False
1368072564.0	1dzcw8	A single file emacs config framework using package.el	milkypostman	39	4	6		t5_2qhwu	False
1365634997.0	1c3hsz	Litable: On-the-fly evaluation/substitution of emacs lisp code. Inspired by Light Table.	the-fritz	40	6	12		t5_2qhwu	False
1365431595.0	1bx36n	Emacs 24.3's Killer Feature: Eager Macro-Expansion	the-fritz	41	6	4		t5_2qhwu	False
1356379105.0	15dymy	Happy Holidays, everyone!  I created a Lisp dialect that compiles to Javascript and its all written in Emacs Lisp.	commonslip	42	7	11		t5_2qhwu	False
1331581641.0	qtcda	I hacked a tiny tool to test and explore HTTP webservices without leaving emacs. Someone might find it useful too.	pashky	44	11	14		t5_2qhwu	False
1300678863.0	g7y6e	The Levels of Emacs Proficiency		45	9	15		t5_2qhwu	False
1298669290.0	fst37	I designed and am selling limited quantities of an GNU Emacs mug. 	kemushi88	41	3	22	"**Update**: Thanks everyone! I'm officially **sold out**! If you are still interested in a mug, send me a PM and I'll let you know when there are more available.

Long time lurker, first time poster. I work at Amazon.com, and in order to gain a better understanding of the experience our customers have when selling their own products, I created and am selling an GNU Emacs mug:

[http://www.amazon.com/dp/B004N1TRLA/](http://www.amazon.com/dp/B004N1TRLA/)

I originally produced 30 of them. So far I've sold 16 to my coworkers. I have 14 left that I would love to sell to some redditors.

I know the price is a little high, but I did it for as cheap as I could for the small run that I ordered. **I'm not making any money off this**, and any money I have left over I'll donate to the FSF.

If there is a high amount of interest, I would be willing to produce a larger batch so I could sell them at a lower price.

More information about the project located [here](http://www.rudzitis.org/refmug/). This is an open source mug so you're encouraged to download the source and make your own!

Edit: Added info. "	t5_2qhwu	True
1296636347.0	fdp0i	GNU Emacs manual (Stallman, 1986) - Imgur (crosspost from /r/linux)	wtfdaemon	39	3	2		t5_2qhwu	False
1295035734.0	f2f0w	Effective Editing in Emacs: Movement	mickeyp	44	7	7		t5_2qhwu	False
1258850285.0	a6v1n	company-mode - Completion mode for Emacs	gnuvince	40	2	3		t5_2qhwu	False
1253090222.0	9l28t	Do you actually use the movement C-n/p/f/b keybindings?	ferk	40	3	53	"I've been using emacs for more than 3 years now, but I still don't use the default C- movement keybindings, I find it quite awkward (pressing p with pinky? the F at left for going right and B at the right for going left?).

Then I found a link with an ""ergonomic"" keybinding layout (http://code.google.com/p/ergoemacs) and I was thinking of switching to something similar (only for movement, other keybindings are mostly very nice as they are, ergoemacs changes other things that shouldn't be changed). But then there's the problem that other programs (bash, etc) and other emacs modes (dired, etc) use the emacs-style keybindings and it would require to customize a lot of things to actually get the custom layout to work everywhere. Do you think it pays off to learn the default C- keys? is it really learnable without having finger pain? because I find it really awkward."	t5_2qhwu	True
1374097815.0	1iikmg	The Best Emacs Icon on the Internet	Aevin1387	51	13	10		t5_2qhwu	False
1340180130.0	vbjjs	Video tutorials - EmacsMovies.org	suhrob	36	0	2		t5_2qhwu	False
1280774483.0	cwibi	Deldo - The Sex Toy Control and Teledildonics mode for Emacs	qdot76367	45	11	5		t5_2qhwu	False
1376134684.0	1k32es	God Mode	chrisdoner	44	6	52		t5_2qhwu	False
1364389175.0	1b3vc2	Emacs switching development to git? Discussion on the emacs-devel mailinglist.	the-fritz	40	6	30		t5_2qhwu	False
1361896171.0	199kch	The Design of the Emacs Logo [xp from /r/TIL]	ckoch786	42	10	12		t5_2qhwu	False
1341207252.0	vwuq4	IPython Notebooks for Emacs	bastibe	37	6	1		t5_2qhwu	False
1331133239.0	qlsev	Tango-2 color theme ported to Emacs 24	developernotes	36	4	13		t5_2qhwu	False
1323836779.0	nbzbw	New org-mode release 7.8.01	MarcN	35	2	7		t5_2qhwu	False
1320704843.0	m41gt	reddit-mode for emacs?		36	1	11	"Does anyone have a good way for browsing reddit through emacs?

I'm thinking something along the lines of [Cortex](http://cortex.glacicle.org/) or [Twittering-mode](http://twmode.sourceforge.net/).  I don't really have a practical reason to do this, other than my obsession with doing as much as possible without leaving emacs.

We need to get on this."	t5_2qhwu	True
1310041424.0	iiyxn	Org-mode 7.6 released	gst	45	13	3		t5_2qhwu	False
1309934137.0	ihwki	Calfw - A calendar framework for Emacs	gst	39	7	4		t5_2qhwu	False
1302072752.0	gjqki	Is there any way to tell Emacs to not automatically change the buffer displayed in a certain window?	maximelt	36	4	14	"Scenario:  do 'grep' from eshell, emacs decides to display the results in a window showing a buffer I was editing.  Result: must do a shuffling act with windows and buffers.  Is there any way to ""protect"" a window so that emacs will not automatically switch the buffer displayed there?  Thanks."	t5_2qhwu	True
1275305493.0	c9v9s	Magit gets a new home and release.	super-fiscal	36	3	0		t5_2qhwu	False
1252627218.0	9jcxx	Emacs Less-known Tips	AndreasBWagner	38	4	6		t5_2qhwu	False
1362402771.0	19mwq7	Describe your habits! What features do you often use and how?	Kaemka	39	7	30	"I just stumbled upon a good description of one person's [workflow and habits.](http://www.reddit.com/r/emacs/comments/18oyhc/long_time_vim_user_wanting_to_try_and_actually/c8gze3i)
How is yours?"	t5_2qhwu	True
1343747159.0	xg9hh	Emacs Demographics Survey	OMouse	37	5	21		t5_2qhwu	False
1342952500.0	wynwr	Emacs packages for programmers	harsman	39	7	11		t5_2qhwu	False
1313181808.0	jh4bh	The ultimate emacs course	suhrob	41	9	6	"http://tv.uvigo.es/gl/serial/513.html

Three lectures on Emacs by D. Jose E. Marchesi from Universidade de Vigo (in english).

First lecture is a 2 hour long intro to Emacs, the remaining two are shorter, blackboard (!) lectures on s-expressions, elisp etc.

Also available through iTunes.
Hope you'll like them - didn't have yet time to watch them completely, but it looks very interesting for a total beginner like me..."	t5_2qhwu	True
1306683878.0	hmv1r	"Sorting Text by Line, Field and Regexp in Emacs | 
Mastering Emacs"	mickeyp	36	3	4		t5_2qhwu	False
1298487941.0	fr83b	Learn eLisp For Emacs	tpk1024	40	5	20		t5_2qhwu	False
1297253044.0	fhypw	Announcing Org-contacts	gst	37	5	4		t5_2qhwu	False
1288720198.0	e05l1	Julien Danjou's blog: Emacs 24 news	greenrd	41	8	15		t5_2qhwu	False
1250284923.0	9ara9	Ask /r/emacs: How do YOU switch buffers?	BasicObject	38	4	47	I've been using GNU Emacs for about a month now and love it. I'm customizing Emacs to be a little more convenient. I'm looking for 'the way' to switch through buffers. http://www.emacswiki.org/emacs/SwitchingBuffers has a lot of options. I really dislike the default way (it goes to a list). Can anyone recommend their favorite way to either cycle or search through all open buffers? Vote up other user's suggestions if you agree with their choice.	t5_2qhwu	True
1375792599.0	1jt30u	Vim user trying out Emacs. Couple of questions..	Thehummel	34	2	30	"After been trying to really switch to Emacs a number of times, small things have always stopped me. Now i have finally sat down and trying to get more comfortable with Emacs. But there are number of things still bugging me, and that's why now sought out to you /r/emacs!


First of all, packages for Emacs is something that has been confusing me for some time now. I have set it up so i just can M-x list-packages and there i can access Melpa and Marmalade. I mark these things for install and execute them, fine enough. But do i have to go into my .emacs file and add them to load-path each time, and then (require 'packagename) ? Is there a more perfered way to handle packages or am i just doing it wrong? (I have included my .emacs file at the bottom of this post)


The next thing, is that my .emacs file is mostly consisited of things that i have taken from the Internet, small snippets that does various things. I think i understand most of them, but i'm not sure if it's good practice to do it way i do. Also, i have seen people have a init.el instead of .emacs. Is that perfered and if so, why?


In vim, i have been using the YouCompleteMe plugin for my auto-completion, and i have grown really attach to it. So having a auto-completion is a must for me. So i looked up the auto-completion package and installed it, but it seems like that the completion is only there for elisp documents and sometimes python. Is there a way to install extra languages into it, or is that something that needes enabling?


I think that is about it, here is my [.emacs](https://gist.github.com/runeandersen92/6164051) file.

Thanks!

EDIT:
Thank you for all those great answers! It have really helped me and made me understand a couple of things!"	t5_2qhwu	True
1375404573.0	1jj83r	Deldo - Vibration Control and Teledildonics Mode for Emacs	fnord123	44	11	3		t5_2qhwu	False
1369091252.0	1eq5vr	While we're at it, let's improve our side-bar. Suggest additions!	climatewarrior	44	12	34	"A sub-reddit for the timeless and infinetely powerful editor.

**Get Emacs**

* [Windows](http://ourcomments.org/Emacs/EmacsW32.html)
* [Mac OS X](http://emacsformacosx.com/)
* Linux and BSD (Just get it from your distribution's package manager)

**Emacs Tutorials**

* [Meet Emacs](https://peepcode.com/products/meet-emacs)
* [Beginner’s Guide to Emacs](http://www.masteringemacs.org/articles/2010/10/04/beginners-guide-to-emacs/)
* [Absolute Beginner's Guide to Emacs](http://www.jesshamrick.com/2012/09/10/absolute-beginners-guide-to-emacs/)

**Useful Emacs configuration files and distributions**

* [Emacs Prelude](https://github.com/bbatsov/prelude)
* [Emacs Starter Kit](https://github.com/technomancy/emacs-starter-kit)
* [Emacs for Python](https://github.com/gabrielelanaro/emacs-for-python)
* [Magnar's Emacs's config](https://github.com/magnars/.emacs.d)

**Emacs blogs**

* [What the .emacs.d!?](http://whattheemacsd.com/)
* [Emacs Rocks!](http://emacsrocks.com/)
* [EmacsMovies.org](http://emacsmovies.org/)
* [Kill Ring](http://killring.org/)
* [emacs-fu](http://emacs-fu.blogspot.com/)
* [Mastering Emacs](http://www.masteringemacs.org/)
* [Sacha Chua's Blog](http://sachachua.com)
* [Planet Emacsen](http://planet.emacsen.org/)
* [Emacs Redux](http://emacsredux.com)
* [Programothesis](https://www.youtube.com/user/emailataskcom)

**Emacs Resources**

* [Emacs Wiki](http://www.emacswiki.org/)
* [Learning GNU Emacs](http://shop.oreilly.com/product/9780596006488.do)
* [Emacs Reference Card](http://www.damtp.cam.ac.uk/user/sje30/ess11/resources/emacs-refcard.pdf)

What do you all think? Any suggestions?"	t5_2qhwu	True
1353770976.0	13ps1u	web-mode.el (major mode for html template editing) v3 is released. New features : selection expansion (C-c C-m), new engine compatibility (twig, jinja2), css colorization	fxbois	38	10	2		t5_2qhwu	False
1335130210.0	sn4hb	How to learn Emacs	jackhammer2022	33	1	4		t5_2qhwu	False
1334864213.0	siatd	Emacs workflows: what's your setup? 	suhrob	37	5	36	"Today I've learned about tmux via [a vim-tmux tutorial](http://www.drbunsen.org/text-triumvirate.html) over at [/r/vim](/r/vim) (yes, I leech there to learn cool stuff).

I'm on Mac and use iTerm2 with zsh along with Emacs.app. I use witch to switch applications and shiftit to get some rudimentary tiling. Occasionally I use ansi-term or eshell but typically just switch to iTerm2. tmux looks like something I could improve my workflow significantly.

But running Emacs in terminal my color-scheme looks strange, function keys are not working and I'm missing a vertical line separating the line numbers. Possibly more problems... Anybody running emacs in terminal and has encountered/solved these issues?

How does it compare to running ansi-term in emacs with some window managing/tiling mode? I have some problems with ansi-term also (e.g. the function keys not being transmitted to zsh correctly) so this doesn't seem too enticing...

My suspicion is that emacs in tmux will be more powerful (and allows for the holy grail - going fullscreen :) in Snow Leopard)...

What's your workflow? How do you integrate emacs into your broader environment? 

Thanks!"	t5_2qhwu	True
1331097548.0	qlbsr	Vim Powerline ported to Emacs	L42y	37	7	12		t5_2qhwu	False
1311597831.0	iz4ni	"The single most useful Emacs feature, question on 
stackoverflow"	madpedro	36	4	3		t5_2qhwu	False
1249307931.0	9733b	New Features in Emacs 23	nflath	34	1	0		t5_2qhwu	False
1237207578.0	850bk	emacs extensions i can't live without 	sergio_101	40	7	6		t5_2qhwu	False
1320815351.0	m5rli	Learn Emacs: Useful Links	rawsyntax	33	3	3		t5_2qhwu	False
1314035507.0	jqs6x	I've done a quick port of the Tomorrow theme to GNU Emacs 23	ccharles	32	1	16		t5_2qhwu	False
1311250500.0	ivr82	Honest request: convince me to use emacs over vim	honzapokorny	59	28	63	"I hear a lot of good things about Emacs and would like to try it. At the moment, I don't know where to start. What are some of its great features? Thanks


**EDIT**: Why all the down votes?"	t5_2qhwu	True
1305433090.0	hbnuw	I tried emacs, and I liked it...	brooksbp	37	6	7		t5_2qhwu	False
1291158564.0	ee5sw	conkeror: web browsing the emacs way (emacs-fu)	ndanger	34	4	10		t5_2qhwu	False
1272557663.0	bxwre	Emacs ups and downs.  I love to try new features, some stick, some don't.	samtregar	38	5	18		t5_2qhwu	False
1264595639.0	auq81	Emacs as a tiling window manager	BioGeek	33	1	5		t5_2qhwu	False
1254333013.0	9pl6f	Org-mode 6.31: includes org-babel, allowing org-mode to be extended in many different programming languages by embedding code snippets	greenrd	32	3	11		t5_2qhwu	False
1253385787.0	9m75i	Minimap implementation for Emacs	oxymor00n	35	2	4		t5_2qhwu	False
1375199995.0	1jcsey	Elisp is the most popular Lisp in github	climatewarrior	35	2	16		t5_2qhwu	False
1371475245.0	1gii2y	"History Question: Why is ""g"" the standard button to ""refresh"" a view, for instance, in ""dired mode"" and git-status mode?"	commonslip	32	4	19	"Is there a historical reason for this that I am not aware of.  While we are at it, why does CTRL-G mean ""cancel?"""	t5_2qhwu	True
1362591648.0	19sb2i	How can I default *scratch* to empty?	mcandre	37	4	8	I'd like to get rid of the filler in `*scratch*`. What should I put in ~/.emacs to accomplish this?	t5_2qhwu	True
1359162085.0	17agwg	Bad Marmalade - what's been going wrong, how I plan to fix it.	nicferrier	38	8	20		t5_2qhwu	False
1352164786.0	12p9wx	Beautifiers for emacs: org-bullets, stripe-buffer	sabof	36	6	32		t5_2qhwu	False
1346776890.0	zcc89	An introduction to Emacs Lisp - Christian Johansen	agumonkey	36	4	4		t5_2qhwu	False
1345506713.0	yjve1	emacs on Android as an app. Still with issues, but it's a great start	miembro	35	6	2		t5_2qhwu	False
1341975419.0	wd5ak	grokking emacs	gfixler	32	2	55	"[This SO answer](http://stackoverflow.com/questions/1218390/what-is-your-most-productive-shortcut-with-vim/1220118#1220118) regarding grokking vi to understand vim is often bandied in /r/vim and held aloft as both a triumph of an answer, and a glimpse into why vim rocks. I've seen it posted a dozen times this past week alone in response to questions on various forums.

Being an emacs newb, but always interested in the ways of others, I'm curious if there's such a canonical reply (or perhaps several) that really uncover why emacs rocks. I know generalities, like a lisp engine under the hood and such, but I also hear people say things like ""vim is great, but I just prefer the emacs way,"" and I'd love to see such a loving writeup like that SO response on what the ""emacs way"" really entails, something to make even a vim lover say ""Wow."""	t5_2qhwu	True
1335072740.0	smbc1	"If you are a developer who'd consider working on emacs 
with crowdfunding then check out this thread"	kcin	37	6	0		t5_2qhwu	False
1321941351.0	ml5jc	A politician who uses Linux (and TeX, Emacs, and Org-Mode!)	beslayed	36	9	13		t5_2qhwu	False
1310915161.0	is0w1	Elnode - an Emacs version of node.js	spec_bebop	35	3	1		t5_2qhwu	False
1231774331.0	7p54n	Desktop search integrated in Emacs and actually a lot more	svuori	32	1	5		t5_2qhwu	False
1231367209.0	7o4f8	Emacs stuff I always seem to forget	gst	33	2	1		t5_2qhwu	False
1365458359.0	1by2y4	Some presentations from the Emacs Conference 2013 (thanks Sacha Chua!)	aaptel	34	6	2		t5_2qhwu	False
1363636876.0	1ajl4j	"Yet another little Emacs guide
"	m00natic	40	11	30	"Hey, redditors, [here](http://m00natic.github.com/emacs/emacs-wiki.html)'s an Emacs crash-course that I wrote for my
coworkers after getting tired of being asked for introduction.  It
started as random tips&amp;tricks but soon degraded into regular
propaganda.  You may find something to like, criticize or whatever."	t5_2qhwu	True
1362571234.0	19rruj	Git gutter for emacs - git changes at a glance in your buffers		32	3	11		t5_2qhwu	False
1356962592.0	15q1la	Driving Git with Emacs, Part II	bozhidarb	35	7	1		t5_2qhwu	False
1355404286.0	14s7je	Emacs built-in code folding feature (no modes)	ychaouche	34	6	4		t5_2qhwu	False
1350259042.0	11hgz2	golden-ratio.el - Automatic Resizing of Emacs windows using golden ratio metrics	romanandreg	40	8	22		t5_2qhwu	False
1350043985.0	11d1o2	"Found that ""g"" on a *compile* buffer recompiles. Cool!"	roneau2005	34	5	14	Quite consistent	t5_2qhwu	True
1344423298.0	xvj3b	TIL about Calc and Quick Calc modes!	ketefoy	33	4	8		t5_2qhwu	False
1340999697.0	vt6sq	For the mad scientists, hook up your neruosky EEG to emacs, Read brainwaves, store results in org-mode table, plot it in gnuplot.  	jonnay23	32	4	6		t5_2qhwu	False
1329566953.0	pv5t6	Org-mode and Why You Should Consider Using It	greenrd	37	8	6		t5_2qhwu	False
1310272380.0	ile17	Cool Things to do in Emacs Dired-mode	redbike	36	6	8		t5_2qhwu	False
1302854870.0	gqlpe	Multiplayer 3D FPS in emacs	jeekl	36	9	4		t5_2qhwu	False
1291015759.0	ed7sm	Cross-browser JavaScript REPL in Emacs using SLIME	fionbio	31	2	4		t5_2qhwu	False
1289505869.0	e4r6o	"Moving Past the Tutorial: A Beginner's Guide to 
Emacs"	mickeyp	32	2	19		t5_2qhwu	False
1286283079.0	dn2jm	Emergency Elisp	serk01	31	1	0		t5_2qhwu	False
1267899748.0	ba36p	New org-mode talk by Carsten Dominik	zpinter	32	2	3		t5_2qhwu	False
1259838847.0	aamv5	Ymacs -- An Emacs-like editor for the Web	cdwillis	39	8	6		t5_2qhwu	False
1253747745.0	9nh64	"Ask emacs: Which color theme do you 
use?"	kanak	33	5	53	Link/Screenshots appreciated :)	t5_2qhwu	True
1376153165.0	1k3g98	Emacs bites	tailbalance	36	9	7		t5_2qhwu	False
1373226231.0	1htfpk	Port of the Sublime Text 2 themes by Dayle Rees to Emacs	tpk1024	31	5	7		t5_2qhwu	False
1367600415.0	1dmmua	Noctilux — an Emacs 24 color theme adapted from sellout's solarized definitions, inspired by Light Table	stafu	34	6	6		t5_2qhwu	False
1364840286.0	1bfqr6	New org-mode logo.	jonnay23	40	12	14		t5_2qhwu	False
1362193231.0	19i4ij	"It's been a while since we've had a theme thread /r/emacs!
What do you use?"	sad_monkey232	39	10	64	"Hey guys, I tried searching for more themes and it seems that it's been a good while since the last theme thread was posted... 

Now with emacs 24 there is a second way to write your themes, instead of color-theme.

I've gotten rather used to https://github.com/jmdeldin/ir-black-theme.el

Otherwise I know half the people here are big fans of Zenburn and Solarized (light and dark.) 

Feel free to share personal themes as well, I've been trying to find a good green theme, not sure how to go about it that well though. Syntax highlighting honestly looks terrible with green text.

"	t5_2qhwu	True
1340818601.0	vp0iv	Video: John Wiegley - Sacha Chua Emacs discussion	suhrob	37	8	18		t5_2qhwu	False
1340371801.0	vfnfc	Java Development With Emacs	ivv-private	32	2	7		t5_2qhwu	False
1339939890.0	v6dyr	Make a minor mode (screencast)	augustl	37	8	10		t5_2qhwu	False
1339404349.0	uvwgl	Lexical scope in Emacs 24	schaueho	33	5	1		t5_2qhwu	False
1336473097.0	tcqsp	Javascript completions in Emacs using CEDET, Firefox and mozrepl	yangtsee	31	3	0		t5_2qhwu	False
1327720136.0	p01uv	Emacs Rocks - expand-region	lyrae	33	3	11		t5_2qhwu	False
1325173621.0	nuzo5	Ledger -- an accounting application well-suited to Emacs users	code-affinity	33	6	7	"I initially wrote all of this as a response to [another post](http://www.reddit.com/r/emacs/comments/nuo3a/why_the_sudden_interest_in_orgmode/), but decided it warranted a post of its own.

After ten years of using MS Money and three or four years of using GnuCash, I was thrilled to discover [ledger](https://github.com/jwiegley/ledger/wiki). The data file is a plain old text file that you edit in a plain old text editor -- and a very nice Emacs mode is provided for the file format. If you are a programmer, entering data in ledger feels a lot like coding in a very simple domain-specific language that was designed to let you concisely express the essence of your financial information.

Ledger itself is a cross-platform command-line utility.

The transparency of the data format has been an enabler for me. With Money or GnuCash, I was faced (nearly daily) with mysterious problems that I simply had no way to solve, because I couldn't see inside the programs. With ledger, all of the data is right there in the text file.

On the output side, ledger can produce its reports as structured XML files, which are then very easy to post-process using your favorite programming language and XML library.

I created a series of Python scripts that produce various reports that are custom to the way I run my own household budget (For example, automatically updating an Excel spreadsheet with a certain graph that I use as a metric of our financial progress. Example 2: Automatically importing the OFX files that I downloaded from my bank and adding the entries to my ledger file, marked up with default categories.) I have also created a series of batch files that invoke the ledger command with different commonly-used combinations of command-line options.

I have found Python + ledger to be a powerful combination.

If you like the Unix way (even if you're running Windows), if you like Emacs, if you are frustrated with gnucash, or if you are a programmer, I highly recommend ledger.
"	t5_2qhwu	True
1319062071.0	lhz8i	"Executing Shell Commands in Emacs | Mastering 
Emacs"	mickeyp	34	6	0		t5_2qhwu	False
1318427226.0	l9jd1	Emacs as a Python IDE? (Coming from VS2010)	formode	32	3	15	"Hi all,

Using VS2010 right now with Python Tools, and it's nice but it feels dirty using windows and a 5 gb IDE to code python which is oh so linux friendly.

However, I've been very spoiled by VS2010's Intellisense, auto-complete, docstring display, etc and would love to see those features implemented gracefully in Emacs (Or another text editor)

Any suggestions?"	t5_2qhwu	True
1316851421.0	kpw89	Hacking some elisp? Use M-x checkdoc to check for style errors in your docstrings.	leonardoe	32	4	0	"Just a small reminder: it's nice when packages adhere to Emacs documentation style and `checkdoc' makes it almost effortless. Also, there are some great tips for writing documentation in 
    (info ""(elisp) Documentation Tips"")

Thank you!"	t5_2qhwu	True
1309132366.0	i9vbz	Redditing from within Emacs	nthcxd	31	3	16	"Hi - a fervent follower of the Church of Emacs here. I'm wondering if I can reddit from within emacs? Is there an emacs plugin written out there that allows you to do this? Perhaps a mutt-style redditing experience?

I tried googling but it seems that any combination of ""emacs"" and ""reddit"" just takes me right to this subreddit, which it ought to except for a few corner cases such as this...

"	t5_2qhwu	True
1307073133.0	hqi5y	why I don’t run shells inside Emacs	gst	33	5	23		t5_2qhwu	False
1296694711.0	fe6bn	Emacs' Stackexchange site proposal is in commitment phase.	disturb	33	5	9		t5_2qhwu	False
1287422919.0	dsw4h	"""The Setup"" interviews a professor with a complicated relationship to emacs."	ctrlmetathrowaway	40	14	13	"""... It will be there when the icecaps melt and the cities drown, when humanity destroys itself in fire and zombies, when the roaches finally achieve sentience, take over, and begin using computers themselves - at which point its various Ctrl-Meta key-chords will seem not merely satisfyingly ergonomic for the typical arthropod, but also direct evidence for the universe's Intelligent Design by some six-legged, multi-jointed God."""	t5_2qhwu	True
1274209771.0	c5n8y	Using Emacs to write Java code?	gnuvince	31	3	26	"Hello /r/emacs,

I have a Java class this summer.  The teacher recommended that we use an IDE such as Eclipse or Netbeans.  I tried both and disliked them.  I was wondering, besides `java-mode`, what do you use to write Java code in Emacs?  "	t5_2qhwu	True
1257565928.0	a1uer	What topics would you like to see in a series of Emacs screencasts?	mwilliams	36	7	46	"I'm playing with the idea of a weekly Emacs screencast.  Something roughly 3-6 minutes that focuses on a single topic or task.  Anything from lists in org-mode, an intro to the emacs starter kit, working with Git, or a variety of other topics for those who are just getting into Emacs.

I'm on my third week or so of full time Emacs usage and I'm really enjoying myself.  I've also found that the Emacs community lacks a really good source for screencasts.  And typically the best way to learn something is to teach it.  So I'll hopefully be both benefiting myself as well as others.

I'll most likely follow the same structure as [Railscasts](http://railscasts.com/), jumping into a topic and explaining it clearly without a lot of cruft.

Any particular thoughts on topics?

**EDIT**

I should re-word things a bit after getting some feedback from some of you.  

&gt; I'm sorry to rain on your parade, but 3 weeks of Emacs usage don't give you nearly enough experience for a meaningful screencast.

and...

&gt; The issue of the blind leading the blind must be raised.

I think to start this is going to be a series of screencasts for those looking to seriously get into Emacs.  They're going to be beginner topics to most of you and will most likely be of no use for many of you.  I'm certainly not an Emacs expert and I'm not trying to portray myself as one.  I'm simply trying to contribute back to the community that I've found myself starting to become a part of over the past 6-12 months.  And during that time period there were very few solid screencasts to demonstrate some functionality that was explained in a text tutorial, but not completely obvious when trying to work it out.  Utlimately, the [Meet Emacs Peepcode screencast](https://peepcode.com/products/meet-emacs) was what really got me into Emacs.  I'd like to produce something similar but in more bite size chunks.

mattl brought up some distribution ideas as well in regard to format and licensing.  I'm looking to release video that will be at least 720p resolution so it can be viewed full screen so text is clear.  I'm also investing in a condenser mic to have great audio.  If anyone has additional thoughts on hosting, format, and licensing; I'm all ears.

Thanks for the feedback and criticism everyone; it's really helping me shape the way this is going to turn out."	t5_2qhwu	True
1255881024.0	9v93d	emacs-fu: writing presentations with org-mode and beamer	gst	30	2	2		t5_2qhwu	False
1255724443.0	9uttq	MobileOrg: manage your org-mode files from your iPhone	hober	35	8	11		t5_2qhwu	False
1364692338.0	1bc0pu	Most useful add-ons for improving coding productivity?		34	8	10	"What are some of the most useful emacs add-ons/options for improving coding productivity (particularly C++). 

Some things already in my .emacs:

- autocomplete
- google C++ style 
- random .emacs stuff: f12 key mapped to compilation/show-paren-mode on/highlight current line"	t5_2qhwu	True
1364024760.0	1aulyy	How has your emacs usage changed?	wadcann	36	8	19	My own usage of emacs has altered significantly over the years: the keystrokes I typically use, the packages, and so forth, have shifted.  As you've used emacs, what changed?	t5_2qhwu	True
1359324226.0	17e1m1	Vim user wants to learn....	sgoody	31	5	42	"I'm a fairly established Vim user now and I love the different edit modes and the normal mode key commands/combinations. I'll be perfectly straight with you here; I have some prejudice that means I doubt that I'm going to ever find Emacs' basic text editing *as good* as Vim. But, I do find the quality of some Vim plugins to be disappointing and I often find myself wanting more, couple that with the fact that Emacs seens to have more IDE-like features and my interest has been piqued in Emacs. 

I can't imagine myself doing anything with VimScript, so I often feel left wanting more. But one of my stumbling blocks with emacs is basic text editing. With Vim it has always felt fairly natural and at least 50% intuitive for command keys and making combinations of those commands. E.g.

d = delete
w = word
dw = delete word
d2w = delete 2 words

Also, there's other things such as typing ""$"" goes to the end of the line, which ties in with regular expressions. 
And so on. But when I try to start with Emacs the key combinations seem unintuitive and lengthy. Also, the use of the ""alt"" key seems a bit like playing Twister.

The question is, am I missing something with regards to learning key commands and key combos? Is there some easy way to remember them, or is it just a case of learning them. Also, does anybody actually use meta = alt or is that one thing that everybody remaps?

I'm not really interested in evil-mode as I would prefer to embrace Emacs as it was originally intended rather than trying to make it something it's not. 

Is there any way to mentally cross that bridge? Or is it simply a case of one or the other. Either choose Vim and it's great text editing features or choose Emacs and all of it's value-added advanced extensibility features? Or am I kidding myself about the fact that I'm a die hard Vim user who can't change?

I'm genuinely interested in your thoughts on these kinds of things.

I'd also be interested to hear from former Vim users who made the switch and why you made the switch. 

P.S. I am a lisp fan, so there is quite a pull for me towards Emacs, I just don't seem to be able to shake my Vim habit.


Edit: Big thanks to everybody who's replied. I have actually got a good few take away points from this that I've not picked up on in other discussions/tutorials/documentation. Primarily I think that I shouldn't be seeing it as something which comes out of the box that I should work with, but rather something that I should bend to my own means, and evil-mode could or should be one of those things. I'm going to take this into consideration and put a big effort into learning emacs, though I'm going to keep evil-mode on the back burner for now. It's often too easy to pick up Vim because I know I can get X done very quickly using certain features. I guess initially I'm going to have to just fire up emacs and spend some time looking up equivalent key combinations.

I am looking forward to specific major and minor modes and all of the things that emacs brings to the table, just as soon as I can get over that first hurdle of basic text manipulation. "	t5_2qhwu	True
1359132299.0	179fzl	Evaluating Lisp Forms in Regular Expressions - Mastering Emacs	mickeyp	28	3	1		t5_2qhwu	False
1351038290.0	11z7qf	Quick note taking with Emacs and Org Capture	gabrielsaldana	37	8	1		t5_2qhwu	False
1317144867.0	kt54h	Emacs Reboot #9: Blogging	cwgem	29	2	0		t5_2qhwu	False
1315825898.0	kcynd	Deft - Note taking in emacs	jeekl	32	5	6		t5_2qhwu	False
1313057444.0	jfkap	"Today I learned smart tab is already integrated into 
emacs"	kcin	29	2	7	"Just set

    (setq tab-always-indent 'complete)

and then if the line is already indented TAB offers completions for the symbol at point."	t5_2qhwu	True
1311959116.0	j3d5t	GNU Emacs Developers Will Fix It; Please Calm Down 	gst	36	12	1		t5_2qhwu	False
1311938896.0	j34kn	Emacs violates GPL since 2009	gst	46	21	10		t5_2qhwu	False
1302524007.0	gnc9b	I was tickled that I got emacs into a block buster movie. I actually do use emacs irl, and although I do not subscribe to alt.religion.emacs, I think that's all incredibly relevant to the world of Tron. 	bonzinip	35	7	1		t5_2qhwu	False
1293867492.0	euh68	What’s coming up in Emacs 24 	gst	36	13	3		t5_2qhwu	False
1284178046.0	dcdp1	Emacs-Calc: The poor man's Mathematica	karthink	29	2	7	"http://vimeo.com/14742598

A tutorial to the powerful but oft-ignored Emacs calculator. Does everything from symbolic differentiation to modulo arithmetic."	t5_2qhwu	True
1275002810.0	c8urr	I've implemented a stack-based language, sort of like a slim Factor, usable directly inside emacs lisp.  I don't know why I do these things.	commonslip	30	4	6		t5_2qhwu	False
1270983357.0	bpcmz	Emacs users, whats your favorite font?	Neutralise	33	5	52	And where can I get it?	t5_2qhwu	True
1269580815.0	bifad	Emacs Tip of the Day: Start Using IBuffer ASAP.	vedang	29	3	7		t5_2qhwu	False
1250883625.0	9cwpc	Emergency Elisp	semente	30	4	0		t5_2qhwu	False
1237313258.0	85dza	This is when it might be going too far...	micah	39	11	6		t5_2qhwu	False
1232567395.0	7rfkm	emacs-fu: emacs 23	gst	31	5	0		t5_2qhwu	False
1375913884.0	1jwxza	Analysis of Emacs keys pressed (RSI related)	chrisdoner	29	3	69		t5_2qhwu	False
1375629557.0	1jol1n	org-trello – Sync org-mode file and trello	ianclarksmith	29	4	2		t5_2qhwu	False
1365515021.0	1bzl8b	How can I get a dumber/simpler shell in emacs?	hairlesscaveman	33	7	20	"I do a lot of work on the terminal, and write most/all of my code in emacs. Currently I'm flipping between emacs (running full-screen on my mac) and Terminal.app (running via TotalTerminal -- a killer little app if you're a mac user!), but having the desktop slide around is starting to get really annoying.

I'd really like to use a shell buffer, but it seems as though emacs is trying to do too much with it. I can't use the ""up"" cursor key to scroll through my zsh history, I can't tab to complete... these things are essential for me.

Is there any way to get a simple replica of the terminal I'm used to in emacs?"	t5_2qhwu	True
1363974237.0	1at71n	Last day of the compo, we got to the final but the r/vimboys are giving us a beating.	micmonmop	35	8	14		t5_2qhwu	False
1363417970.0	1aeev9	Your Desired Features in Emacs, Use Case	MoreHugs	35	9	54	"I searched the subreddit, and I did not see anything like this submitted recently.

What are features (or changes to existing functionality perhaps) would you like to see merged into Emacs that currently do not exist? What is your primary usage of Emacs presently, as an example: development, writing reports, research, blogging, or writing literature?  Do you know Elisp or Guile currently and to what extent?  What do you feel are killer features of Emacs presently?"	t5_2qhwu	True
1363122586.0	1a66mx	Today I learned that you can read PDFs in Emacs 	ckoch786	30	5	22		t5_2qhwu	False
1360964843.0	18lqb2	Writing prose with Emac	Denommus	33	8	12		t5_2qhwu	False
1356962455.0	15q1j1	Driving Git with Emacs, Part I	bozhidarb	36	11	2		t5_2qhwu	False
1354608322.0	1494kk	.emacs vs .emacs.d/init.el	munchor	33	7	30	"I once heard that ~/.emacs was deprecated and that ~/.emacs.d/init.el was the way to go. So, I [moved to this structure](https://github.com/davidgomes/.emacs.d) and I really like, but I wonder if I should try and convince my friends to use it too, is it really the ""old way"" to do it?"	t5_2qhwu	True
1353519503.0	13kpn6	Git modes for Emacs	lunaryorn	34	6	9		t5_2qhwu	False
1351213791.0	123lbu	There MUST be a better way to switch between splits.	MaxGene	29	2	39	"Vim convert here who misses that Vim had &lt;C-W&gt; &lt;direction&gt; to switch between buffers; it was so convenient I set it to &lt;C-direction&gt; for quicker access. It was quick and allowed me to quickly reach any buffer I wanted with a keystroke or two without thinking or watching for the UI to update. So far I haven't found any way for Emacs to switch splits other than &lt;Ctrl-O&gt;, which just goes to whatever the ""next"" one is. Am I wasting my time, or is there a way to choose which split it'll go to?"	t5_2qhwu	True
1349712279.0	11555q	Emacs for Xcode+ios Development	suhrob	33	5	2		t5_2qhwu	False
1344840266.0	y4tgp	No, ido-mode, I actually wanted to create a new file	rjray	32	6	16	"So, I fairly recently (well, a few months ago) started using IDO within emacs. Nothing too in-depth or fancy, I just enabled it and let it do its thing. From what I've seen, it seems to be mostly helpful. Mostly.

One thing I've noticed that has bitten me a few times, is that when I'm trying to create a new file that closely matches another one in my editing history, it *insists* on opening the existing file. For example, most recently I was trying to create a `README.md` file in a GitHub repo. I'd recently editing `README.md` files in two other repos. Instead of creating the new file, IDO insisted on giving me the choice of the other two files. I had to switch to a terminal and ""create"" the file with `touch` before IDO would actually open it.

Here is the part of my emacs config that relates to IDO:

    (setq ido-enable-flex-matching t)
    (setq ido-everywhere t)
    (setq ido-use-filename-at-point 'guess)
    (setq ido-create-new-buffer 'always)
    (setq ido-file-extensions-order
          '("".org"" "".txt"" "".pm"" "".pl"" "".clj"" "".emacs"" "".xml"" "".el""))
    (setq ido-ignore-extensions t)
    
Unfortunately, I don't really know IDO well-enough to know what part of this is responsible for that behavior-- I'm not even sure where I cribbed the above lines from (thought it was from EmacsWiki, but I don't see the lines on the IDO page there). I thought I'd ask the collective wisdom here for help, before I just give up on IDO completely...

Thanks!"	t5_2qhwu	True
1342802569.0	wvpmx	Running GNU Emacs on an Android tablet	angryformoretofu	30	6	5		t5_2qhwu	False
1334964666.0	skj37	An Emacs Diff (Ediff) tutorial	jjasghar	31	6	9		t5_2qhwu	False
1318169376.0	l60dt	Getting Started with Emacs 24		30	2	7		t5_2qhwu	False
1299189638.0	fwucs	What's New in Emacs 23.3 RC1	semente	28	3	0		t5_2qhwu	False
1284039885.0	dbl8s	"IBM DeveloperWorks series ""Emacs Editing Environment"". A tad dated, but still useful."		30	2	1		t5_2qhwu	False
1260792359.0	aegvf	Emacs developers are switching from CVS to Bazaar		28	2	15	"Some discussion on the maiing list

http://lists.gnu.org/archive/html/emacs-devel/2009-12/msg00573.html

...and instructions in the wiki:

http://www.emacswiki.org/emacs/BzrForEmacsDevs"	t5_2qhwu	True
1259643728.0	a9qex	Undo Tree Mode: more intuitive behaviour of the standard undo/redo system via a branching tree of changes	mqt	28	3	6		t5_2qhwu	False
1258370240.0	a4ugi	Emacs package manager - ELPA	greenrd	27	2	2		t5_2qhwu	False
1370787393.0	1fzccf	Emacs Mouse Slider Mode for Numbers	agumonkey	26	2	5		t5_2qhwu	False
1368573025.0	1echxp	Stallman is a witty guy	CarbonFire	33	9	6		t5_2qhwu	False
1365860587.0	1c9nkp	(Screencast) Emacs - Paredit and Multiple Cursors	cog2011	27	3	14		t5_2qhwu	False
1363315464.0	1absue	Replacing Google Reader with RSS in Emacs?	MattDarling	35	12	13	"So, Google Reader is [being killed](http://lifehacker.com/5990456/google-reader-is-getting-shut-down-here-are-the-best-alternatives), but it currently comprises at least a quarter of my internet usage.

Seems like the perfect time to migrate a huge chunk of my life into Emacs!

I know Gnus and Wanderlust exist, but I'm curious if anyone actively uses them (or some alternative) with a similar workflow to mine:

* I use(d) Reader to aggregate a few active feeds where I read ~30% of the posts, and many sporadic feeds where I read everything. An interface like Dired is good, being able to expand a single item's content is even better.
* I send long articles to [Pocket](http://getpocket.com/), which if nothing else I believe can be done [via e-mail](http://help.getpocket.com/customer/portal/articles/482759).
* I like to use starred items to save the best content for searching in the future, which I hope Org can handle, but I'd like to capture a post as a *thing* rather than just the URL or something.
* Bonus points if there's a script for importing Google Takeout's JSON format for starred items, which has all the sorts of detail I'd want. [Example](http://pastebin.com/8BsQF8mP). I'd be willing to hack around to make this happen, since it doesn't seem so difficult...
* A searchable archive of posts I've read would be fantastic - sometimes I remember reading about some software, but not the site that posted it, and Reader's search was great for looking back years into stuff I'd read. Not necessary, though. If archiving starred items is possible, this should be possible too, with a hook or some `defadvice`.
* Being able to open the original in an external browser is pretty essential, but ought to be possible with `browse-url-browser-function` or something.
* Hopefully some sort of relatively easy way to add new feeds if I have their URL. Doubt it will be as nice as clicking on the feed and hitting ""add to Google Reader"", but maybe something [like this will do](http://blogs.openaether.org/?p=236), or using the ""send to external application"" functionality built into Firefox...

I realize that seems like a lot! I'm just curious if this functionality already exists, and if someone has a wonderful `init.el` I could copy."	t5_2qhwu	True
1339699455.0	v228v	zen-and-art theme ported to emacs 24, available on marmalade.	developernotes	30	3	18		t5_2qhwu	False
1334763744.0	sg51f	"A discussion on emacs-devel about Kickstarter-like 
funding for implementing Emacs features"	kcin	27	1	1		t5_2qhwu	False
1333979076.0	s0ra4	An excellent guide to how to learn Emacs	shubhamharnal	29	4	1		t5_2qhwu	False
1333044627.0	rjkko	Future Bug (found while browsing Emacs source)	cag_ii	33	11	7		t5_2qhwu	False
1330548534.0	qbtou	Inventing on principle - great talk! My question is specifically whether there is any emacs code that does anything comparable to his editor in terms of changing literal values in code be they numbers or colors--ignoring the other fancy features.	shizzy0	30	3	13		t5_2qhwu	False
1327753809.0	p0fjl	"""A Multi-Language Computing Environment for Literate Programming and Reproducible Research"""	metacircular	30	3	4	"Journal of Statistical Software article by Eric Schulte, Dan Davison, Thomas Dye, Carsten Dominik; about Emacs Org-mode.

[Link](http://www.jstatsoft.org/v46/i03)."	t5_2qhwu	True
1323551033.0	n7qq3	emacs-fu: system administration with emacs	ndanger	32	7	0		t5_2qhwu	False
1323010322.0	mzrhf	Hack Emacs: A series of introductory and intermediate Emacs screencasts.	gnuvince	28	3	2		t5_2qhwu	False
1321827809.0	mjen0	Post your init time!	suhrob	32	5	41	"M-x emacs-init-time

M-x emacs-uptime

Mine are: 

init: 8.5s
uptime: 22h:19m

The init time seems bit too long, no? Not a too big issue for me. I do  have most stuff byte compiled and use autoloading, probably not everywhere where I could, I imagine this should/could be snappier... the time includes opening 62 buffers at startup... and I am running emacs-client... so overall I'm quite happy. 

Care to post yours and maybe give some good tips for speed-up?"	t5_2qhwu	True
1318271907.0	l7c24	Emacs dired mode - The Basics	km0r3	28	3	8		t5_2qhwu	False
1313251426.0	jhqwp	"If you are a competent Emacs user and like to help 
out others then check out the unanswered Emacs 
questions on StackExchange. Registration is not 
required to answer questions."	kcin	32	7	2		t5_2qhwu	False
1269325009.0	bgyln	Ask r/emacs: Questions from a newbie	codemon	27	4	28	"Hi folks!


It has been almost two weeks since I started using emacs. So far, I have just been using it as a text-editor with different/faster keyboard shortcuts. I have a few questions, would appreciate it if you guys could help me out with some of them:

* Considering the steep learning curve, it would help if I could ask questions directly on some forum or mailing list instead of google-ing for 30 minutes and figuring it out. Are there any forums out there that aren't hostile towards newbies with stupid questions?

* I don't know any Lisp. Would it be good to start learning it right away, or should I stick to copy-paste for the time-being?

* I've been using GNU Emacs, but I recently found out that there's also an XEmacs. Which one should I use? Should I not care about it at this point?

* Those of you who are working -- are you allowed to use Emacs at work, or are you forced to use other IDEs? (I know there's no fixed answer, I just want to know what happens in most cases)

* How do you deal with the 'Emacs hangover' (using Emacs shortcuts in other applications). It can get quite annoying. Does the brain switch from emacs-mode to non-emacs-mode easily after some experience?

* Why is it that vim is installed by default on most Linux distros and emacs isn't? :|


Edit: Thanks for the replies!"	t5_2qhwu	True
1249699885.0	98nac	9 Tips for the aspiring Emacs playboy: LispCast	sergio_101	31	6	0		t5_2qhwu	False
1245867630.0	8vb3r	Emacs running on an Android phone	hober	30	5	4		t5_2qhwu	False
1236547731.0	832kw	Emacs Color Themes	gst	28	3	2		t5_2qhwu	False
1233557771.0	7u6ck	Emacs Pretest 1 available now	gst	27	2	1		t5_2qhwu	False
1232711116.0	7rv49	emacs - So a few months ago I switched.	gst	31	5	0		t5_2qhwu	False
1375412328.0	1jjh6h	Comint: Writing your own Command Interpreter	zoidberghoneydew	28	2	0		t5_2qhwu	False
1374456218.0	1is7nk	Check out this 'rings' package I wrote. I think it's better than using tabs	ricardostallmano	29	4	3		t5_2qhwu	False
1373258725.0	1hufzh	Emacs Lisp Animations	istamp	28	4	1		t5_2qhwu	False
1369054487.0	1eovok	Setting Up Octopress With Org-Mode	ronert	29	4	0		t5_2qhwu	False
1362332701.0	19l1x0	Evernote replacement using Emacs?	mcandre	28	4	24	I've been looking for a highly cross-platform note sync system, and so far, Evernote has fit the bill the best. But I'm wondering if I can achieve the same result, synced text notes across Mac+Windows+Linux+mobile using Emacs and a generic cloud storage service like GDrive or Dropbox. Thoughts?	t5_2qhwu	True
1361372954.0	18vzuv	In The Brain of Nic Ferrier, This Year in Em -- elnode, elnode:marmalade, erbot:jails...	agumonkey	25	3	15		t5_2qhwu	False
1356277908.0	15buhy	Emacs conference in the UK on 30 March 2013 	tpk1024	30	8	0		t5_2qhwu	False
1352170501.0	12pgtg	Restarting from scratch	pckt	31	6	26	"So about 5 hours ago I began re writing my entire config, every little hack, every hook and function. Does anyone else periodically do this? How have you found the results of your rewrite? Does anyone have any links for new great modes/things?

EDIT: Lots of really great tips and bits of information I would just like to thank you all."	t5_2qhwu	True
1352046184.0	12m6rf	Share your org-capture templates!	buffalo_pete	30	8	8	I am returning to org after a long time away, and I'd be interested to see what other folks are doing with their capture templates. Thanks, everyone.	t5_2qhwu	True
1351667655.0	12dzss	A Gentle introduction to CEDET (Updated)	suhrob	27	2	2		t5_2qhwu	False
1337180591.0	tq0y0	Proposal for an embeddable Emacs	shizzy0	32	8	18		t5_2qhwu	False
1329662279.0	pwfwh	Package Management in Emacs: The Good, the Bad and the Ugly		27	4	1		t5_2qhwu	False
1327510399.0	ow81a	Emacs and Common Lisp, Part 2	kruhft	33	10	24		t5_2qhwu	False
1326739313.0	ojkzn	PComplete: Context-Sensitive Completion in Emacs	mickeyp	25	1	0		t5_2qhwu	False
1316955544.0	kqtcj	Hint #2 - Workspaces (Emacsrookie.com - Hints about the emacs text editor)	zastav	30	4	0		t5_2qhwu	False
1292513118.0	emud7	Intro to GDB under Emacs	kanak	28	3	1		t5_2qhwu	False
1272450276.0	bx6kq	Extending M-x in Emacs		27	5	0		t5_2qhwu	False
1264649965.0	av1j8	Ask Emacs: What do you think of ECB (Emacs Code Browser)? (see text)	jamesb43	28	4	20	I am trying to migrate from Visual Studio/TextMate to emacs. I am using ECB to see a list of files associated with my project. I am not entirely happy with it, but I probably need to tweak it more. What do other /r/emacs readers use? Am I misguided for wanting such a thing? Anyone used to use it and gave up?  Came back to it?  Alternatives? I am interested in hearing others experiences.	t5_2qhwu	True
1256450055.0	9xi6v	Using Emacs Regular Expression Builder	gst	25	0	0		t5_2qhwu	False
1375448794.0	1jk84f	screenshots integrated with emacs org mode attachments	dfeich	23	0	8		t5_2qhwu	False
1375254366.0	1jeohh	Maybe the shortest emacs manpage, though the most accurate	stevie77de	34	10	13		t5_2qhwu	False
1370541216.0	1fsyxa	Emacsy - Scheme library for application extension ala Emacs accepted for GSOC 2013	mac	27	3	2		t5_2qhwu	False
1362822964.0	19yrhd	I want to get more proficient with Emacs. What packages should I learn and, importantly, why?	hairlesscaveman	28	4	41	"I've been using emacs for a few years now, but I'd like to get more proficient/efficient. I've removed the scroll/tool/menu bars and added certain things like smex, but I've stuck with things that are quick to learn and instantly add benefit.

Whenever anyone asks why they should switch to emacs, a common list of packages is reeled off; org-mode, ido, dired, etc. What I'd like to know is *why* I should use these packages, why they are beneficial, and specifically in what use-cases they are most useful.

I'd also like to know about the lesser-known but really useful built-in functionality.

Can you guys help out?"	t5_2qhwu	True
1350127221.0	11eslt	Text editing with confidence and Emacs	bastibe	29	7	30		t5_2qhwu	False
1338915214.0	umb24	expand-file-name is good for path concat too	jisang-yoo	26	2	1	"I often see some elisp code using concat for path manipulation. For example,

    (concat some-dir relpath)

which assumes `some-dir` ends with a trailing slash. Otherwise,

    (concat some-dir ""/"" relpath)

Or to make it work regardless of whether `some-dir` ends with a slash or not:

    (concat (file-name-as-directory some-dir) relpath)

I wanted to share that `expand-file-name` also works for path concatenation.

    (expand-file-name ""Public"" ""C:\\Users"") ; =&gt; ""c:/Users/Public""
    (expand-file-name ""Public"" ""C:\\Users\\"") ; =&gt; ""c:/Users/Public""
    (file-name-as-directory (expand-file-name ""Public"" ""C:\\Users"")) ; =&gt; ""c:/Users/Public/""
"	t5_2qhwu	True
1334755802.0	sfynk	CEDET 1.1 released	gmartres	24	0	1		t5_2qhwu	False
1334045182.0	s29t8	An Emacs Conference in London	knaveofdiamonds	26	2	1		t5_2qhwu	False
1329788942.0	pynvm	Evil for Emacs users	dnquark	26	5	7		t5_2qhwu	False
1326093531.0	o91ij	Easy CSS editing with Emacs	gabrielsaldana	26	4	3		t5_2qhwu	False
1314366541.0	jv3sw	Emacs-Fu: Customizing the mode line	jeekl	26	3	2		t5_2qhwu	False
1293731539.0	etqlg	GNU Emacs Theme Generator	tpk1024	28	5	0		t5_2qhwu	False
1292831720.0	eonz9	Cure for hurting hands?	malcontent	35	11	77	"Every once in a while I make an attempt to learn emacs and within a couple of hours stop because my hands start hurting.  I mapped the caps lock key to control like everybody says but it really doesn't help that much because I have to either rotate my wrist or extend the left pinky to hit it.

I also find the constant C-x and M-X  very painful. The X is in such an odd place that my left hand has to take a crippled looking shape to chord them.

One idea I had was to make the Ctl and Alt keys sticky. Instead of C-x I would hit the ctrl key, take my hand off and then hit the x key and so on. In fact I would rather have the sticky ""command"" key to be on the right side perhaps more accessible. Maybe the / key or something like that .  I know that it's possible to may any key to anything but I am curious to hear your advice on how I can learn emacs without causing myself so much pain.

Thanks."	t5_2qhwu	True
1284113576.0	dc0qt	A Guided Tour of emacs-git	cydork	24	2	1		t5_2qhwu	False
1265030801.0	awo11	in which, were a title… OMG!TL;DR: package.el improving, ELPA testers needed	seths	26	1	3		t5_2qhwu	False
1257274691.0	a0lbb	I want to learn how to program Emacs	tux3	29	5	14	I have experience with Scheme from taking a SICP based programming course. What I really want is a guide that dives straight into programming the Emacs environment, explaining some commonly used functions, how things are architected (things like mode hooks), and just in general, give tips on best practices. The guide I have found from GNU seems to start from a very basic level, beginning with the language itself. Something less introductory would be appreciated. Thank you.	t5_2qhwu	True
1254401855.0	9puil	Emacs Tip #33: paredit	gst	27	3	6		t5_2qhwu	False
1247668749.0	91fg4	Learn Emacs in Ten Years	amjithr	28	6	0		t5_2qhwu	False
1376307732.0	1k79bz	Emacs Online Documentation	BruceConnor	25	4	9		t5_2qhwu	False
1375655852.0	1jpd6e	emacs tapas - bite sized screencasts for learning emacs-lisp - a work in progress	nicferrier	25	4	13		t5_2qhwu	False
1373444965.0	1hzvpp	"""Emacs"" on Google Trends: on the decline..."	revocation	33	9	90		t5_2qhwu	False
1369343490.0	1exfz3	Should Emacs packages automatically configure themselves?	skeeto	28	6	41	"I maintain a collection of web development minor modes called [Skewer](https://github.com/skeeto/skewer-mode), installable from MELPA. Right now these minor modes are automatically enabled with their associated major modes when the Skewer package is activated. It's done by modifying the major mode hooks in the autoloads file. This behavior finally came up to bite me recently when [Steve Purcell discovered it enabling itself on the wrong mode](https://github.com/skeeto/skewer-mode/issues/22).

This has raised the question: **is it reasonable for packages to modify hooks and/or generally configure themselves, or should they just set up some function autoloads and leave it to the user to finish configuration?**

I wrote a more detailed post about it here: [Should Emacs Packages Self Configure?](http://nullprogram.com/blog/2013/05/23/)

Another discussion, recently re-opened: [a bugfix and various improvements](https://github.com/purcell/elisp-slime-nav/pull/6)

I'm looking for the community's opinion on the matter.
"	t5_2qhwu	True
1367186155.0	1dao18	Part 1 of a guide to Emacs for VIM aficionados	avdi	25	4	11		t5_2qhwu	False
1366293791.0	1clte0	Narrow-to-region-indirect for Emacs	skeeto	24	2	3		t5_2qhwu	False
1357239953.0	15wh2b	Automatically open remote files in local emacs (remote $EDITOR support)	skeltoac	29	7	8		t5_2qhwu	False
1345359227.0	ygq78	Emacs - is it the way to become an ultimate superuser? 	prometheus2	28	8	48	"Someone recommend me to this site from superuser.com.
I always strive to do things efficiently like all you guys out there, but in a different environment. I use cygwin with Windows (Vim as my editor), Total Commander for file manager, tiling windows manager, AutoHotKey, and Vimium on Google Chrome. I was wondering though, if my efforts and knowledge would pay off in the long run. My biggest fear right now is that emacs might be better than everything I have learned. By 'Better,' I mean saving more time. 

I tried to make excuses for myself, saying that emacs has a high learning curve, or that I may get hooked on the OS-like editor, spending hours trying to figure out stuff just for the pleasure of solving problems. (Time spent &gt; Time saved)
So by learning emacs, ~~did your life become more efficient~~ has the quality of your life improved? Personal experiences or an anecdote would be much appreciated."	t5_2qhwu	True
1341151028.0	vvn1x	A functional introduction to CEDET – EDE		26	4	1		t5_2qhwu	False
1340660555.0	vlea9	Going from Vim to Emacs and Emacs to Vim	sahilsinha	31	11	70	I'd be interested to hear experiences of people who have done either of the aforementioned, any thoughts are appreciated. I imagine you could get pretty scientific about the advantages or disadvantages of each. 	t5_2qhwu	True
1339396766.0	uvsyi	Vim user looking to learn emacs	keporahg	27	4	38	"Hey guys

As the title suggests, I'm a long time Vim user interested in checking out what emacs has to offer. I would consider myself to be a somewhat-above intermediate level vim user; I have a decent level of mastery over the modal interface, navigating and manipulating text, and customizing vim to suit my needs.

So why am I curious about emacs? Well from what I've heard, emacs is a lot more powerful in terms of what you can script it to do. Vim has vimscript and support for scripting it with python, perl, and ruby, but even then there's still restrictions as to what you can do. For example, graphically, you're restricted to vim's window-buffer model which is text only. That makes it a real pain to do something like integrate it with a debugger.

I mainly use vim for C++ and Java and in terms of code completion there's only a small handful of plugins. For C++ there's either the ctags approach (OmniCppComplete) which usually fails once you start doing anything complex, and clang_complete, which actually works pretty nicely since it gets information about completion from the compiler without the use of tags. For Java I use VJDE and javacomplete but they're pretty sub-par.

The reason I want to try out emacs is to see if it offers better tools for working on larger/complex code bases. I've heard a lot of things but I'd like to try it out for myself to see how it compares to vim.

And some final questions:

* as most of you may know, vim comes with a tutor program called 'vimtutor' which can be run from the shell and gives a quick run down of the basics. Is there anything like this for emacs? I noticed there's a tutorial link when you open it up so I'll probably go through that - any other recommendations for a beginner?
* I've heard that emacs is more like an IDE than a text editor; does it ship with support for code completion for C/C++/Java or are there separate plugins? If so, any recommendations for plugins? Any idea on how these compare to Eclipse/Visual studio code completion?
* To any former vim users: I know there's a vi-compatibility mode (viper) which I'll probably end up using (although last time I checked (several years ago), it was missing lots of things - like text objects, visual mode, registers), are there any new ones that support most vim features and not just vi? Also, would it be recommended to use these or to stick with native emacs bindings?

I think that's all the questions I have for now,
Thanks"	t5_2qhwu	True
1337917166.0	u3xht	/r/emacs, what is your favorite color theme?	CodeBlock	25	4	42	I tend to get bored of syntax color themes after a few months, and change it up. Looking for some new suggestions. I've used twilight (a port of the Textmate theme), then went to Solarized for a while, then tomorrow-night. Looking for some new suggestions. I don't particularly have a preference of contrast. Generally I like light-on-dark though. Any suggestions?	t5_2qhwu	True
1336994106.0	tmb48	"If there is a feature you miss from Emacs and you 
think it would be popular enough to implement with 
crowdfunding then add it to the bottom of this page"	kcin	24	2	48		t5_2qhwu	False
1336156468.0	t77xl	Has There Been Any Work to Use Emacs As a Full OS?	brianbommarito	28	6	44	"With the Raspberry Pi coming out soon (Mine is on order for sometime next week), and small form computers continuing to gain some traction, has there been any work to get Emacs to run a full computer? 

Yes, it would probably be impractical as all hell, but I live in Emacs so much already, it makes a bit of sense to run it as a full-fledged OS."	t5_2qhwu	True
1332630286.0	rbyyc	Using org-mode as the ultimate note taking tool.	suhrob	27	4	9	"[Here](http://zhangda.wordpress.com/2012/03/23/using-org-mode-as-the-ultimate-note-taking-tool-6/) are some tips how to keep a well organized notes database. 

While likely user-case specific, but how do you keep your notes? I currently tend to have fewer larger files (e.g. for each project one file which includes notes, agenda etc.) and 1 large centralized wiki and agenda. I'm not sure this is optimal though..."	t5_2qhwu	True
1325887863.0	o5yx9	Tom Tromey: Rebasing Emacs on Common Lisp	muuh-gnu	35	13	29		t5_2qhwu	False
1325142178.0	nuo3a	Why the sudden interest in org-mode?	wadcann	28	6	32	"In the past few months, I've heard of a lot of people switching to emacs or showing interest in using org-mode, even if they haven't otherwise picked even pretty basic emacs features.  Some are forum users, and some are in real life.

Nothing wrong with that, of course -- it may be that there's a big need for org-mode's features.  But I have to admit, it's left me a bit bewildered as to how org-mode got all this press.

I only use a portion of org-mode's features, but it seems to me mostly to be a ""better text format"".  It adds the ability to embed some traditionally non-text-file features -- tables, auto-executing code, outlines, etc -- to text files.  I like that, and I've been writing .org files instead of .txt files recently.  However, it seems like the sort of thing that would be on par with integrating gnus with bbdb or something.  Fine as features go, but not the sort of thing that I'd normally expect most new emacs users to be doing off-the-bat or to be specifically-interested in emacs for.  More of interest to people who are trying to emacsify everything they do.

It could be that there's a big unmet demand for PIM-like features in Unix software, but I haven't seen a whole lot of people talking about, say, ical/diary/gnus support.

Have there been famous people talking about org-mode being game-changing to the software world or something recently?  What is driving the sudden interest?"	t5_2qhwu	True
1322565221.0	mt8d2	Emacs Adventures – A couple of things I’ve learned	sverrejoh	33	11	2		t5_2qhwu	False
1321415839.0	mdyz4	Cocoa text system has many emacs text manipulation commands. Kill ring, mark, transpose, change case and a lot more. Most are not bound to any key by default.	aintso	26	3	5		t5_2qhwu	False
1320065196.0	lv3j2	Do you regularly download your Emacs build from emacsformacosx.com? If yes, please consider helping the maintainer to buy new hardware.	chocolait	27	7	12	"I used to build my Emacs but I find it easier to download the universal binary provided at emacsformacosx.com.  
Please go to http://fundedbyme.com/projects/2011/10/emacsformacosxcom-needs-a-new-build-server/ to help.  
Thanks."	t5_2qhwu	True
1317055599.0	kryo5	"Google Contacts for Emacs
"	rhubarb_	24	2	1		t5_2qhwu	False
1308894326.0	i7ucm	Emacs 24.1 heading into Pretest	gst	29	7	6		t5_2qhwu	False
1294174543.0	ew74x	How I Work: Working with OS X and Emacs 	gst	27	5	3		t5_2qhwu	False
1292911494.0	ep6ju	Announcing the Emacsmirror - The Emacsmirror is a collection of almost 2900 Emacs packages. 	gst	30	8	5		t5_2qhwu	False
1290454866.0	ea3or	Editing Google Docs in Emacs		31	10	0		t5_2qhwu	False
1288628842.0	dzk7l	org-mode In Your Pocket Is a GNU-Shaped Devil	greenrd	32	8	1		t5_2qhwu	False
1265082899.0	awxz6	Chrome extension: Edit with Emacs	ferk	24	3	5		t5_2qhwu	False
1237326298.0	85fw5	 Nav, An IDE-like Navigation Pane for Emacs	gst	30	6	14		t5_2qhwu	False
1235159329.0	7z0m6	Emacs: dedicated windows	gst	24	4	2		t5_2qhwu	False
1376393379.0	1k9soe	Emacs keybindings everywhere in Mac OS X	tailbalance	28	7	10		t5_2qhwu	False
1375067587.0	1j9520	Why Emacs?	nautola	29	9	43	"I'm intrigued by emacs and I have a desire to learn it because of what so many people say about how great it is. What about emacs makes it so great? 

The thing that deters me from learning Emacs is that I'm pretty proficient in Vim, and I'm not sure of emacs is going to be worth the investment because of that. 

I've looked and I'd like to know more about what makes emacs so great, I'd also appreciate thoughts about the comparison between Vim and Emacs. 
Thanks guys! "	t5_2qhwu	True
1373543359.0	1i2p1q	An emacs alternative to CtrlP for vim.	mixandgo	22	2	32		t5_2qhwu	False
1372806010.0	1hj2rq	Adventures in Multi Paradigm Programming	DarthToaster	23	2	1		t5_2qhwu	False
1370285656.0	1flixv	How long does it take to get comfortable with Emacs?	magullo	24	3	56	"I am a 37 years old switcher from vim, and have been using Emacs for a month now. I love it's M-x capabilities, and in general love its extended capabilities. 
But still think that vim has a flatter curve. I recently learned how to record macros in vim, and to save them in named registers, but in emacs I still get confused by registers and bookmarks, and how to invoke them. I also have problems with yank and kill, while vi is more similar to other software. 
So the question: do I have to keep on and believe Emacs is a better env for my needs?"	t5_2qhwu	True
1370114955.0	1fh84w	An emacs display engine cookbook	sabof	28	5	19		t5_2qhwu	False
1368607533.0	1edfmr	video review of The Truly Ergonomic Keyboard	xah	27	5	44		t5_2qhwu	False
1362012043.0	19d436	Emacs Conference 2013	johdu	26	7	12		t5_2qhwu	False
1359302265.0	17de86	Radically simplifying your emacs config	selahb	24	2	14		t5_2qhwu	False
1355848845.0	1522ts	"Blocky.io ""emacs glass"" demo.. click on game elements, get code pulled up in hovering emacs frame"	paroneayea	24	3	3		t5_2qhwu	False
1354721663.0	14bqh3	Written my first attempt on a simple major mode - feedback?	bobusumisu	27	6	19		t5_2qhwu	False
1350244320.0	11h2jj	emacs-eclim integrates Emacs with Eclipse for powerful Java development	fistofsenn	26	5	0		t5_2qhwu	False
1347219118.0	zm4nf	Tumblesocks, the Emacs tumblr client	gcr	29	7	4		t5_2qhwu	False
1345639111.0	ymupu	Deuce is (not yet) Emacs under Clojure	aerique	31	9	1		t5_2qhwu	False
1332426777.0	r8e6u	yasnippet emoticon pack ಠ_ಠ	mocker_kc	22	1	9		t5_2qhwu	False
1322489573.0	mrztw	TIL about the Fringe.	crotch_jenkins	26	6	9		t5_2qhwu	False
1317053582.0	krxma	Emacs Reboot #7: Ido	cwgem	24	1	6		t5_2qhwu	False
1311680303.0	j02o0	Aligning Text With Regular Expressions in Emacs 	gst	28	5	2		t5_2qhwu	False
1307073102.0	hqi5f	why I run shells inside Emacs	gst	23	4	2		t5_2qhwu	False
1307046128.0	hq6rq	Simple slide-show presentations with Org-mode, epresent and S5 running through Emacs or your browser	eschulte	25	2	1		t5_2qhwu	False
1305597788.0	hd15c	Here's what you actually need to do to configure the emacs modeline. I did the work so you don't have to.	philiph	25	3	3		t5_2qhwu	False
1300364182.0	g5rh0	"Do you know a great feature of an other editor which 
you miss from Emacs?"	kcin	22	1	51	"There may be cool features in other editors which could be implemented in Emacs relatively easily if Emacs power users and developers knew about them. Do you know such a missing feature? Then post it here. Someone may even know the emacs counterpart of the feature, so you may learn it's not a missing feature at all.  And if it is then someone may implement it.
"	t5_2qhwu	True
1299012941.0	fvamt	"Emacs Artist Mode allows you to use the mouse to 
draw squares, lines, and other shapes in plain text, or 
even paint (screencast) "	kcin	24	5	4		t5_2qhwu	False
1295259572.0	f3q7l	Ask r/emacs: Editing HTML5?	japowl	24	4	8	"Are there any really, really good edit-modes for editing HTML5 in emacs? I've been using emacs for many years, but I thankfully haven't had to edit very much html.  For a while all was good, when XHTML was The Thing To Use. nxhtml-mode works wonders with it. 

However now HTML5 is what everybody wants to use and I simply can't seem to get any html-mode to work well with autocompletions, validation etc. 

I've googled and wandered around most of emacswiki in search of something, but no luck so far. 

"	t5_2qhwu	True
1292592617.0	ene4a	"Org Mode 7 manual out in paperback - ""Organize your life in GNU Emacs"""	bjg	34	12	1		t5_2qhwu	False
1291582745.0	egoki	The emacs 30 Day Challenge	rberenguel	26	5	28		t5_2qhwu	False
1289808409.0	e6a5c	Disabling Prompts in Emacs 	gst	26	6	1		t5_2qhwu	False
1289071915.0	e28ai	Simple tip for browsing python using emacs	pixpop	25	4	9	"When coding in c or c++, I use xcscope.el to lookup definitions or find callers of a function etc. I wanted the same facility for python, but nothing much seemed to work well.

Eventually, I got it to work the way I like.

First, I installed pycscope. This will recurse through a source tree finding python source files, building a cscope database (cscope.out). This database can be used with cscope to lookup python symbols, and can also be used by the emacs cscope plugin xcscope.el

I found that with my emacs install (23.2) editing a python file did not activate the cscope minor mode.

To fix this, you need to edit xcscope.el. Near the bottom of the file are a few mode hooks that activate the cscope minor mode. You'll see hooks for c and c++ already there. I added a hook for python, so cscope is automatically activated when I edit a python file.

Original cscope mode hooks in xcscope.el

    (add-hook 'c-mode-hook (function cscope:hook))
    (add-hook 'c++-mode-hook (function cscope:hook))
    (add-hook 'dired-mode-hook (function cscope:hook))

New cscope hooks with python:

    (add-hook 'c-mode-hook (function cscope:hook))
    (add-hook 'c++-mode-hook (function cscope:hook))
    (add-hook 'python-mode-hook (function cscope:hook))
    (add-hook 'dired-mode-hook (function cscope:hook))

"	t5_2qhwu	True
1284947775.0	dg5hn	REVERT TO CONSOLE &gt; Gnus, Emacs, and Gmail; Getting Started	psykotedy	24	4	12	"This is the first time I've ever read a clear and concise how-to about Gnus and email.  I am quite pleased!

EDIT: As was pointed out, the link is missing.  Here it is: http://www.reverttoconsole.com/blog/emacs/gnus-emacs-and-gmail-getting-started/"	t5_2qhwu	True
1283701661.0	d9v1n	The compilation troll script!	file-exists-p	37	20	3	"Dear all, I wrote a necessary script for emacs, the [compilation troll](http://imgur.com/hmT2C).

You can get the comptroll.el file and the image in an archive at:

http://www.fileconvoy.com/filelist.php?id=9358245542647

Edit: new link http://www.fileconvoy.com/filelist.php?id=g3490f90de948031335334623f797083e80482

Edit2: new link http://www.megaupload.com/?d=45LHLKJL"	t5_2qhwu	True
1278692676.0	cnr55	Trail blazing innovators: Emacs screencast showing org-mode, wl, slime clojure debugging, etc.	metacircular	21	0	1		t5_2qhwu	False
1274798648.0	c7xgh	Emacs 23.1.93 for Nokia N900	skillet-thief	23	2	0		t5_2qhwu	False
1268813218.0	bef51	VM (View Mail) 8.1.0 released. Finally includes full IMAP support.		23	4	1		t5_2qhwu	False
1267708319.0	b95xu	Ask Emacs Reddit: How do you browse the web from Emacs?	ccharles	24	4	16	"I use GNU Emacs 23 and I've been unable to find a decent web-browsing mode. w3 seems long dead. emacs-w3m doesn't seem to work on GNU Emacs 23. Ezbl doesn't appear to be stable yet.

What do you suggest?

Note: I'm unlikely to use Emacs as my day-to-day browser, but I'd love to be able to jump to a page every now and again.

Edit: Based on comments by tzz, localhorst and sugarshark it looks like I'm wrong about emacs-w3m not working with GNU Emacs 23. I'll give that another go. Thanks to all.

Edit 2: It looks like the stable releases of emacs-w3m do not work with GNU Emacs 23, but the current CVS code works just fine."	t5_2qhwu	True
1259502789.0	a96jc	emacs-fu: making buffer names unique	gst	22	1	1		t5_2qhwu	False
1253844695.0	9nv5w	Emacs and Threading, Take 2 	gst	28	6	1		t5_2qhwu	False
1239712002.0	8cd4x	It's All Text: firefox extension allows you to edit textareas with emacs	leonardoe	25	5	9		t5_2qhwu	False
1376666644.0	1khq86	magnars/s.el · GitHub (string manipulation)	jisang-yoo	23	2	18		t5_2qhwu	False
1374256522.0	1in8c5	How to use Emacs 24's package system and MELPA to install a Nyan Cat scrollbar.	jekor	29	10	15		t5_2qhwu	False
1367963497.0	1dw1p7	Where can we find an artist to do an awesome rendition of the emacs logo?	mitch_feaster	22	3	26	"I've been wanting to get a shirt with [the emacs logo](http://upload.wikimedia.org/wikipedia/commons/thumb/5/5f/Emacs-logo.svg/270px-Emacs-logo.svg.png) on it for a while. [The Gnu store](http://shop.fsf.org/category/gnu-gear/) has some half-decent Gnu shirts, but no emacs shirts...

I was thinking of starting a TeeSpring campaign with the vanilla emacs logo but I thought it would be cool if we got a more modern or otherwise awesome interpretation of the emacs logo. Of course, all of the proceeds would go to the FSF.

/r/DrawForMe looks promising, any other ideas? How do you comply with the GPL (which the emacs logo is licensed under) when it comes to drawing stuff? Would it be a violation of the GPL to print the emacs logo on a shirt?

And possibly the most important question: If we got a cool emacs logo printed on a shirt would you buy one? (Again, all proceeds would go straight to the Gnu's trough)."	t5_2qhwu	True
1360508779.0	188xv3	Raw strings in Emacs Lisp	aaptel	26	4	6		t5_2qhwu	False
1360004403.0	17vpkl	Identica-mode 1.3 microblogging client released	gabrielsaldana	21	1	2		t5_2qhwu	False
1350856108.0	11v22o	Two months ago, I switched from vim to emacs as my primary editor.  I keep running into things which make me miss vim.  When you aren't using emacs, what do you miss?	Skunkleton	25	5	35	"I figure that this is a better way to ask the ""Whats cool about emacs?"" question.  So tell me, what cool things can you do easily in emacs that don't really work in other environments?

Edit: thanks for all the comments.  "	t5_2qhwu	True
1344782220.0	y3e65	Pair programming with emacsclient.  Multiple mini-buffers?	commonslip	23	3	5	"Hi r/emacs - at work we often wish to pair program using Emacs + Slime.  We use gnu-screen at the moment to simultaneously share a single emacs.  We'd love to use two X11 frames to do the same job, for various reasons, but two things keep this from being a good strategy.  

1.   Each frame only sees its own current cursor.  Is there a way to indicate other frame's cursors?
2.   If one frame tries to enter a command with M-x the other frame freezes; this is apparently related to the fact that each frame shares the same mini-buffer.  Is it possible to have a separate mini-buffer per frame?"	t5_2qhwu	True
1334185945.0	s56zs	Twilight color theme ported to Emacs 24	developernotes	22	0	16		t5_2qhwu	False
1333878930.0	rz2xm	MELPA: an exciting new community package.el repository	purcell	21	1	5		t5_2qhwu	False
1332373403.0	r7jdu	Why is it that Emacs Lisp functions are often incredibly long, in contrast to most lisp style guides which suggest very short functions.	nerdolution	26	5	24	"If there is anything that lisp [coding]( http://www.emacswiki.org/emacs/CodingStyle#toc4) [style](http://mumble.net/~campbell/scheme/style.txt) [guides](http://norvig.com/luv-slides.ps) (ps) have in common, then it is the rule to write short functions.  Yet, the Emacs code base is full of *very* long functions: a good example is the smtpmail-send-it function, which takes up 196 lines. 

Many packages in Emacs contain at least one really huge function.  So where does this stem from?  Is there a deeper meaning, or are these package just badly written?

EDIT1: spelling, grammar

EDIT2: Thanks for all the answers, I will sleep better now that I know what's going on."	t5_2qhwu	True
1331756053.0	qwnt0	Org-mode: working with source code (literate programming!)	OMouse	31	11	11		t5_2qhwu	False
1324031594.0	nf1o4	Tip: use visual-line-mode instead of longlines-mode if you use org-mode	wadcann	25	3	3	"I've always had my text-mode hook go into longlines-mode to give me soft-wrapped text.  These days, I usually write .org files instead of .txt files, as it gives me tables and outlines and other goodies.  I tried to keep using longlines-mode for soft-wrapped text, but it horribly breaks tables in org-mode.  It also messes up detection of long header lines in the org-mode's outlines.  I [just learned that visual-line-mode](http://stackoverflow.com/questions/1263009/longlines-mode-in-emacs) is apparently the current replacement for longlines-mode.  Unlike longlines-mode, it doesn't break org-mode.

If there's anyone else out there who wants both text-wrapping and to use org-mode, I thought that this might be of interest to them!"	t5_2qhwu	True
1319964237.0	ltyoa	Flymake -- an on-the-fly syntax checker for Emacs	sundar22in	23	3	10		t5_2qhwu	False
1319643421.0	lps6b	Hint #6 - Do what you have to do	zastav	22	3	0		t5_2qhwu	False
1313077285.0	jfrqm	What does your TAB key do?	burke	23	3	12	"I suspect a lot of you will have something interesting. Mine works almost like I want it to, but I'm looking for ways to improve it. 

This is mine: https://github.com/burke/dotfiles/blob/13f48718b311c7a90130cbdbbe99a7dfd3a34a00/.emacs.d/emacs-init.el#L247-273 -- Let's see yours!"	t5_2qhwu	True
1310173264.0	ikj8i	Is anybody here using gnus/mutt in this gmail world?	xoran99	24	4	45	"I'm considering using something more, erm, old-fashioned for my mail than the gmail user interface.  As far as my considerable experience has shown, all email clients suck, but some suck less than others.  Does anyone here still use gnus, mutt, or even rmail?  

If you are using one of these, what are some customizations that make it better for use in the real world?  For example, in Gnus, the HTML part of the message is automatically washed and displayed, which didn't work well for some messages I receive.  Therefore, I had to use the following to get the plain-text part to be preferred:

    (setq mm-discouraged-alternatives '(""text/html"" ""text/richtext""))
"	t5_2qhwu	True
1309758952.0	ig6n3	Distinguish buffers of the same filename in Emacs	gst	23	4	3		t5_2qhwu	False
1308725501.0	i607x	Emacs C(C++) development tips	serge_the_coder	23	3	11		t5_2qhwu	False
1307073540.0	hqibu	My switch from Vim to Emacs	gst	29	10	0		t5_2qhwu	False
1306045949.0	hh68i	GTD with Org Mode, Part I	mihkel_	27	6	0		t5_2qhwu	False
1305603995.0	hd3jm	From my .bashrc: jump to emacs's current directory	jtxx000	24	4	18	"    alias jm='cd $(emacsclient -e ""(with-current-buffer (window-buffer (frame-selected-window)) default-directory)"" | '""sed -E 's/(^\"")|(\""$)//g')""

If you use emacsclient, put the above in your .bashrc, and then use `jm` to quickly go to the directory of the file emacs is currently editing.

EDIT:

Incorporating excellent suggestions by chrispoole and dalgong, here is an updated version:

    alias jm='eval cd $(emacsclient -e ""(with-current-buffer (window-buffer (frame-selected-window)) (expand-file-name default-directory))"")'"	t5_2qhwu	True
1301206921.0	gcdgc	emacs-fu: IELM: a REPL for emacs	gst	26	7	9		t5_2qhwu	False
1294763466.0	f0ac7	Bye bye iCal, welcome org-mode 	gst	27	7	0		t5_2qhwu	False
1292257011.0	el2f8	GNU Emacs tablet pc touchscreen gesture demo on Ubuntu 10.10	gst	23	3	1		t5_2qhwu	False
1289981793.0	e7fh8	emacs-fu: undo	gst	27	8	3		t5_2qhwu	False
1289331187.0	e3md0	"How to effectively insert diacritics and other Unicode 
characters in Emacs"	mickeyp	23	2	1		t5_2qhwu	False
1279302328.0	cqdgj	How to manage big .emacs files	arvid	23	4	14		t5_2qhwu	False
1275666920.0	cbgia	The emacs(1) man page in Plan 9 from Bell Labs.	uriel	33	13	16		t5_2qhwu	False
1273226213.0	c0zv2	Clean up buffer or region in Emacs	rejeep	21	1	3		t5_2qhwu	False
1269010949.0	bfi7x	CSEBand song: I Tried Emacs	ferk	26	8	4		t5_2qhwu	False
1266799232.0	b4ssa	Self-contained emacs	marius	26	4	1		t5_2qhwu	False
1240388760.0	8eg8j	Using Emacs To Add Include Statements Without Disrupting Flow	wbendick	23	3	5		t5_2qhwu	False
1237695775.0	86it2	emacs-fu: in praise of org-mode	gst	25	5	4		t5_2qhwu	False
1376155512.0	1k3ikw	Quick pain-saver tip: put the Caps Lock key to better use!	mnp	25	8	12	"I was setting up a new machine and it occurred to me the beginners might not realize how inconvenient--and painful--having the control key on the bottom row of the keyboard is.  Most old-timers immediately set the caps lock key, right next the 'A' on US keyboards, to be an additional Control key so it's within easy reach of the left pinky.  This has added benefits in places like Bash and GDB and other Readline clients, because the Ctrl-* bindings are similar there.

On recent Ubuntu desktops, open System Settings and chose Keyboard, then the small almost hidden text link ""Layout Settings"".  Choose your keyboard and press the Options button, then open ""Ctrl key position"" and mark ""Caps Lock as Ctrl"".  That's it.

Other systems can look here for many other methods: http://www.emacswiki.org/emacs/MovingTheCtrlKey"	t5_2qhwu	True
1375118321.0	1jad4k	2000+ Lisp Plugins For Emacs under one Roof	atheistexile1	20	0	7		t5_2qhwu	False
1367766100.0	1dqen2	About defadvice	sabof	22	2	1		t5_2qhwu	False
1363413384.0	1aebtb	flycheck - flymake done right, with major-mode based checkers and pre-configured checkers for most languages	rosetta_stoned	24	6	4		t5_2qhwu	False
1349825074.0	117yr4	Google summer of Code Project: Integrating Guile into Emacs	gits1225	29	9	9		t5_2qhwu	False
1337467348.0	tv97h	Google Completion in Emacs	malloc47	20	1	3		t5_2qhwu	False
1334722066.0	sfh9p	Sexy services in your Emacs!	kontata	24	4	10		t5_2qhwu	False
1331847994.0	qyes5	What mode are you using for mail?	mocker_kc	26	9	31	"Seems like some of the popular options currently are Gnus and wanderlust.  I'm looking for good IMAP support for Gmail and Exchange (IMAP is enabled).

Pros/Cons of Gnus and Wunderlust?  Other options I should be considering?"	t5_2qhwu	True
1329071434.0	pm9n7	"What are your ""must-have"" modes?"	terari	21	3	27	"I noticed that my emacs experience became a lot better when I started to use the right modes.

Right now, the ones I need most of time:

* js2-mode - it has a real javascript parser, and can do semantic analysis. and is damn fast. I wish every programming major mode was like that.
* Egg. has its quirks though
* Windmove
* multi-term. it has quirks, but less than eshell..

My greatest frustration is ido-mode. It's nice, but it's just too slow :( also I hate when it guesses things wrong. Also, I thought I would use Winner a lot, but I end up doing C-x 0 and rebuilding my setup.."	t5_2qhwu	True
1327619249.0	oya1i	Best way to learn Emacs from the beginning?	gislikarl	20	1	29	I just started learning Python from the website [www.learnpythonthehardway.org](http://www.learnpythonthehardway.org) and plan on using Emacs to further help expand my limited skills after I finish the book. Where is the best source to learn Emacs from the beginning?	t5_2qhwu	True
1321922076.0	mkth1	Day 1: Vim to Emacs with helpful Vim to Emacs command comparison	bjh13	23	6	4		t5_2qhwu	False
1314001431.0	jqeyv	Port of Tomorrow theme for Emacs? :)	monotux	25	5	17		t5_2qhwu	False
1306886592.0	hon1m	Is nXhtml still the best for HTML?	27182818284	22	4	10	"Hi,

Years ago when working with HTML and Emacs, nXhtml seemed to be *the* mode to use and the one everyone recommended. However, like I said, that was years ago and I'm wondering what has gone in the meantime when I haven't been messing around with HTML/JavaScript/etc in Emacs.

Do you use Emacs for your web development? Indispensable tools? nXhtml still the way to go? Pro-tips or other sage advice?



"	t5_2qhwu	True
1283345252.0	d863d	Awesome Emacs Code Folding: Hide Show	bobbysmith007	20	2	16		t5_2qhwu	False
1278356989.0	cm7z1	Send email through Gmail with GNU Emacs	edavis	21	1	17		t5_2qhwu	False
1276818023.0	cg7e5	"automatic pairing of brackets and quotes
"	draxil	19	1	6		t5_2qhwu	False
1274706908.0	c7j59	TIL about auto-revert-mode and auto-revert-tail-mode	chrispoole	22	3	2	"Often I'm hacking some code together that outputs to a file, and want to check this, then run the code again with a small change, then check the output, etc.

I've always used the long-winded M-x revert-buffer.

auto-revert-mode is a minor mode, and works exactly as you'd think. I love learning new Emacs stuff! (It's in Emacs 22.x.)"	t5_2qhwu	True
1267346137.0	b7fay	"Emacs 23.1.93 (fourth pretest for 23.2, ""very last call for non-regression fixes"")"		24	4	5		t5_2qhwu	False
1257925796.0	a35tr	Got Emacs?: MobileOrg 1.0 for iPhone/iPod Touch now available	gst	25	8	3		t5_2qhwu	False
1244678865.0	8ricf	Emacs Lisp revived	ferk	23	5	16		t5_2qhwu	False
1240253025.0	8dz8o	lively.el -- eval previous form and update the buffer periodically.	self	21	2	4		t5_2qhwu	False
1228106657.0	7gkmv	Ask emacs reddit: What's the latest (awesome) command you discovered?	leonardoe	25	6	25		t5_2qhwu	True
1376370617.0	1k9dkr	Code by voice	tailbalance	21	4	4		t5_2qhwu	False
1374660661.0	1iy4mj	Excellent Stretches for Managing and Avoiding RSI/CTS	MoreHugs	22	4	13	"Hyperalr in #emacs (on freenode) [linked a short video](https://www.youtube.com/watch?v=hUyMNyrOHJQ) when we were discussing RSI in the channel (ffualo is experiencing the onset of the injury and was looking for suggestions is why this came up).

The stretches are not specific to emacs per se, however the injury is one many programmers encounter, and it is a potentially career ending injury. 

I had a pretty severe case of RSI at one point that took months to recuperate from, so I can verify that it is an extremely obnoxious and painful injury to have that you definitely do not want to have.

I made a lot of changes to my habits and do not have it anymore thankfully, but I never found any stretches or exercises that helped much in that regard while researching solutions for the injury.

I did the stretches mentioned in the video and my hands and wrists felt better than they had in a long time afterwards; ffualo felt better after trying out the suggestions as well.

I am definitely going to keep doing these stretches when I take my periodic breaks from work (breaks are a good and recommended habit both for cognition and avoiding hand injuries, so two birds are killed with one stone this way) and before starting the day.

There also was a recent post on [HN about keyboards](https://news.ycombinator.com/item?id=6091239) and a thread from [this subreddit](http://www.reddit.com/r/emacs/comments/1edfmr/video_review_of_the_truly_ergonomic_keyboard/) that has better and more comprehensive information IMO, and there is an entire forum dedicated to it on [Geekhack](http://geekhack.org/index.php?board=125.0).

As an aside, there are also mice that are designed to avoid ulnar deviation entirely when using the mouse, however I have not actually tried those out myself; amazon reviews claim they are helpful and useful though and the theory behind their design makes sense.

If you have some first hand experience with those let me know as I am interested in the topic as my current mouse is pretty uncomfortable to use for very long due to the location of the middle mouse button and its small size.

The main reason I use it though is that it has a bunch of buttons on the side that are thumb accessible, which is nice in the context of video games.

For some reason the latency while using macros created with its software to interact with other programs is unreasonably slow and does not consistently work (on OS X anyways).

The design was pretty nice while testing the concept out for programming but unusable for anything other than experiment due to the latency and general hit or miss experience.

Anyways, my hands feel really great after doing the stretches, better than they have in over a decade or more and I wanted to disseminate that resource to the rest of you so that you can get the same benefits."	t5_2qhwu	True
1369586337.0	1f35dw	flx - Better IDO Flexible Matching	milkypostman	21	3	22		t5_2qhwu	False
1368544909.0	1ebgrp	Multics Emacs History/Design/Implementation -- a refresher, thanks to https://twitter.com/lukego/status/334310253988548608	agumonkey	20	2	4		t5_2qhwu	False
1366099527.0	1cg7ue	skeleton-complete: text matching based completion pushed to extremes	baohaojun	22	4	10		t5_2qhwu	False
1365824136.0	1c923n	How does the design of Emacs compare to the Light Table design? It is also built on lisp (Clojurescript) and is supposed to be infinitely extensible.	12358leet	23	5	13	I was reading this [explanation of the design of Light Table](http://www.chris-granger.com/2013/01/24/the-ide-as-data/) and it seem to ring some bells as how I think emacs works, although I really don't know. Can somebody that has knowledge about how Emacs works compare the two?	t5_2qhwu	True
1364322543.0	1b21a3	How to prevent dired from spawning new buffers for each subdirectory browsed?	mcandre	23	4	12	I like dired, but I don't like how it spawns new buffers for each subdirectory browsed. This is especially noticeable with tabbar enabled.	t5_2qhwu	True
1364282906.0	1b13hz	Emacs Chat: Carsten Dominik (author of org-mode)	suhrob	22	5	1		t5_2qhwu	False
1363686981.0	1al2ab	jss - javascript console, debugger, and network traffic inspector for emacs using the browser's  remote debugging protocol.	segv00	22	5	12		t5_2qhwu	False
1361659134.0	193o0e	Make Emacs Fit your Workflow	rawsyntax	22	6	0		t5_2qhwu	False
1361113494.0	18oyhc	Long time Vim user wanting to try and actually become proficient in Emacs	ndegruchy	20	3	20	"Like the title says, I've been a long time Vim user and have become quite proficient with it, though the recent rumblings about Evil having reached 1.0 and some other cool projects like Jedi have caught my attention. Enough so that I powered *all* the way through the tutorial.

I find, now, that I'm kind of stuck. I've installed a couple of plugins via M-x package-list and through Debian's emacs-goodies-el package, but as a serious Emacs newbie, I'm still trying to figure the basics out.

So, do you all have some good starting points for someone either coming from Vim or that explain some 'after-the-tutorial' things that might shed some light on the various features?

To give you an idea of what I'm asking:

  * Config file management (.emacs vs .emacs.d)
  * Themes
  * Major vs minor modes
  * Buffer management

There's probably more, but it's all I can think of right now.

To round things out, I'll clarify that I'm a web developer (HTML, PHP, CSS, JS, CoffeeScript, Stylus, Jade and HAML/SASS as well as Markdown) and I'm currently running Emacs on Linux, but my work machine is Mac OS 10.7 -- if that matters at all.

Thanks!"	t5_2qhwu	True
1357990807.0	16fmcm	I made this theme a while back, it's stuck with me for over 6 months, which is something of a record.	instant_sunshine	24	6	25		t5_2qhwu	False
1354300621.0	142a9w	Dizzee, a subprocess launcher for Emacs. 	jonnay23	25	7	4		t5_2qhwu	False
1352077909.0	12n3qq	Programming environment in Linux for C++ ?	emacsdroid	25	7	26	"I somehow feel we have lost the edge in a programming environment for C++ with a minimalistic touch. How is everyone coping with it ?
emacs or vi (huh ?) with cscope was minimal blazing fast and accurate 
for C and assembly. Its support is not complete in C++ and I'm sure no 
will argue about it.
I've tried emacs with CEDET while it works in about 60% of the cases, 
that's it. Simple scenarios  like listing multiple definitions, and symbol 
search will break easily. Kind of a deal breaker.
Other tools like doxygen are there for browsing, while some good 
tools like ebrowse are there but not integrated well into a proper 
complete development environment. 
Can the C++ developers here comment on this state, what is your setup 
environment. I can think of one answer: GUI.

"	t5_2qhwu	True
1351192763.0	122xkk	Firemacs: Mozilla add-on for Emacs editing/viewing keybindings	ShapeFantasyScads	19	1	8		t5_2qhwu	False
1349880317.0	1194u2	web-mode.el - HTML template editing (PHP/JSP/ASP) for Emacs	fxbois	20	3	1		t5_2qhwu	False
1346007838.0	yv3j9	Emacs Live	namin	24	4	8		t5_2qhwu	False
1344010846.0	xmj2t	A look at Emacs Lisp reader	aaptel	19	2	1		t5_2qhwu	False
1339594711.0	uzs8y	editing html5 with emacs?	revbobdobbs	19	0	6	"This is something I've been wrestling with for years, and I've never solved the problem. I'm hoping that a community member here might be able to help me out.

I code html a lot, and mostly I code in html5.

Emacs extensions for web editing all seem to be fitted towards xhtml.

I keep coming across this project, but I've never gotten it to work:

https://github.com/hober/html5-el

Every time I attempt to get it working, I encounter the same thing: At some point early when editing, I get an error :

Missing xmlns=""http://www.w3.org/1999/xhtml""

This is pretty frustrating. 

What am I doing wrong? How can I actually get this project working once I've installed it? Is there a better way?
"	t5_2qhwu	True
1338860301.0	ulav5	New demo for Emacsy shows extensible events and temporal macros—also pet robot is controlled with phone	shizzy0	24	6	0		t5_2qhwu	False
1337625878.0	txvp3	Ask /r/emacs: please support .emacs filename recognition at Github	brooksbp	21	3	8		t5_2qhwu	False
1333009749.0	rizks	Mediawiki.el - WikEmacs		27	10	6		t5_2qhwu	False
1320102925.0	lvrl3	Host Emacs Lisp applications on Heroku (x-posted from /r/programming)	DarthToaster	20	2	2		t5_2qhwu	False
1305607106.0	hd4np	emacs-fu: toward balanced and colorful delimiters	gst	22	4	5		t5_2qhwu	False
1300529641.0	g6zu8	Work with Git from Emacs	gst	23	3	7		t5_2qhwu	False
1295181507.0	f38y0	Emacs 24 and the package manager 	gst	21	4	3		t5_2qhwu	False
1284305973.0	dctzc	Emacs Org mode and publishing a weekly review 	gst	21	3	0		t5_2qhwu	False
1277242158.0	chwag	Using a local emacs+tramp as your EDITOR on remote servers with SSH and emacsclient.	UnwashedMeme	20	3	2		t5_2qhwu	False
1271613168.0	bspfa	Creating custom modes the easy way with generic-mode	ndanger	18	0	0		t5_2qhwu	False
1270662571.0	bnr0l	Apropos Emacs icon	cag_ii	23	4	5		t5_2qhwu	False
1269002504.0	bfgft	jEdit user trying to give emacs a chance, please help.	webbitor	25	9	36	"Probably unlike most emacs users, I'm usually on Windows. I'm a Web developer who has used every bad editor from Homesite to Dreamweaver. My personal preference over the past 10 years has gone from notepad to jEdit. What I look for in an editor is the ability to customize it in many ways without a lot of effort, in order to make it smoothly do what I need it to.

jEdit is the best fit I've found so far. On Windows, Linux or Mac, I can install it, open the plug-in manager and add a bunch of plug-ins that provide just the features I need and use. I can customize the appearance and interface in almost every way very easily. The only real drawback is performance. I commonly want to open and globally modify a hundred files, and it becomes painful in jEdit. Having read that it was loosely based on emacs, I thought I'd try emacs.

My first attempt at making it into an editor I can use was to add a tab bar showing my open files and letting me move between them. There didn't seem to be an obvious menu option, so I googled and found [this blog post](http://amitp.blogspot.com/2007/04/emacs-buffer-tabs.html) that looked promising. An hour later I have failed to figure out how to install it. What the heck? I understand that emacs is extended using lisp files, but is there really no central repository or auto-installation mechanism for them? Please tell me there is! So I thought I'd just look at the basic settings... turn off the split-pane feature. No joy :(  Is this ""customize"" thing really all there is for changing settings aside from learning lisp?! I've waded in circles through all these button-documents and accomplished nothing.

Try not to downvote me for the rant and pay more attention to the plea for help. ;)"	t5_2qhwu	True
1266631654.0	b480u	Dealing with many buffers: ibuffer	mr_dbr	20	2	0		t5_2qhwu	False
1248680160.0	94v1j	YASnippet Updated – Supports Nested Placeholders And More	gst	23	5	0		t5_2qhwu	False
1241297015.0	8hcr6	Emacs 23.0.93 pretest released - fixes to regressions only from now on		23	4	1		t5_2qhwu	False
1237898096.0	871zl	Welcome to ELPA - Emacs Lisp Package Archive	ozzilee	23	3	2		t5_2qhwu	False
1233782422.0	7uwwj	Interactive HTML editing using emacs and mozrepl	geocar	26	9	7		t5_2qhwu	False
1229822735.0	7ktxk	List of hundreds of Emacs packages you never knew you needed	leonardoe	21	5	1		t5_2qhwu	False
1373039151.0	1hp1n5	Not native sane fullscreen for Emacs 24.3 on OSX	gnufied	21	5	8		t5_2qhwu	False
1367630035.0	1dnl0j	Introducing Butler.el	idiot_with_a_gun	20	5	1		t5_2qhwu	False
1364562253.0	1b8mjw	Multiple cursors for Emacs (similar to Sublime text)	MarcelChafouin	24	5	5		t5_2qhwu	False
1364305180.0	1b1gga	[Crosspost from /r/vim] Is ELisp really that much better than VimL?	happy-dude	19	2	10		t5_2qhwu	False
1364148741.0	1ax9jg	company-mode 0.6.2 released	hvis	23	6	4		t5_2qhwu	False
1363712332.0	1alokv	"Zmacs Manual for the TI Lisp Machine implementation [PDF]
"	eclig	20	2	3		t5_2qhwu	False
1361500908.0	18zwb8	Anaphoric macros in elisp	zoidberghoneydew	17	0	6		t5_2qhwu	False
1358172257.0	16ju6p	What package do people use to read IMap mail now?	treerex	22	3	22	"Many years ago my preferred mail reader was VM. Then I moved to another job that wouldn't let me do that. Now fast forward a few years and I'm at a different job that uses Exchange and I despise it (especially since I'm running on Mac OS X). I've been using Apple Mail for a while but  I find it annoying, so I'm looking to go back to Emacs.

My question for the collective wisdom of r/emacs is this: what mail reader do people prefer now in Emacs 24? Gnus? VM? Something else?

EDIT: Thank you everyone for your suggestions. I have offlineimap running on my machine now, and am looking at the reader options. I'm still leaning towards VM because that's what I've used in the past, but mu4e looks compelling. I'll probably give both a go.
"	t5_2qhwu	True
1352989201.0	138n4u	Versioned editing in emacs?	yaxu	24	6	16	Hi all, I'm looking for a way to record all the edits to a file.  One way would be to commit each edit to git or similar for every edit.  This would be great, but what I'd really like to do is record every keypress, preferably with high resolution timestamps, so I can play it back and analyse the edits later.  I'm not an elisp hacker though - any tips on how I can achieve either of these things?	t5_2qhwu	True
1349192940.0	10tkbm	More sublime goodness :-)	b00thead	21	4	3		t5_2qhwu	False
1348510490.0	10ejat	Emacs as IDE	doubleyouteef	24	8	18	"Hi all! I'm looking for a good Emacs/cedet/ede/ecb/etc. setup or a how to of sorts. I'm not all that proficient in lisp, so it would take me sometime to get an environment going, so I'm looking for something decent I can set up quickly (so that I can concentrate on work while dicking around with the IDE setup on my off time).

""Gentle introduction to cedet"" is what I'm looking at right now, but some things aren't working as described.

I primarily use OS X as my desktop platform, but I develop under linux, solaris, *bsd. Mainly it's just GNU emacs but on occasion I'll use Aquamacs when I'm local.

Basically, just looking for a doc describing a good way to set up emacs as a decent IDE."	t5_2qhwu	True
1347564904.0	zu5za	Project-persist - a simple, flexible project management package for Emacs	rdgray	20	2	0		t5_2qhwu	False
1336462550.0	tcmr7	Xah Lee's Emacs Tutorial and resources	jackhammer2022	37	19	6		t5_2qhwu	False
1333908466.0	rzh62	"""A-C-H-M-S-s-u is undefined"": .Xmodmap to make Alt, Control, Hyper, Meta, Shift, Super available to Emacs.
"	cog2011	19	4	3		t5_2qhwu	False
1330091825.0	q41hp	"Emacs Prelude : aims at easing the initial Emacs setup 
process and providing a much more powerful and 
productive experience. (only for emacs24)"	madpedro	25	9	19		t5_2qhwu	False
1328378205.0	pat8t	C-x r w &lt;RET&gt; SYMBOL &lt;RET&gt; and C-x r j &lt;RET&gt; SYMBOL &lt;RET&gt;		21	4	8	"Just thought I'd share these sense they've saved me so much time. C-x r w &lt;RET&gt; SYMBOL &lt;RET&gt; saves the current window configuration to register SYMBOL. You can use any alpha numeric key to refer to SYMBOL. You can then restore it any time in the session by typing C-x r j &lt;RET&gt; SYMBOL &lt;RET&gt;

For example, when I'm editing some code with an interpreter running, and I need to look up some documentation in w3m. I C-x r w, C-x 1, M-x w3m, browse, and then go back to where I was with C-x r j. Pretty helpful!"	t5_2qhwu	True
1325682759.0	o2gje	lexical scoping and dynamic scoping in Emacs Lisp	jisang-yoo	21	3	3		t5_2qhwu	False
1324691421.0	non0t	Making Emacs an IDE	codeforkjeff	20	5	4		t5_2qhwu	False
1318164345.0	l5yt0	Introducting latex-pretty-symbols.el	mortiferus	19	1	15	"Me and a friend hacked together the following elisp code. It basically contains a list of many latex commands, and their unicode counterparts, and makes emacs display the unicode symbol instead of the latex code.
So \vDash, \Sigma, \leq etc displays nicely.
It also converts some sub/super-scripts into equivalent unicode symbols, so e.g $a_1$ becomes $a₁$. It is highly reminiscent, and based on, some of the pretty-lambda code that is floating around. 

I put it out here as as someone else might want it. Also, I don't have much time fixing it up, so it comes as it is. Forks or contributions are highly welcome. There are a couple of things that makes it kind of crude:

- There is no customization, edit the code if you want to add more symbols.
- It can only change into single-char unicodes. 
- It cold be packaged as a elpa/marmelade package, but it is not.

It is located at:
https://bitbucket.org/mortiferus/latex-pretty-symbols.el/src

Screenshot:
http://imageshack.us/photo/my-images/3/exampleyp.png/"	t5_2qhwu	True
1317041853.0	krrx2	Emacs 24.0.90 pretest released	zmyrgel	19	3	0		t5_2qhwu	False
1313648707.0	jmhjk	Emacs feature voting system	kcin	25	8	7		t5_2qhwu	False
1312921882.0	jduo9	How do I undo splitting a window by accident?	BaphodZeeblebrox	22	5	16	"Frequently I'll be editing, and have my windows split just the way I want. Then, I'll mistakenly hit my keybinding for one of the splits, and poof, it's borked. The only way I know of to get back to what I want is to go back to one window and start over, which requires me to re-split and re-select the correct buffers I want to edit in them.

Is there any way when this happens, to magically undo the last split, as if it never happened? Here is an [example](http://i.imgur.com/pPBQf.png) , the split in the bottom right corner is the one I obviously didn't want."	t5_2qhwu	True
1311309528.0	iwj47	A Visual Guide to Narrowing in Emacs	gst	21	5	13		t5_2qhwu	False
1305249022.0	ha7l9	HTML matching tag highlighting?	fofgrel	23	5	9	I've come from Emacs from Notepad++ and I really like it so far.  However, there is one feature that I deeply miss; matching tag highlighting.  In other words: if the cursor is inside of a '&lt;div ....&gt;' tag, it will highlight it and the corresponding '&lt;/div&gt;' tag.  I've searched through Google and the Emacs Wiki and haven't found anything that provides this functionality.  	t5_2qhwu	True
1302675481.0	gov5w	re-builder: the Interactive regexp builder | Mastering Emacs	gst	21	6	0		t5_2qhwu	False
1297408271.0	fjbcf	emacs-fu: keeping your secrets secret	gst	23	5	2		t5_2qhwu	False
1297188667.0	fhn3z	Mastering Key Bindings in Emacs | Mastering Emacs	mickeyp	20	2	0		t5_2qhwu	False
1296302115.0	fbai8	What's your favourite *under_publicized* editing feature of Emacs?	jaybee	20	3	11		t5_2qhwu	False
1295941085.0	f8l5y	Emacs regular expressions… 	gst	21	6	8		t5_2qhwu	False
1295764087.0	f7eta	Structure of emacs text	gst	22	4	0		t5_2qhwu	False
1295100940.0	f2t1n	found an interesting tool for drawing in emacs 	gst	24	9	3		t5_2qhwu	False
1288544685.0	dz4bo	Emacs, keypresses, and why keyboard combinations aren’t that scary 	gst	24	6	0		t5_2qhwu	False
1288260182.0	dxmvn	elnode - emacs lisp nodejs clone	mac	21	3	0		t5_2qhwu	False
1287880062.0	dvhnp	emacs-fu: auto-complete-mode	gst	20	5	1		t5_2qhwu	False
1287131772.0	drjrl	Displaying Inline Images in Emacs org-mode	openist	21	3	0		t5_2qhwu	False
1286715315.0	dpan3	Xah Lee At Blogger: emacs: what's eshell? eshell vs shell	fangzhzh	22	6	7		t5_2qhwu	False
1286630861.0	doyy2	How XML should have looked - an s-expression to XML DSL in elisp	yipgo	20	3	3		t5_2qhwu	False
1285523221.0	dj4z2	New note-taking workflow with Emacs Org-mode 	gst	24	5	0		t5_2qhwu	False
1283989593.0	dbcir	From the author of Google-maps-mode - Another Emacs extention : Google Weather for Emacs	fangzhzh	19	2	5		t5_2qhwu	False
1281482507.0	czpeh	How are you using Org-mode?	woof404	21	3	22	"I know you can use it for all kinds of things, but what are you using it for and why?

I am just starting out learning Org-mode and have thus far used it to set up tables for my employees with work days and hours (maybe it would have been easier just to say ""work schedule"", but that's way back there). I used MoinMoinWiki before because of the markup but the automation of Org-mode is *amazing*.

I am also starting out learning a programming language (Erlang) and will try to use Org-mode gathering thoughts about what my programs are supposed to be all about, and what methods and functions I can use to achieve my goals.

There was a blog posts by this guy a while back (I think it was something on mostlymath.net) about ""life bookmarking"". Just noting down at the end of the day what you have learnt. I think of doing something like this as well.

I have yet to learn about timestamp and the calender and TODO lists yet (will take that tomorrow), but I am in the progress of setting up some kind of template which I can use to register incoming products that must be sent to repaircenters from customers. Just some basic stuff with outline."	t5_2qhwu	True
1280554209.0	cvr4j	emacs-fu: some handy key bindings	gst	22	5	0		t5_2qhwu	False
1271926719.0	buiv8	Clocking work time - The Org Manual	ckeen	18	0	4		t5_2qhwu	False
1270485551.0	bmpxv	Emacs &amp; the birth of the GPL	tpk1024	24	6	1		t5_2qhwu	False
1269846642.0	bjkqv	Emacs tip of the day: Start using ibuffer-git right away	jeekl	21	5	4		t5_2qhwu	False
1268111814.0	baz93	emacs-fu: cleaning up buffers automatically	gst	17	0	1		t5_2qhwu	False
1253651758.0	9n2td	A collaborative editing environment for Emacs compatible with Gobby	hober	23	4	1		t5_2qhwu	False
1249155973.0	96oja	M-x spook: Keep the NSA on its toes (or maybe just end up in prison!)		19	3	3		t5_2qhwu	False
1242098110.0	8jpt6	Some cools things I've noticed in Emacs 23	gst	25	8	6		t5_2qhwu	False
1239664775.0	8c8hm	predictive expansion for emacs	Aseraphim	17	0	6		t5_2qhwu	False
1234643532.0	7xfll	 A Gentle introduction to Cedet	gst	24	5	0		t5_2qhwu	False
1231195516.0	7nlsb	emacs-fu: navigating through source code using tags	gst	19	1	1		t5_2qhwu	False
1375649185.0	1jp5pq	o-blog: A stand-alone blog and publication tool for Org-mode.	atheistexile1	17	0	3		t5_2qhwu	False
1375172907.0	1jc5p1	One On One Emacs - Anyone using this, especially with a tiling WM?	pewpewpewter	21	4	18		t5_2qhwu	False
1374842383.0	1j3dfr	Org8 exporters for TiddlyWiki and Foswiki/Twiki	dfeich	17	1	1		t5_2qhwu	False
1372528536.0	1hbj9y	A look at Emacs Lisp reader	jisang-yoo	19	3	2		t5_2qhwu	False
1371699826.0	1gpeji	"I just read that ""zippy the pinhead"" is no longer in emacs due to copyright concerns. Is there an elisp package I can use to add it back?"	bigfig	19	3	8	Despite having used emacs for years, I am not very elisp savvy.	t5_2qhwu	True
1363519543.0	1agkd6	Function to cycle your current buffers	joannavarrete	18	3	27	"Hi, I've done a function to cycle to your current buffers, the ones in your windows.

https://gist.github.com/joannavarrete/5181141"	t5_2qhwu	True
1362344490.0	19lfk3	An emacs web browser?	smithzv	19	5	9	"I am looking for a simple text mode Emacs web browser.  It doesn't have to be fancy, but I would very much like it if it would return pages as a regular text buffer so that I can kill from them.  The main goal here is for reading text from manuals without leaving emacs and copying example code or text from the manual without much effort.

I know of w3, but it seems to be bitrotted to the point that it will not build.  I know of w3m and that it can be embedded in emacs, but that makes it difficult to grab code snippets and copy text.  The same goes for running a text mode browser (w3m, lynx, or links) from within something like an ansi-term environment.

Emacs wiki tells me of a project called ewb (emacs web browser) which failed to actually render the page (it just displayed the html response) and htmlr (htmlrender) that might be useful, but it isn't even really a browser.  In any event, both of these appear to be less of projects and more of a ""some code that someone posted on Emacs wiki"" thing.

Before I look too hard, is there anybody with a working solution out there?

UPDATE: As noted below, Emacs-w3m, a.k.a. simply w3m in the package manager, is indeed the way to go."	t5_2qhwu	True
1362041766.0	19dz4l	Pallet -- a package manager for Emacs, built on Carton	rdgray	21	5	25		t5_2qhwu	False
1361127734.0	18pb90	How do you save your frame configuration from session to session?	metaperl	19	2	11	On my mac, I have a fairly elaborate way of laying out my frames. I would like to have them saved from session to session instead of having to recreate it each time. workgroups doesnt cover this and neither does desktop.el	t5_2qhwu	True
1358654829.0	16wvvm	Ask /r/emacs: What are your favorite micro Emacs editors?	gnuvince	19	2	32	I like mg, but the lack of UTF8 support means I'm not comfortable using it when Emacs is not available.  What other options exist?  Which ones do you like?	t5_2qhwu	True
1355477382.0	14u47p	org-jira mode: using jira with org-mode	baohaojun	19	4	5		t5_2qhwu	False
1354606812.0	1493oa	EmacsMovies Season 2: Dired	suhrob	23	5	4		t5_2qhwu	False
1353720649.0	13ozp9	"Modern smart parens/auto-insert/wrapping package 
for Emacs"	Fuco1337	22	5	21		t5_2qhwu	False
1351192597.0	122xdp	New frontiers in text editing	gandalfgeek78	22	6	6		t5_2qhwu	False
1350948534.0	11wrq0	MobileOrg for Android setup and workflow with Emacs OrgMode	gabrielsaldana	19	5	9		t5_2qhwu	False
1349099653.0	10rdl2	(global-auto-revert-mode 1)	cbr	20	4	10		t5_2qhwu	False
1346306062.0	z2c91	/r/emacs, how do you find files spread out across projects/computers? 	alabrie	19	2	41	"This is one of the things that I've been struggling with in my Emacs use. I have a hodge-podge of different methods glued together:

* ido-mode - indispensable. 
* try not to kill buffers, so I can use `C-x b` with ido assistance
* bookmarks - just started using these, pretty nifty
* find-name-dired - searching for a pattern in a filename (slow if you pick a big folder)
* find-grep - when I want to grep for text in a bunch of files (slow if you pick a lot of files)
* opening a dired and inserting frequently used subdirectories, then just `C-s`'ing the names 

But, it feels pretty loose, with lots of edge cases where I end up tab completing through ido-mode again and again. I'm curious if there's a better way to find files that I'm just not aware of. Some problems I come across include

* finding files I recently had open
* files I've opened before, but not recently, maybe a few days ago
* opening files with the same filename in different directories
* I remember the filename, but not the directory it's in

I've given helm-mode a cursory try, but convinced myself I was getting similar functionality out of ido-mode. I haven't tried anything.el, yet. Are there any amazing file-finding tools in Emacs that I don't know about ?"	t5_2qhwu	True
1344124407.0	xoxaa	Compilation in Emacs - Usage and custom error parser.	aaptel	21	5	3		t5_2qhwu	False
1343856509.0	xj0cy	Adding Notes to Emails in Gnus (in Summary View)	rberenguel	18	3	1		t5_2qhwu	False
1341855253.0	wa2q1	Grammar checker?	petebikes	19	3	25	Using wordpress a bit, I've come to like the after the deadline plugin a lot: http://open.afterthedeadline.com/ .  Anyone know of something similar? or is there already an emacs tool out there for this kind of thing?	t5_2qhwu	True
1338964331.0	unknq	emacs-fu: euro 2012 games in your org-mode agenda	favadi	19	3	1		t5_2qhwu	False
1338313339.0	uamgp	"Compiling and running scripts in Emacs | Mastering 
Emacs"	mickeyp	22	5	0		t5_2qhwu	False
1323918680.0	nd9wu	This is kinda sad but I've set C-a and C-e to have conditional previous/next line behaviour	jmmcd	17	1	24	"I've never really been happy with C-p and C-n. I use both left and right control keys, so when I want to go to beginning of next line, I need left-ctrl-n and then right-ctrl-a. That makes me feel a bit too much like I'm playing the piano. And of course the arrow keys are right out. So I've put some code into my .emacs to make C-a act like C-p if it's at beginning of line, and C-e act like C-n if it's at end of line. So pressing C-e once goes to end of line, once more goes to next line, and leaning on it moves down fast. I know it won't be to everyone's taste but it's making me happy.


    (defun move-end-of-line-or-next-line ()
      (interactive)
      (if (eolp)
          (next-line)
          (move-end-of-line nil)))
    (global-set-key ""\C-e"" 'move-end-of-line-or-next-line)
    
    (defun move-start-of-line-or-prev-line ()
      (interactive)
      (if (bolp)
          (previous-line)
          (move-beginning-of-line nil)))
    (global-set-key ""\C-a"" 'move-start-of-line-or-prev-line)

Does anyone know any other commands which do something useful and different if you use them more than once in a row? It's a nice idea because it doesn't require a new keybinding.
"	t5_2qhwu	True
1322992014.0	mzmqm	Emacs on Mac OS X: how to NOT open files in separate windows?	zakora	23	7	8	"I installed emacs 23.3 *via* homebrew.

Sometimes I drag a file on the Emacs icon in the dock in order to open it. But these file open in a separate window.

How can I change emacs behavior to make it open file in the same window?

Thanks!"	t5_2qhwu	True
1322918994.0	myoww	Solarized for Emacs		25	7	10		t5_2qhwu	False
1322039405.0	mmk7z	I wish that emacs used the same keybindings for the same operation in different modes	wadcann	20	4	13	"Emacs is pretty good about using the same keybindings for the same operations in different modes.  In fact, I'd consider it to be a significant selling point of emacs.  However, emacs isn't perfect.  Some examples:

* Going backwards after following a hyperlink in a major mode.  In `M-x info`, this is ""l"".  In Help-mode (what you see after bringing up help with `C-h a` or similar), this is `C-c C-b`.  `man` and `woman` have no binding.  `pop-tag-mark`, `M-*`, which takes a user back to where they were after following a tag to its definition isn't exactly the same thing, but I suspect that for many users, when browsing code, this serves the same role.

* vc-mode (emacs's front end to Subversion, git, and other VCSes) has some odd bindings.  `C-x v g` runs `vc-annotate`, to get the annotated history of a file.  That would seem to mean that ""g"" would be a good binding for annotate.  However, if one hits `C-x v l` to bring up a log of vc history, hitting ""g"" instead reverts the buffer — instead, it is ""a"" that does annotation.

* If emacs is executed directly as `$EDITOR` to edit a file for some program, then the proper way to ""finish editing"" the file is to save the file and exit emacs with `C-x C-s C-x C-c`.  If I happen to be using emacs as a server, and opening a client with [`emacsclient`](http://www.emacswiki.org/emacs/EmacsClient), the proper way to ""finish editing"" the file is `C-x #`.  If whatever is being edited is a a sort of ""sub-shell"" (e.g. someone is using vc-next-action and writing a commit message), it's usually `C-c C-c`.

It would be nice if the same keybinding worked in each of the above cases.  Anyone else have their own keybinding consistency pet peeves?"	t5_2qhwu	True
1320514845.0	m1js8	emacs -nw: what are the benefits on a desktop?		18	1	36		t5_2qhwu	True
1318464371.0	la74k	TIL: Doc-View Mode	clemenstimpler	22	5	12	I've been using emacs for years, though I'm not exactly a power user. Today I opened accidentally a PDF via emacs - and lo and behold, it was in my buffer. Next step: Find out how to use that mode for dvi-preview, while using latex. In a few years I hope to have mastered enough of emacs in order to use it as my primary operating system... ;)	t5_2qhwu	True
1311839522.0	j1zt6	"Do you still navigate directory hierarchies when opening 
files?"	kcin	21	5	29	"The other day I saw someone using Emacs and when he wanted to a get to a file then he used a the traditional find-file interface with completion and stuff. I found it strange because I haven't used this method for years. When I want to open a file which name I know then I simply type part of the file name and then completions are shown for this name from all of the file system regardless of in which directory the files are located (the completions are listed so the most recently opened is first, etc.). So if I know the name of the file then I doesn't care about in which directory it lives, I can simply open it as quickly as possible.

If you still use the traditional find-file interface and are looking for something more efficient then you should chek out [the alternatives](http://www.emacswiki.org/emacs/LocateFilesAnywhere).
"	t5_2qhwu	True
1303575568.0	gvs8n	Editing Sound Files in Emacs	gst	19	3	0		t5_2qhwu	False
1299097370.0	fw0vn	Using the commandline network utilities from Emacs | Mastering Emacs	gst	20	3	0		t5_2qhwu	False
1296329804.0	fbg4l	"Ask /r/emacs - help me get started with some ""real"" emacs"	imalolz	20	5	42	"I'm very new to emacs, and just finished the tutorial. I'm a regular vim user, but figured it wouldn't hurt checking out emacs after hearing good things about it. I got the basics on navigating through text, editing and working with buffers and all that. 

I'd appreciate some pointers as to what I should do next. I know there are a lot of tutorials out there, but I'm looking for more of an intro as to how I could create my own customized environment: I work primarily with code of all sorts, so I'd like to get some productivity tips, like how to install new plugins (they're called modes?), add language support, syntax highlight, and everything else a complete newb to this editor (but not to programming) should know.. Thanks!

EDIT: wow, thanks for all the tips - this is exactly the input I was looking for!"	t5_2qhwu	True
1294757780.0	f08hz	Ansi for Emacs	rejeep	17	2	0		t5_2qhwu	False
1286729572.0	dpcul	Emacs Tip #37: fic-mode.el	gst	21	4	0		t5_2qhwu	False
1279603234.0	crht7	Got Emacs?: New Org Version 7.01 released	gst	24	6	2		t5_2qhwu	False
1277963360.0	cktru	emacs-fu: console apps in emacs with multi-term	gst	17	1	18		t5_2qhwu	False
1272402492.0	bwxgm	emacs-fu: navigating the kill-ring	ndanger	19	3	1		t5_2qhwu	False
1272304558.0	bwc13	Comment Stuff in Emacs	rejeep	17	1	7		t5_2qhwu	False
1261901874.0	aiuw5	Novice Suggestions?	DrHenryPym	18	2	17	"So I'm making a switch from Vim to Emacs just for the hell of it. I just completed the tutorial, and I'm still getting my feet wet. Are there any commands or tricks that stand out or get the most play?

For example, when learning Vim I found ""ct"" (change-to) and ""."" (repeat) commands very useful. 

Also, I'll accept more tutorials if you know of any. :-)"	t5_2qhwu	True
1258106219.0	a3yni	emacs-fu: copying lines without selecting them	gst	18	3	1		t5_2qhwu	False
1253053585.0	9kx7q	Do you often use undo to find the place of last change? Here's a better way.	fionbio	18	2	6		t5_2qhwu	False
1249125396.0	96lcl	My Emacs Defaults 	gst	18	2	3		t5_2qhwu	False
1237811868.0	86rs1	Using org-mode for project plannning and estimation tracking.	aardvark179	20	4	1		t5_2qhwu	False
1237290496.0	85ahf	Smex - A smart M-x enhancement. Like Quicksilver for your commands.	eibat	20	3	1		t5_2qhwu	False
1236371070.0	82or0	If you use XP and love emacs, you *need* XKeymacs.  Makes all text editing emacs-esque	sping	21	5	1		t5_2qhwu	False
1235990648.0	81e07	Make emacs automatically display a C function's signature	Leonidas_from_XIV	20	3	4		t5_2qhwu	False
1232106213.0	7q6hq	Emacs tip: bulk operations on buffers 	gst	21	5	0		t5_2qhwu	False
1376020272.0	1k073n	live-awk-mode - Build awk commands interactively with live result sets	danlamanna	23	8	6		t5_2qhwu	False
1371567128.0	1gl53e	Is Learning GNU Emacs 2e any good?	throwaway929294	16	1	12	"Hi,
I've found an historic copy of Learning GNU Emacs (2nd edition from year 1996, using Emacs 19.33 I guess) lying around my workplace and I'm interested in learning Emacs. 

Can I use it for learning Emacs basics as a person with zero Emacs knowledge, or should I go for a better resource? (The reason I'm interested in this book is because I'm a cheapo who can't afford books from US and I really have difficulties reading/learning anything ~~from online resources~~ onscreen)

edit: thanks for all your interest and advices. I'm really happy to see there is a very helpful community right here.

thx."	t5_2qhwu	True
1371237685.0	1gcuwr	Command line parsing in Emacs	rejeep	21	5	4		t5_2qhwu	False
1364640577.0	1bap92	EmacsConf Live Stream (currently in progress)	the-fritz	16	2	15		t5_2qhwu	False
1364473447.0	1b68p5	A summary of emacs screencast from rpdillon	agumonkey	20	5	9		t5_2qhwu	False
1363949716.0	1asjte	Anyone interested in coding by voice in Emacs should probably start from this	jisang-yoo	24	10	1		t5_2qhwu	False
1360424609.0	18713x	A package for controlling NetworkManager from Emacs.	nicferrier	20	7	3		t5_2qhwu	False
1359657612.0	17n5gm	"My Emacs-oriented TypeMatrix 2030 keyboard layout: Dvorak, Ctrl/Alt/Shift with thumbs (NO alternating), dedicated ""()"" key."	Hexstream	25	8	51		t5_2qhwu	False
1359156863.0	17ab4e	svg-thing	sabof	17	1	10		t5_2qhwu	False
1358003784.0	16fsrb	Jedi: Python auto-completion package 	suhrob	19	5	3		t5_2qhwu	False
1354827779.0	14ejne	emagician-fix-spell-memory.el -- the anti-autocorrect package to fix muscle memory for misspelled words. 	jonnay23	20	4	8		t5_2qhwu	False
1354134154.0	13y9k9	A Hyper Key for the Mac | Irreal	suhrob	19	2	0		t5_2qhwu	False
1353095302.0	13bbte	python-mode gone wrong	badaw	22	6	8		t5_2qhwu	False
1352155004.0	12oydd	Resources for Expanding Emacs Knowledge?	ExceptionRaised	19	3	12	"Hi guys, I'm a Comp Sci student who's wanting to get better at emacs.  I use it already for my programming homework (Python, C), so I know enough to get by.  I can passably navigate around buffers, and I can compile and run the homework using the shell in emacs.  That's about it.  From reading this subreddit, I get so excited seeing how productive you guys are with it!

So my question is, how did you go from a beginner to a pro?  I've got the basics down, but I want to get better!"	t5_2qhwu	True
1345007802.0	y8x1h	Working on remote servers	mihirthegenius	18	1	16	People have long believed that every developer should be at least somewhat familiar with vi in case they need to edit on a remote server on ssh, right? However, after discovering Emacs Tramp (www.gnu.org/software/tramp/) I would think that this argument doesn't really hold anymore. So I thought I'd ask you guys- the ones who deal with these issues every day- does it really work like that in real life development?	t5_2qhwu	True
1341686187.0	w6qvj	Mousetrap, a javascript library that implements, what Emacs users would call, keymaps.	shizzy0	19	5	3		t5_2qhwu	False
1331440262.0	qr5np	Learn Emacs: How to Break Bad Habits	rawsyntax	17	3	7		t5_2qhwu	False
1325233573.0	nw2d3	Using git for emacs configuration.	filsinger	19	6	3		t5_2qhwu	False
1324397136.0	njy75	In C is there a way to display the name of the function your cursor is in?	BeerSnob	18	4	3		t5_2qhwu	True
1324066210.0	nfj0e	Emacs wizards, how do you move about in source code?	bastibe	22	6	23	"I am in a bit of a love affair with a girl named Emacs. Emacs is a weird girl. So incredibly smart, yet the main thing that is holding me back from full on embracing her is her weird lack of movement commands. You know, Vim style.

Emacs seems to be limited to move-by-character, move-by-word, move-by-line and even more coarse stuff that I never use while programming. When programming, I want to change part of a camelCaps name, then jump to the next instance of that variable and do the same thing (is there a ubiquitous refactoring command I am missing maybe?). I want to quickly select, copy or change variable names, strings or expressions.

How do you do that kind of thing in Emacs? Constantly hitting C-p and C-n can't be the answer, can it?"	t5_2qhwu	True
1310223217.0	ikx3t	emacs-android.el has enough stuff in it to be released	gst	24	7	3		t5_2qhwu	False
1309337206.0	ic58h	emacs-nav: Emacs mode for filesystem navigation 	mrz	22	7	5		t5_2qhwu	False
1308804389.0	i6vs3	Scrolling Emacs by Line 	gst	19	5	6		t5_2qhwu	False
1306045321.0	hh62w	GTD with Org Mode, Part 2	mihkel_	19	3	2		t5_2qhwu	False
1304228203.0	h196r	Integrating Emacs, Org mode and Google Calendar	gst	18	4	1		t5_2qhwu	False
1302878808.0	gqrr7	John D. Cook on why he has grown to like org mode 	mycatharsis	17	2	0		t5_2qhwu	False
1300741941.0	g8gsx	Emacs init files in .org files using org-babel	mac	17	3	9		t5_2qhwu	False
1299920216.0	g2i95	speeding up emacs saves	gst	21	8	1		t5_2qhwu	False
1299146318.0	fwg17	Piping to an emacs buffer with emacsclient	gst	17	2	2		t5_2qhwu	False
1294593127.0	ez0s3	"Introduction to anything.el the ""Quicksilver for 
Emacs"" (see also his next post which explains how to 
create sources for Anything)"	kcin	21	5	7		t5_2qhwu	False
1291185976.0	eed3o	Feeling the itch to take another stab at emacs, anyone have suggestions on good tutorials/guides/blogposts to get my feet wet?	Psylinse	20	4	17		t5_2qhwu	True
1290273605.0	e95rg	Orgmode and Roundup: Bridging public bugtrackers and local tasklists	greenrd	22	5	0		t5_2qhwu	False
1284589827.0	deenr	Emacs in the real world: part 1	rberenguel	19	3	1		t5_2qhwu	False
1284519378.0	ddzpu	I just released a Minesweeper implementation for Emacs -- let me know what you think.	zck	16	1	12		t5_2qhwu	False
1280914995.0	cx7j4	A day page for Org-Mode	almost	20	4	15		t5_2qhwu	False
1273824011.0	c3yrf	"Hungry Delete: try out ""M-x c-toggle-hungry-state 1"" next time you are programming. It'll save you many needless keystrokes."	speciousfool	16	0	16		t5_2qhwu	False
1269611957.0	bil1f	Rename File and Buffer in Emacs	rejeep	17	1	8		t5_2qhwu	False
1266944088.0	b5j21	bindat: the nifty DSL API part of Emacs for describing binary data structures		18	3	0		t5_2qhwu	False
1258636820.0	a6117	Notmuch: a mail client for emacs 	jaybee	21	4	7		t5_2qhwu	False
1240811132.0	8fpxh	Gecko in Emacs (sort of) 	gst	19	5	15		t5_2qhwu	False
1236925690.0	84bbv	Emacs smart split for programmers	gst	17	2	2		t5_2qhwu	False
1235932846.0	818nc	Interesting Emacs Links - 2009 Week 9 	gst	17	2	0		t5_2qhwu	False
1235513654.0	8000j	Fast Emacs Buffer Flipping	gst	16	3	0		t5_2qhwu	False
1232358604.0	7qrwh	Draft for Wicked Cool Emacs, a book that will be published by No Starch Press. 	gst	24	10	1		t5_2qhwu	False
1223541036.0	763yc	Back To My…Emacs	gst	18	2	0		t5_2qhwu	False
1376463750.0	1kc2jk	powerline needs a new and loving maintainer	milkypostman	18	4	3	"I admit I am guilty: I am maintaining [an elisp extension](https://github.com/milkypostman/powerline) that I don't use or care about anymore. Sure, we spent many great nights together and it got one of my first *real* macros, but over time we've grown apart. Don't get me wrong, I think it looks great---both inside and out---but I have too many other things I need to focus on. It's not the project, it's me. But I do really care about it and I just want it to be happy.




tl;dr I am looking for someone really interested in taking over development of [powerline](https://github.com/milkypostman/powerline)

If you are interested you can fork it, we'll redirect MELPA, and I will endorse you as the new maintainer."	t5_2qhwu	True
1374503828.0	1itb17	artist-mode, oldie but goodie that I recently found. Artist is an Emacs lisp package that allows you to draw lines, rectangles, squares, poly-lines, ellipses and circles by using your mouse and/or keyboard.	climatewarrior	17	4	6		t5_2qhwu	False
1374167680.0	1ikjkb	doc-present: Present slides using Emacs	dengste	18	2	7		t5_2qhwu	False
1373754329.0	1i8pds	Get reminders for arbitrary prefix keys	MattDarling	15	1	2		t5_2qhwu	False
1372952656.0	1hmzmz	Rebind keys or use defaults?	mcmlxix	16	1	26	"Long time vim user, want to be emacs user (mainly for SLIME). I've tried to switch a number of times, but keep relapsing mainly due to horrible chords like C-M-x.  Is there any benefit to enduring the default configuration, or any downside to rebinding?  I guess that in these days of USB flash and github, I can find my configuration anywhere.

One particular concern is that I get used to my custom bindings and then find that they collide with the bindings for some mode I want to use in future.  Is there a space of bindings which is conventionally reserved for users' customization?"	t5_2qhwu	True
1372903927.0	1hlwwh	Moving to gvim, my thoughts.	maindoor	17	3	18	"After using emacs for about 6+ years, I have just started to use gvim
for purely 1 reason: C++ auto-complete. 
I had customized emacs in wonderful weird ways and I get a lot of
stuff done quickly. org mode, bookmarks+, ido, cscope, what-not.

I recently started on C++ and I had customized cedet as per the 
famous page and was reasonable to use. Later when I tried to 
set it up in office, the whole cedet setup + emacs changed
quite a bit, lots of errors and even after fixing them, doesn't work
as good as my earlier setup.
I find that it is too much of a hassle to set it up and use when all I
want to do is focus on the main task at hand. 
Inspite of the valiant efforts by Eric and other great folks at cedet,
I still find it lacking in several ways, speed and accuracy in completion
being some of them.

Am I right thinking this way ? Is there a better tool that google hasn't
shown me, that can be used on emacs for auto-completion ?

"	t5_2qhwu	True
1369877827.0	1fb4gh	esup - Emacs Start-Up Profiler - benchmark Emacs startup time from your current emacs	joesmoe10	18	4	4		t5_2qhwu	False
1367939066.0	1dv53k	Just sent a patch for deftheme (v24+) support on Emacs Theme Generator	aaptel	18	4	1		t5_2qhwu	False
1367780436.0	1dqt3x	Emacs on the Beaglebone	agumonkey	19	3	0		t5_2qhwu	False
1365365209.0	1bvccm	View the file you're editing on GitHub	meegee	20	4	8		t5_2qhwu	False
1360820867.0	18hz8k	Emacs key bindings everywhere in Ubuntu?	PomAhGraNut	21	5	18	I recently read that in OS X emacs key bindings can be used in any text widget. Is this possible in Ubuntu or GNU/Linux as a whole? Thanks!	t5_2qhwu	True
1360202597.0	181ead	purty-mode: general on-the-fly pretty printing	hackscience	17	3	2		t5_2qhwu	False
1353035761.0	13a1vo	Deuce is a clojure emacs fork in development	ArtemZ	23	9	2		t5_2qhwu	False
1350458832.0	11mc12	TIL Emacs has a TeX input mode allowing easy entry of unicode symbols	nibot	14	0	2		t5_2qhwu	False
1346279792.0	z1m7u	Trying to get into Emacs, but one thing is holding me back...	cap10morgan	22	9	24	"...autosave when window focus is lost. I just can't live without now. Even MacVim can do this w/ a little configuring. XEmacs has a deselect-frame-hook that can be used for it, but GNU Emacs apparently has nothing.

The autosave every X keystrokes feature isn't a good substitute. There's nothing quite like knowing your editor saved all your changes every time you switch windows to do something else (such as refresh the app in a browser or run the tests in a terminal window).

Am I being too stuck in my ways? What is the Emacs alternative that I should work on getting used to if I can't have this?

Is there any reason deselect-frame-hook couldn't be ported from XEmacs to GNU Emacs?"	t5_2qhwu	True
1342485185.0	woa4i	Introduction to Emacs Customization?	Supraluminal	17	5	16	"Hi all,
I've been using emacs for a few months in a C class in college and I'm enjoying it so far, but I'm looking to get into customizing it and I'm just lost. 

Things I've experimented with to no avail include making the default font bigger and easier to read, changing the color scheme to something darker, and adding line numbers to the sides of buffers. 

Can anyone point me to a resource on how to do these or otherwise instruct me in the ways of emacs? If it makes a difference I'm trying to do this on emacs22 on my university servers, but I have access to my own home directory, so I can edit .emacs and what not.

Thanks!"	t5_2qhwu	True
1338563455.0	ufozb	Powerline for Emacs (based on vim-powerline)	twampss	17	5	25		t5_2qhwu	False
1335896437.0	t1uc7	I wrote a library to fetch my mail from multiple IMAP servers and deliver them to an elisp function	kjfletch	15	1	10		t5_2qhwu	False
1333476450.0	rrhxw	I added some cute new features to Shadchen-el, the pattern matching library I wrote. 	commonslip	16	2	1	"Git repository [here](https://github.com/VincentToups/shadchen-el)

EDIT: a tutorial on Shadchen and writing new user defined patterns is [here](http://dorophone.blogspot.com/2012/04/shadchen-el-introduction-and-defpattern.html).

Shadchen scratches my itch to program in a functional style in Emacs Lisp.  You can read about the library on the git page, but the new feature mentioned above is pattern matching/multi-bodied defuns.  Here is how you define a product function using the feature:

    (defun-match- product (nil)
       ""The empty product.""
       1)
    
    (defun-match product (nil acc)
       ""Recursion termination.""
       acc)
    
    (defun-match product 
        ((cons (p #'numberp n)
               (p #'listp rest))
         (p #'numberp acc))
       ""Main body of the product function.""
       (recur rest (* n acc)))
    
    (defun-match product (lst)
       ""Calculate the product of the numbers in LST.""
       (recur lst 1))

Documentation for each body is accumulated into the the documentation for the whole function, along with the pattern expression associated with each.

Self-recursion is handled by a trampoline but can be made to any of the bodies defined.  The macro `defun-match-` clears any previous `defun-match` definitions with that name before creating new ones. 

Like most macro-heavy code, it helps performance greatly to byte compile any code using this library.  

When byte compiling the library itself you get tons of warnings about using cl.el, which I'm of a mind to ignore.  Does anyone care about that stuff?  





"	t5_2qhwu	True
1332787076.0	rejx6	Showing pop-ups in Emacs using libnotify	OMouse	15	2	5		t5_2qhwu	False
1326036774.0	o7zzl	How do i do Line highlighting based on git status ?	anon_koder	16	3	12	http://netbeans.org/images_www/articles/69/ide/vcs/left-ui.png - This is very useful to know which lines were added , where removed etc.. any way to configure my emacs to do that?	t5_2qhwu	True
1322351204.0	mqazk	.emacs formatting conventions		16	4	15	"How do you guys structure your configuration files? What kinds of headings and sections do you use? Do you do this sort of thing?

    ;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;;;;Org-mode
    ;;;;;;;;;;;;;;;;;;;;;;;;;;"	t5_2qhwu	True
1315824079.0	kcy64	A Day Page for Org-Mode (now as a library on Github)	almost	17	5	4		t5_2qhwu	False
1314840505.0	k0trb	backups-mode for emacs	chadbraunduin	16	3	5		t5_2qhwu	False
1314824187.0	k0l5l	Ask Reddit: Can Emacs have several buffer lists? 	va1en0k	16	2	18	"I have a lot of Django projects. It means what I sometimes have, like, five opened files named ""models.py"". If I want to stop working on a project and work on another one instead, I have to close all my buffers, or restart Emacs, or I will get lost in this pile of buffers.

It's annoying. Maybe I could have several buffer lists somehow?


(Also, while you're here. Can I ask emacs to use more meaningful buffer names - not `models.py&lt;48&gt;`, but `my_app_name/models.py` or something like that?)"	t5_2qhwu	True
1311182239.0	iuzhd	"Searching in Buffers with Occur Mode | Mastering 
Emacs"	mickeyp	16	3	0		t5_2qhwu	False
1305855844.0	hfj8x	What's the best way to get the most recent Emacs(en) on the most recent Ubuntu?  Elisp PPA hasn't  been updated since Maverick...	anachoret	18	4	23		t5_2qhwu	True
1297408355.0	fjbd2	XML editing with Emacs.	gst	15	2	0		t5_2qhwu	False
1296859634.0	ffhci	windmove.el acknowledgements in the GNU Emacs distribution	schubart	22	9	3		t5_2qhwu	False
1295226620.0	f3iog	What's in your .emacs?	sridhr	20	6	10		t5_2qhwu	False
1295100887.0	f2t1d	Research Paper Management with Emacs, org-mode and RefTeX 	gst	18	6	5		t5_2qhwu	False
1293918602.0	euo5l	Help with C++ code completion in Emacs for a large project?	medgno	16	1	15	"I use Emacs as my main text editor, and am overall very happy with how it works and how available it is.  However, when I'm working on the C++ codebase we use in our lab, I have problems with it.

We use a large number of external libraries, and so having code completion is a very big deal and makes coding much easier.  Being able to see the doxygen documentation is nice also, but not essential.

CEDET should solve all my problems.  However, it's awfully slow.  Running semantic-ia-complete-symbol-menu takes a good 20-30 seconds per use.  This makes it so slow as to be useless.  Visual Studio, Eclipse, Vim's omnicppcomplete, and NetBeans are all able to handle completion for this project.  However, none of those are Emacs.

To quantify things a bit more, there are around 300K sloc in headers in this project, and a decent portion of those are included in every source file.  I've tried using GNU Global, cscope, ctags, and ebrowse to speed up the indexing, but nothing has helped.  I've defined spp preprocessor symbols to try to prevent the heaviest files from being considered.  Still, the running time is awful.

So /r/emacs, here is my question: Is there a way to get C++ code completion in Emacs working with this large of a codebase?"	t5_2qhwu	True
1292404392.0	em4wf	Coda-like swapping in Emacs	myfreeweb	16	2	13		t5_2qhwu	False
1290234585.0	e90ss	Latex and emacs configuration suggestions	mgualt	16	3	20	"A few months ago I switched from TeXShop to Aquamacs for my LaTeXing and I started learning about all sorts of features of Auctex and other modes.  I fiddled with the Preferences.el file, I've copied it below.

Now my system seems way too complicated -- my problems are:

1. My documents are not wrapping properly, or automatically (i'm using M-q a lot) 
2. I have to click in order to LaTeX compile since there is no keystroke for that command, 
3. Similarly for ""Jump to PDF"" - it appears in my menu bar but not with a keystroke.
4. Auctex is not doing any indenting - this was one of the features I was hoping to use 

My main question is: could someone suggest a comprehensive approach to Latex with emacs, with the most up-to-date and best modes and settings?

Thanks.

*************
Preferences.el


; the AUCTeX manual recommends these settings
(setq TeX-parse-self t)			; Enable parse on load.
(setq TeX-auto-save t)			; Enable parse on save.

; for outline views (hide/show sections, chapters, etc.)
(add-hook 'TeX-mode-hook '(lambda () (TeX-fold-mode 1)))
(add-hook 'TeX-mode-hook '(lambda () (outline-minor-mode 1)))
; make PDF by default (can toggle with C-c C-t C-p
;(add-hook 'TeX-mode-hook '(lambda () (TeX-PDF-mode 1)))
(add-hook 'LaTeX-mode-hook 'turn-on-auto-fill)

      (add-hook 'outline-minor-mode-hook
                '(lambda ()
                   (require 'outline-mode-easy-bindings)))
      (add-hook 'outline-minor-mode-hook
                '(lambda()
                   (hide-body)))
      (add-hook 'tex-mode-hook '(lambda () (longlines-mode 1)))  

(add-hook 'org-mode-hook 'turn-on-org-cdlatex)
(autoload 'cdlatex-mode ""cdlatex"" ""CDLaTeX Mode"" t)
(autoload 'turn-on-cdlatex ""cdlatex"" ""CDLaTeX Mode"" nil)
(add-hook 'LaTeX-mode-hook 'turn-on-cdlatex)   ; with AUCTeX LaTeX mode
"	t5_2qhwu	True
1289288708.0	e3cyi	Emacs 23.2.90 pretest, feedback required.	fangzhzh	17	3	1		t5_2qhwu	False
1285272270.0	dhzwk	FLOSS Weekly 136: Emacs Org-Mode	gnuvince	17	3	0		t5_2qhwu	False
1284117371.0	dc18f	Org-jekyll — export static html blog posts from org-mode.	meegee	17	2	5		t5_2qhwu	False
1283702572.0	d9v6y	use a single .emacs for multiple machines?	revocation	18	2	21	hey hackers, if you use emacs on multiple machines, do you use a common .emacs file for all your machines? I would like for this to happen, but I have different packages installed on these machines - for instance, I have lilypond-mode on my home machine but don't (won't) have this for work; I have matlab-mode for my os x emacs but not for linux (for which matlab licenses are hard to come by). do you suppose the best way to go about it is to have a bunch of if-then statements in there, or there is something more clever, like checking to see if a package exists before trying to load it? 	t5_2qhwu	True
1281537293.0	czy1q	This Made Me Chuckle (Vi Slander)	psilokan	28	13	20		t5_2qhwu	False
1276060854.0	cd0gb	Emacs isn't for everyone	gst	28	13	17		t5_2qhwu	False
1269795413.0	bjcpe	Since Monday is looming, I thought now would be a good time to give you something to waste endless oodles of time on since you've clearly been to every corner of emacswiki.		17	2	2		t5_2qhwu	False
1259950613.0	ab5m7	What's your  Emacs 23 OS X setup?		20	7	34	I'm returning to using emacs after a many year break partly because of some of the new features on emacs 23.  However, after a few days of messing around, I can't seem to find a setup on OS X that works the way I want to (fullscreen, etc).  So I'd like to know what you're running on OS X to take advantage of that 23 goodness.	t5_2qhwu	True
1258683218.0	a699y	emacs-fu: showing pop-ups	gst	18	6	0		t5_2qhwu	False
1258133799.0	a43ci	Blorgit: Org-Mode based, git amenable, blogging engine	greenrd	19	5	5		t5_2qhwu	False
1256186732.0	9wiqi	emacs-fu: editing files owned by root with tramp	gst	17	2	6		t5_2qhwu	False
1254495667.0	9q7hu	Emacs and HTML	nunb	21	7	9	"I am using html-mode to edit html with embedded javascript. While other editors like Apple's Dashboard can handle this fine, html-mode fails miserably, it seems just not savvy to the idea of js inside script tags.

Has anyone else encountered this? 

Examples of what goes wrong are indentation, line-wrapping, etc."	t5_2qhwu	True
1252724349.0	9jr77	Emacs SavePlace remembers your position in a file the last time you opened it	AndreasBWagner	17	3	3		t5_2qhwu	False
1251381270.0	9eofa	Now you can use Monads in emacs lisp (with clojure style destructuring bind!) Hooray!	commonslip	20	5	9		t5_2qhwu	False
1250778931.0	9cgf3	command-frequency-mode	semente	15	2	0		t5_2qhwu	False
1249427601.0	97kmu	Emacs Tip #32: completion-ignore-case and Emacs 23	gst	14	0	1		t5_2qhwu	False
1243347184.0	8nbnb	Emacs 23.0.94 pretest	nash1011	17	3	1		t5_2qhwu	False
1242348642.0	8kldz	 Writing quick C++ programs in emacs without a makefile	gst	21	6	4		t5_2qhwu	False
1239161564.0	8au0g	For purpose of reference: anti-alias Emacs 	gst	17	3	0		t5_2qhwu	False
1234384615.0	7wo2o	emacs-fu: emacs --daemon	gst	17	4	5		t5_2qhwu	False
1232645423.0	7ro5a	Rediscovering Emacs	gst	21	7	2		t5_2qhwu	False
1226104054.0	7c2mc	Useful Emacs Tricks? (from slashdot)		18	3	0		t5_2qhwu	False
1376189432.0	1k4hlq	A basic Emacs tutorial I wrote - would love feedback	nonrecursive	19	5	17		t5_2qhwu	False
1373790161.0	1i9n2c	Sexy &amp; Smart: Revamp your mode line with smart-mode-line	BruceConnor	16	2	28	"The smart-mode-line package gives you all the mode-line information in much less space and with more visual appeal.

Features include:

* Smart truncation of folder name.
* Parsing folders into prefixes (space-saving) which get color coded.
* Very easy to customize.
* Minor modes filtering.
* Fixed-minimum width, fixed-maximum width, entirely-fixed width, OR flexible width. Independently for both file-path and minor-modes list.
* Support for a number of packages that modify the mode line. 

For pics or manual installation, see https://github.com/Bruce-Connor/smart-mode-line. 

For automatic installation, just find it on Melpa. 


**UPDATE:**  
There's a new version up with support for position, vc-mode, and encoding (all customizable)."	t5_2qhwu	True
1373409714.0	1hytoo	Any suggestions for the best gmail client for emacs?	mitnworb	15	1	21	I am looking for the most complete gmail experience. Easy archiving is must.  IMAP4 or offlineimap are both fine. 	t5_2qhwu	True
1372164996.0	1h192p	Introducing with-eval-after-load	lunaryorn	15	2	0		t5_2qhwu	False
1370008668.0	1fejgs	"Byte-compile your ""eval-after-load"" forms"	lunaryorn	14	2	12		t5_2qhwu	False
1369907510.0	1fbtfa	dash.el - list API for Emacs	jisang-yoo	19	4	10		t5_2qhwu	False
1368018539.0	1dxgrm	Lexical and dynamic scope explained. A bit.	nicferrier	18	3	17		t5_2qhwu	False
1365540229.0	1c0izb	Context Based Coloring	MoreHugs	18	7	13	"Is anyone working on an implementation of context based coloring for Emacs? 

Context coloring colors code blocks based on what the scope of the function is and the variables always have the color associated with the scope that the variables were declared in.

The idea is that discerning the scope of nested functions and variables declared within them is much more obvious, making debugging and following the code logic easier.

A proof of concept version of this was shown in Douglas Crockford's talk on [Monads](https://www.youtube.com/watch?v=dkZFtimgAcM&amp;hd=1).

Context coloring is explained at the 16:50 mark. 

An example of this for Javascript (what Crockford uses in the talk) is [here](http://i.imgur.com/ueFruz7.png).  

White represents global scope or an object that inherits nothing in the picture.

Context coloring would be excellent while doing functional programming.

"	t5_2qhwu	True
1364560649.0	1b8led	Emacs Redux - new emacs blog	lethalman	14	1	2		t5_2qhwu	False
1362135005.0	19ggi5	Questions: Making Emacs' (UI) Attractive, Light-Table, and Emacs in a Browser	MoreHugs	28	14	38	"1. While you and I have overcame Emacs' barrier to entry, an issue I frequently see raised regarding Emacs (on Hacker News, among my peers, and a topic [Sabof touched on](http://www.reddit.com/r/emacs/comments/18qodi/svgmodelinethemes/c8hc2z0)) is Emacs default aesthetics.  The look and feel is a reason I see recommendations of Emacs dismissed out of hand despite the task being very suited for the platform.  As a result, Emacs appears out of date and thus not relevant to the modern user, which is unfortunate as Emacs is unparalleled in many ways.  

    There are other hurdles that a newbie faces (ones that are a solvable problem conceptually), but the appearance of Emacs itself is one that some people have to overlook.  In the interest of expanding the user base and thus the amount of potential contributors to Emacs development, it would be nice to rule out the aesthetics as a cause for avoiding the platform.

    With that in mind, what would be necessary from a technical point of view to put Emacs' look on par with the environments that are considered nice to look at?  I debated with myself whether making Emacs conform to a consistent appearance across all platforms or consistent with the OS' GUI, and due to the ubiquity of multiple computing platforms it may make more sense to have the GUI look the same everywhere so that the experience is consistent. 

    Examples of IDE/Editor environments that some people prefer (and notably the ones that my social group largely uses) over Emacs' look are those used in [Light-Table](http://www.chris-granger.com/2012/04/12/light-table---a-new-ide-concept/)
or [Sublime Text 2](http://www.sublimetext.com/) as an example.

    Ultimately, I would look Emacs to be much more approachable for mortals, and even among current users a UI update is desirable to bring Emacs interface to the 21st century.  Doing so would aid in the platform having more momentum for another 30+ years and keep helping people in their pursuits.  Personally, Light Table's workspace concept makes a lot of sense to me and is very smart as well as innovative.  I like that one of the primary design goals is for the UI stay out of the way and contribute to accomplishing things instead of taking away from concentration by being distracting.

2. Another question: does a comparable feature exist in Emacs for any mode that is comparable to the ""real-time debugging"" concept that Light Table has (more proof of concept than a final implementation as far as I can discern), which has significant work flow improvements that would make debugging much more apparent for humans.  

    I realize Emacs is exceptional at utilizing a REPL, however currently it does not do so to the extent demoed by Chris Granger (although Emacs is still exceptional to the extent that it does take advantage of a REPL and one of the killer features the platform has).  A type of interactive debugging within code seems like something very much in the spirit of lisp's design paradigm, and possible to implement with elisp.

3. Looking forward 10 years from now, does it make sense to push a complete Emacs interaction embedded in a browser and run Emacs as a server process or should Emacs focus on the current desktop implementations? Those are not mutually exclusive pursuits though."	t5_2qhwu	True
1360356418.0	185hzw	Is there a Jellybeans colorcheme for emacs?	Shreyasp	16	4	14	"There is one for vim: https://github.com/nanotech/jellybeans.vim

Google search has not helped much."	t5_2qhwu	True
1358841372.0	171n7k	emacs bird's eye  view	whism	14	1	5	"Hi y'all, I just found out about `""C-x 4 c C-x C-- - -""` and was wondering if there's a way to get the same effect with something like follow-mode enabled, so I can have a small-sized-font overview of a large file I'm working on, and have it display e.g. where the point is in the original file, have clicking / moving in it move the original buffer around etc. I think I saw someone did this already, but I haven't been able to find it."	t5_2qhwu	True
1358537427.0	16tzu9	Anyone know of a reasonable way to timestamp output in *Messages*?	wadcann	19	5	4	I'd like to timestamp each line of  output in my *Messages* buffer, both to know approximately whether text from message() and warn() was recent and to help optimize startup (i.e. know how long each operation is taking).  I wasn't able to find an existing package to do this, though it seems like a common sort of need.  Before I start hacking on this, anyone know of an existing way to do this?	t5_2qhwu	True
1358207304.0	16kzm9	Emacs Live - great Clojure developer environment in an instant	jr0cket	16	5	1		t5_2qhwu	False
1356928837.0	15pija	Python-mode.el vs python.el	Quasimoto3000	13	2	8	"Python.el comes with emacs 24 and I have been using it for the past two weeks with little to no complaints.

A lot of documentation online, makes mention of python-mode.el which was supposedly created by the maintainers of python itself.

Which one do you use and why? "	t5_2qhwu	True
1355927112.0	153xyo	scala-mode2 — the Scala mode you've been waiting for	bozhidarb	18	4	0		t5_2qhwu	False
1354372313.0	143qf6	"Using emacs in a laptop
"	yilmazhuseyin	20	7	31	"I really like to use emacs. But I use it with a full keyboard. That way I can use left and right ctrl keys. But when I try to use it with a laptop keyboard, I cannot use right control key. So I thought about changing my editor, but I really don't want to use another editor. So my remaining choices are.

1) using evil mode?
2) mapping right control key to some other key (enter? )
3) A page in emacs wiki suggests to use space key as ctrl.

I think emacs is unusable with a laptop keyboard and I have to do a change t use a regular laptop. (I use ctrl + (p, n , f, b) for navigation. and I cannot press ctrl + b and ctrl+f on a keyboard.)
How did you guys solve this problem?
 "	t5_2qhwu	True
1346399559.0	z4jeu	ErgoEmacs users out there?	bastibe	20	7	34	"I am a huge fan of Emacs, but I have to say, the default key bindings are rather awkward. Now I have been looking around a bit and ErgoEmacs seems to be a comprehensive package to change that.

Are there any ErgoEmacs users out there who would like to share their experiences? Does it cause trouble with popular extensions? Do you feel like the new key bindings changed your interaction with Emacs?"	t5_2qhwu	True
1343937187.0	xkwhb	Emacs Haiku (EmacsHaiku) on Twitter	echosa	15	2	3		t5_2qhwu	False
1343037686.0	x0ctr	"traad: client-server interface for the ""rope"" Python 
refactoring library (incl. an emacs client)"	abingham	15	3	3		t5_2qhwu	False
1335865516.0	t1br6	Released: New version of Emacs Nav	threading	14	1	9		t5_2qhwu	False
1333042357.0	rjilg	Use an online thesaurus to replace the word at point with a synonym of your choosing. 	AyeMatey	19	4	5		t5_2qhwu	False
1326440279.0	of7f8	Made some org-mode shirts tonight...	ybit	17	4	4		t5_2qhwu	False
1321613331.0	mgt64	Extremely green - request for tutorials	AeroNotix	18	5	27	"Hi,

Having spent the last two years bouncing between various text editors for editing code (C++, Python, Lisp), usually having to use something designed for each individual language (ugh, bloat). Over the years I knew about Emacs/Vim (and their subsequent flame wars) I was put off by Emacs because of the Vim supporters, but I've found that Emacs is a little more intuitive and I can actually very basically edit text and save it without learning a myriad of commands.

However, this is not enough.

I wish to learn how to set up Emacs for Python properly on a Windows 7 pc. I want to do [this](http://utkarshsengar.com/2011/06/emacs-python/) for Python (I don't edit much C++ nowadays and the built in Lisp settings are fine). Can anyone point me to a detailed article on this?

EDIT: Would love to know why I'm getting downvoted in my own thread."	t5_2qhwu	True
1320943010.0	m7jqd	Emacs buffer mode histogram	schaueho	17	4	0		t5_2qhwu	False
1319544039.0	loaug	Best of both worlds? Vim emulation in Emacs?	suhrob	20	7	16	"I'd be interested in your opinion on Evil/Vimpulse/Viper modes in Emacs. Is this a viable way to go?

I personally use Emacs less then 6 months and I am very happy with it. However, I think as far as text editing goes, modal editing is a superior way to Emacs chords. I also use several vi-originated modes that I like very much (e.g. ace-jump. dot-mode, zenburn theme). Undeniably Vim is powerful and it has a larger community (thus likely larger idea and resource pool).

There are however many features of Emacs that I enjoy and I don't think too compeled to switch to Vim at the moment. Does anybody use Vimpulse/Evil? What do you think of it? Are you an ex-vi user and use it just because of it?

I think in terms of larger underlying principles Emacs wins with 1) having the better programming language 2) its ""operating system"" paradigm, in my opinion also clearly won (apparently vim is now also closer to this route then a tiny, fast editor to jump in and out as it originally used to be). Vim wins in terms of text editing power. So the combination should be potentially the best? Are there many conflicts? Is there enough support?

Thanks for your thoughts!"	t5_2qhwu	True
1319312236.0	ll9sa	Best way of tracing emacs memory leak?	beslayed	15	3	11	For some reason, I'm experiencing a memory leak with Emacs 24.0.90.1 (using the emacs.naquadah.org repository emacs-snapshot). I don't have the same problem with Emacs 23.2 (or 23.3). I'm supposing that this has to do with something in my particular emacs setup, since I haven't seen anything in particular about memory leaks with 24 on the mailing list. But the question is how to trace it? 	t5_2qhwu	True
1316448737.0	kkl3j	Emacs Reboot #6: Marmalade, Magit	cwgem	18	5	4		t5_2qhwu	False
1315934218.0	kee3a	Hint #1 - Do you remember? (Emacsrookie.com - Hints about the emacs text editor)	zastav	20	6	5		t5_2qhwu	False
1311143852.0	iulqe	emacs for writers: a few tips 	gst	21	7	7		t5_2qhwu	False
1310620050.0	ip5wb	Learning Emacs key bindings	gst	18	5	3		t5_2qhwu	False
1310510076.0	inv0n	ViTunes look-alike for emacs?	nthcxd	14	1	10	I came across [this](http://danielchoi.com/software/vitunes.html) and am incredibly jealous at vi users for this at the moment. I'm wondering if there's something similar to this for emacs (on Mac OS X)? I did find one that looks rather similar but for [Emacs on Windows](http://www.geocities.jp/tmjb2006/itunes/itunes-mode.html).	t5_2qhwu	True
1307853231.0	hxl37	emacs: Highlighting errors for c, python, and other languages	gst	17	4	1		t5_2qhwu	False
1306217886.0	hioy7	jquery-doc.el	ananthakumaran	16	4	0		t5_2qhwu	False
1304397047.0	h2w19	Automatic Screenshot insertion in Org Mode	gst	14	1	0		t5_2qhwu	False
1302016229.0	gj4n5	Lexical bind merged into trunk	makotoy	14	1	7		t5_2qhwu	False
1298873612.0	fu4yl	A Little Elisp to Make Emacs and Racket Play Nicer	gst	18	6	5		t5_2qhwu	False
1298812860.0	ftohq	Executable source code blocks with org-babel (emacs-fu)	ndanger	15	1	0		t5_2qhwu	False
1297057128.0	fgon3	Simple Emacs DarkRoom 	gst	17	5	13		t5_2qhwu	False
1295764537.0	f7ewl	Make script files executable automatically | Mastering Emacs	gst	16	2	0		t5_2qhwu	False
1295333603.0	f4aiv	Why don't we have this?		24	11	14		t5_2qhwu	False
1294236725.0	ewliq	What's your keybinding convention for your own functions/macros?	dnquark	18	4	36	"After a few years with emacs, I've hit a point where I'm writing a fair bit of my own elisp code and/or saving macros.  Unfortunately, I haven't come up with a good strategy for assigning them keybindings.  The ""reserved"" prefix C-c is often cannibalized by major modes (org-mode, for instance, seems to use all possible C-c bindings).  The rarely-used C-z and C-\ in my setup are reserved for GNU Screen (yes, both of them.  Yes, I run Screen within Screen.)  

I'm sure I'm not the first person facing this problem, so I'd be curious to know what others have come up with.  Is it some C-[a-z] that you've decided to sacrifice?..  F-keys?..  Do you need no stinkin' keybindings, M-x FTW?..  I'd like to know!

--

Edit:

Some nice suggestions here (I particularly like C-. idea); I'm glad I'm not the only one pondering the binding issue.  I'd like to share the strategy that I adopted (starting today).  I've basically codified and made consistent some conventions I tended to follow already.  Here they are:

* Reserve F-keys (except f3, f4 which are bound by default to macro functions) for operations that require cycling through several states, necessitating several keypresses in succession.  Example: cycle code folding states, cycle buffers, jump between bookmarks in code.
* The bulk of user-defined keybindings should go through C-c [a-zA-Z] to minimize conflicts
* Reserve some keybindings for submaps, e.g. C-c {a,b,c,u,m,o}: for instance, bind user-defined functions to C-c u [a-z], bind macros to C-c m [a-z].  
* Bind very frequently used commands to non-reserved C-c [a-z].
* Use other bindings (unused C-S-..., or C-M-..., or M-...) sparingly and at your peril.

It might be useful to create a mode for global keybindings, as per [this SO post](http://stackoverflow.com/questions/683425/globally-override-key-binding-in-emacs).
This is particularly handy for when you bind something outside the C-c namespace, because this method allows you to prevent your bindings from being shadowed by other modes.

Edit 2:

The approach above works very well with sugarshark's macro for defining submaps that he [posted in the comments](http://www.reddit.com/r/emacs/comments/ewliq/whats_your_keybinding_convention_for_your_own/c1bmsal); the code is at http://gist.github.com/767879 .  The major win here is automatic documentation of all your custom bindings that instantly appears on invocation."	t5_2qhwu	True
1288312058.0	dxzth	Breadcrumb for Emacs	fangzhzh	16	4	12		t5_2qhwu	False
1287581840.0	dttya	"Vim's ""Conceal"" feature, any elisp experts want to comment on whether this is possible as emacs minor mode?"	radarsat1	18	7	10		t5_2qhwu	False
1285588512.0	djfzn	Interview with Eric Ludlam (the man behind CEDET and matlab-mode)	the-fritz	15	1	0		t5_2qhwu	False
1283954222.0	db3mc	Winner Mode - restores previous window configurations - wish I had known about this earlier	greenrd	15	3	5		t5_2qhwu	False
1282179257.0	d2t4q	⚛ Scratch buffers for Emacs 	fangzhzh	19	8	4		t5_2qhwu	False
1278988118.0	covgr	Updated tangotango emacs color theme - Humus numericus	jrh0090	17	4	1		t5_2qhwu	False
1274894519.0	c8cse	Obscure Org-Mode Question: Can I Run Org Mode Export from a Shell Script?  (Details inside)	firsttimetalk	18	5	4	"Here's the situation:

I have a file, foo.org.  When I open it in emacs, I can run C-c C-e b and get an html exported file, foo.html.

Is there anyway to do this without opening emacs?  I'm imagining something from the shell that looks like this:

# emacs -orgmode -export -html foo.org &gt; foo.html

Thanks if anyone knows the answer"	t5_2qhwu	True
1270414814.0	bmdw6	Ecukes - Cucumber for Emacs	rejeep	17	4	1		t5_2qhwu	False
1269971707.0	bkarj	Request: screencast showcasing the capabilities of ibuffer	gnuvince	17	4	6	I read about ibuffer for the first time here a few weeks ago and I've started to use it a little and I like what it can do.  However, I'm just a beginner and I'm sure many people here know it very well, and I (along with probably many others) would love to see what can be done with it.	t5_2qhwu	True
1261972603.0	aj1y1	Subtleties of search-and-replace in Emacs - I Still Know What You Learned Last Summer	sergio_101	14	3	0		t5_2qhwu	False
1260100691.0	abmxw	Starting an Emacs Lisp interpreter in JavaScript	sjs	17	4	4		t5_2qhwu	False
1257344242.0	a0vml	A non-trivial example of Emacs D-Bus bindings	froydnj	15	1	1		t5_2qhwu	False
1255257206.0	9sxf0	Sorting Records With Emacs	gst	13	1	0		t5_2qhwu	False
1252982820.0	9kltr	Emacs 23 - Much to my surprise, the Fedora Emacs maintainers pushed Emacs 23 into the (ostensibly stable) Fedora 11 repository. 	gst	19	5	4		t5_2qhwu	False
1249427731.0	97kne	emacs-fu: interview with Chong Yidong and Stefan Monnier	gst	15	2	2		t5_2qhwu	False
1248904130.0	95sdv	Fast buffer switching with the mouse wheel		16	3	6	"Here's a quick and easy .emacs hack:
    
    (global-set-key [(C-mouse-4)] 'previous-buffer)
    (global-set-key [(C-mouse-5)] 'next-buffer)
    
Now ctrl + mousewheel up/down cycles through the buffers."	t5_2qhwu	True
1248819774.0	95g5y	Relative Timing With Org-Mode - SweetFriday	OMouse	18	5	1		t5_2qhwu	False
1245988318.0	8vsa8	An example of defadvice in Emacs	gst	16	3	0		t5_2qhwu	False
1245914586.0	8vhc6	This is how Noah Friedman ran Emacs on his Android phone.	self	17	4	2		t5_2qhwu	False
1241199624.0	8h3kt	Anyone else spend more time than they can justify noodling with Emacs? (more inside)	sping	21	9	12		t5_2qhwu	True
1233246267.0	7tddr	Dynamic Abbreviation in Emacs	gst	17	4	2		t5_2qhwu	False
1232402383.0	7qx4a	Emacs 23: Directory Local Variables	gst	17	2	0		t5_2qhwu	False
1374858931.0	1j3w0x	More than 256 colors in terminal?	linuxwes	14	1	16	Not totally an Emacs question, but I'm running Emacs under Putty and I've got 256 colors working, but I'm still finding the color pallet too limited.  Is there any hope of getting full color like you get in the Emacs GUI?  Perhaps using a different terminal client? 	t5_2qhwu	True
1372271850.0	1h4hyw	Selecting regions (python.el).	ChesterMcFistiecuffs	13	1	11	"I use emacs24 primarily as a python IDE with the built-in python.el, and for publishing with org-mode. When sending a region of python commands to the interpreter I set the mark with 'C-SPC', define the region, then send the region to python with 'C-c C-r'. 

What I would like to be able to do:
Send single lines to python without highlighting it first.
Send a block of code to python without having to highlight it. For instance, the block could be define a region as consecutive lines of code with blank lines, above and below, separating it from the rest of the code. 

Does anyone know of a way to do either of these things?"	t5_2qhwu	True
1371790047.0	1grz5c	Light Color Themes in Emacs	MoreHugs	16	4	23	"Those of you who use a light color theme in Emacs, which one are you using currently? 

I like some of the dark color themes, but I found them difficult to read when writing tex and using the auctex with preview, so I switched to a light color theme in response. 

I was using Solarized light, however I recently switched to dichromacy.  

The dichromacy theme has a similar background as solarized light and uses a darker color palette for coloring for the most part, which I have found pleasant."	t5_2qhwu	True
1370275072.0	1fl507	Skewer-mode with coffeescript support	jackrusher	16	3	8	"I hacked up experimental coffeescript support for skeeto's skewer-mode. Because skeeto did such a nice job, it was [quite easy](https://gist.github.com/jackrusher/5698974), as it should be for most other languages that compile to Javascript.

The coffeescript for that ""mini-processing"" live-coding example is [here](https://gist.github.com/jackrusher/5695344)."	t5_2qhwu	True
1369724905.0	1f6qy9	Lesson Plan for Emacs?	sahilsinha	14	1	18	"I'm planning on teaching my team Emacs over the next few weeks. I was wondering if a lesson plan for something like this exists? If not, maybe the hivemind can come up with key topics. Hopefully it is a lifetime of fun and discovery for them.  

I found this: https://github.com/AlexWillisson/emacstutorial/blob/master/lessonplan

Some things I thought to touch upon:

* org-mode
* cua-mode (for those who dont want to change)
* magit 
* Basic Emacs Lisp
* Window/Frame/Buffer management

Any other ideas?
"	t5_2qhwu	True
1369256413.0	1euy0v	Can private comments be made in emacs?	slip_up	19	7	10	"I'd like to be able to attach hidden notes or comments to particular pieces of text. I could write comments, but comments can be distracting to other coders. Ideally, I'd like to create these hidden, personal notes on the fly and hide/display them with a command.

For example, say you're learning a new codebase and you come across a novel function like, say dog.ruminate(). Unfortunately, this is just one of many functions you don't understand. You do some research on dog.ruminate() and *kind of* get it, but you're pretty sure you'll be looking it up again in the future. At this point, I'd like to insert one of these hidden comments, but in a way that doesn't actually edit the file--after all, this is *private documentation* that other devs probably wouldn't benefit from.

Do any of you know if this can be done in emacs?"	t5_2qhwu	True
1368975630.0	1ems7u	Never switch to compilation buffer	RappingProgrammer	14	3	15	"Hey guys, I'm trying to figure out one thing that's been bothering me for years.

My workflow is something like this: hit F7 to compile and if the compilation fails, iterate through compilation/test errors.

I am using popwin for the compilation buffer. If the compilation succeeds, I bury the buffer (programmatically) and the popup goes away.

When it fails, I need to switch buffers/windows to edit files and to do this, I use C-x o (other-window). The problem is that one of the ""other windows"" is the compilation buffer which I'd like to ignore when doing this iteration through windows.

Any ideas/suggestions? Maybe I should not be using C-x o to switch buffers?"	t5_2qhwu	True
1366381754.0	1coeqw	Color schemes for file types?	spikeRadical	16	2	1	How can I make my color scheme change based on the file type in the buffer I'm editing?	t5_2qhwu	True
1366031767.0	1cdxzl	Bruce-Connor/smart-mode-line · GitHub	TrisMcC	17	5	0		t5_2qhwu	False
1364665080.0	1bb7ji	lisp refactoring in emacs	agumonkey	17	4	2		t5_2qhwu	False
1364326459.0	1b26j9	Org-mode slides from Bastien Guerry -- GNU HM 2011	agumonkey	14	2	1		t5_2qhwu	False
1364317912.0	1b1v13	Using Polymorphism as a Lisp refactoring tool	nicferrier	14	2	4		t5_2qhwu	False
1361829371.0	197tea	Good list of gdb shortcuts in Emacs! Must have for the Emacs newbi	Greblak	17	5	3		t5_2qhwu	False
1360605066.0	18biey	Brainstorming Regarding Computation inside Org Mode	MoreHugs	13	2	8	"I was reading [this post regarding Mathics](https://news.ycombinator.com/item?id=5196551) on Hacker News, and in particular [this post on Mathematica's proficiency at note taking](https://news.ycombinator.com/item?id=5196925). I can relate to the desirability of something like Mathematica notebooks as I also try to write everything in an electronic format, as it has certain advantages such as ease of backing up, searching, and efficiency.

Presently I use org-mode and LaTeX for such task, but one area where the solution is weak is its ability to do actual calculations of advanced mathematics. Emacs' calc mode is useful for inline calculations of less advanced mathematics, but once the domain enters higher level maths it is not possible to use for the task of either symbolic or numerical calculation, which is where Mathematica's notebooks are very exceptional.

While Emacs' org-mode and LaTeX capabilities are exceptional (and also its support for including in text diagrams), there is a need for a more proficient mode for the purpose of numerical and symbolic calculations. So, what are some options that exist which could fill in this role, and serve as a replacement for calc mode for users such as myself? 

Octave is sufficient for numerical calculations, but it is not very good at symbolic calculations.  Octave already has an Emacs mode (and it is also open source) so hooking that into org-mode for inline calculations would not be too taxing, but what could serve the purpose of more complex symbolic calculations in Emacs?

Preferably in both cases the solution would be able to translate LaTeX into the form the solution needs to do the task, then output the solution back into the text, and the solution would ship with Emacs by default.

If such a solution existed Emacs would be even more deft for the purpose of writing notes and reports and expand the potential user base that Emacs appeals to, as well as increase Emacs' utility for those of us already using the platform."	t5_2qhwu	True
1357947540.0	16epgb	Emacs Icons Project	instant_sunshine	17	5	23		t5_2qhwu	False
1357125375.0	15tkuu	Auctex related questions	lcdcomplexion	15	1	9	"I have the following questions that are all related to my dailly use 
of the LaTeX mode Auctex. I have been meaning to ask for a long time now ... 

1) How can I make emacs re-read the local variables / directory local variables ?
2) Is there a command to remove the latex command surrounding the current position ?
\todo{Bla bla} -&gt; Bla bla
3) Is there a command to open the master file if you are in a file that is part of multi-file project ?

Happy new year !"	t5_2qhwu	True
1356087967.0	1580o6	Pain in your fingers while using emacs?	Road_Runner_	17	5	24		t5_2qhwu	False
1355322122.0	14q4ro	Spent way too much time for this - an Emacs library to show you random kitten pics from Flickr	afroisalreadyinu	19	7	16		t5_2qhwu	False
1355099810.0	14kps4	OS X Fullscreen in Emacs 24 HEAD	Atlas2048	20	6	13		t5_2qhwu	False
1353286605.0	13fatz	I finally started a proper Emacs diary, today.	ketefoy	18	6	11		t5_2qhwu	False
1350825445.0	11uc6z	Shampoo: a set of tools for remote Smalltalk development with Emacs	self	14	0	0		t5_2qhwu	False
1349047095.0	10qe0e	A simple Emacs database interface plus a simple implementation.	nicferrier	15	4	2		t5_2qhwu	False
1347091604.0	zjrnt	Markov Chain Text Generation « null program	agumonkey	16	2	1		t5_2qhwu	False
1336360432.0	tam3w	jira-rest, a major mode for interacting with JIRA's REST API	mattdeboard	17	4	2	"A co-worker turned me on to jira.el, a mode for using Jira's XML RPC API. However, Jira has said they're deprecating all but their REST API, so I wanted to scratch my own itch and put [this](https://github.com/mattdeboard/jira-rest) together.

This is my first outing into writing anything more complex than some conditional checks in elisp, so I would sincerely appreciate any input or guidance on what I've done wrong. But also it would be cool if someone got some use out of it besides my coworker and me.

"	t5_2qhwu	True
1335449403.0	stkb1	I'm really liking the bar cursor	dar512	15	2	9	I'm still new enough at emacs that I sometimes trip over which character gets deleted on a del or backspace.  But apropos turned up the variable cursor-type.  I like the bar a lot better.  I think it's better for seeing the region too.	t5_2qhwu	True
1333475714.0	rrhbm	EmacsWiki: Literate Emacs Lisp	OMouse	16	3	3		t5_2qhwu	False
1331757628.0	qwp6x	Efficiently Browsing Text or Code With Emacs	kirubakaran_web	18	6	4		t5_2qhwu	False
1330149567.0	q56a7	Pastels on Dark theme ported for Emacs 24	shizzy0	15	3	2		t5_2qhwu	False
1326732189.0	ojfjh	Blogging With Emacs	JRepin	14	2	2		t5_2qhwu	False
1326727410.0	ojciu	"(defun cat-command ""A command for cats."" ...)"	YHVH	12	1	2		t5_2qhwu	False
1325713585.0	o312h	LaTeX table manipulation using Emacs/AUCTeX+align.el+rectangular selection	yinghai	13	1	1		t5_2qhwu	False
1324039818.0	nf47e	These modes make my life easier.  What are your favorites?	tmalsburg2	17	7	22	"Essential things:

* **evil-mode** implements editing à la Vim.  I love evil!  It saved me from repetitive strain syndrome.
* **anything** for finding stuff
* **visual-line-mode** no more M-q, no special cases when searching strings that span across lines!
* **org-mode** outliner and more.

Other things that I like:

* **hl-line-mode** highlights the current line
* **flyspell** spell checking
* **ess-mode** development environmen for R
* **ebib** for managing my bibliography
* **Edit in Emacs** a plugin for Chrome that allows me to edit text fields in Emacs.

What makes your life easier and Emacs a pleasure to use?"	t5_2qhwu	True
1322994245.0	mzncq	Emacs on Mac OS X : how to launch Emacs GUI from the command line	lcdcomplexion	15	2	11	"I would like to emulate the behaviour of emacs on Linux.
For the moment, I use 'open -a Emacs' but I have two windows instead of one and if the file does not exists I have an error instead of a blank buffer.

I use  23.3.1 taken from Emacsformacosx.com.

EDIT: If I type ""open /Applications/Emacs.app toto.txt"" then I get two windows. If it toto.txt does not exists, I have an error.

EDIT: The answer for the two windows is in this thread:
 http://www.reddit.com/r/emacs/comments/mzmqm/emacs_on_mac_os_x_how_to_not_open_files_in/
For the case where the file does not exists, I wrote a simple wraping script.
"	t5_2qhwu	True
1315552820.0	k9t9j	emacs-fu: finding just about anything	jeekl	16	2	4		t5_2qhwu	False
1311862797.0	j26ra	Experience with Icicles?	suhrob	14	2	12	"Dear reddit emacsers,

I am new to emacs (~2 months, switched from jEdit). I am supper happy with it and admittedly too much of my free time went into tweaking it. 

Currently I am using ido/iswitchb/smex for files/buffers/minibuffer commands. My only small gripe is that I think opening files, buffers and recently closed files could be reachable with a single function. My initial try at Anything failed, but willing to try again.

But what about Icicles? My understanding is that it should be a huge productivity boost (not only for  the above case), but many people say it is too crazy.

Do you have experience with it? Recommendations? What/how do you use it? Any good resources beyond:

http://www.emacswiki.org/emacs/Icicles

?
A screencast would be particularily interesting!
Thanks!"	t5_2qhwu	True
1311637997.0	iznob	Emacs and Python - please help me make it perfect.	pbmonster	16	5	6	"Hi folks,

I am constantly looking to improve my emacs setup, and today it's Python's turn.

I'm using a setup originally inspired by [Lei Chen's Perfect Python Environment](http://hide1713.wordpress.com/2009/01/30/setup-perfect-python-environment-in-emacs/) in combination with ipython.el as emacs-intern python interpreter.

Now the question: I usually start the ipython process through C-x ! and then start sending entire buffers (py-execute-buffer; C-c C-c) or regions (py-execute-region; C-c C-e) to the interpreter. 

What I am really looking for now is a way to execute single lines of code, preferably without loosing focus of the source file buffer (py-execute-region jumps to the interpreter after execution, and making each line a region before execution is certainly NOT the emacs way).

Any idea is appreciated!

PS: Also, upvotes for other python environment setups. I'm sure I have a lot to learn..."	t5_2qhwu	True
1310533067.0	io5gp	Emacs: Defining Alias to Increase Productivity	gst	24	13	4		t5_2qhwu	False
1308167805.0	i0kz5	Emacs includes a man page for sex [x-post from /r/programming]	rafekett	22	10	2		t5_2qhwu	False
1307182525.0	hrfle	Smart Sentence Filling in Emacs	gst	16	5	1		t5_2qhwu	False
1305921208.0	hg5by	Look what I found in the trash today	kcfcl	23	10	7		t5_2qhwu	False
1301136881.0	gbvxs	Working with multiple files in dired | Mastering Emacs	gst	15	1	0		t5_2qhwu	False
1299402932.0	fyc3w	evernote-mode	mac	17	3	2		t5_2qhwu	False
1299216962.0	fx32z	Has anyone seen emacs window manage just like the xmonad's tiling window management?	dalgong	14	3	9	In xmonad, the concept of master window and expanding the focused window to a larger one and so on are so great that I want to implement similar things in emacs window management. The emacs way of window management -- splitting horizontally/vertically, moving to other windows, deleting selected window or other windows -- is not productive enough. I know it would be so hard:) Has anyone implemented similar one?	t5_2qhwu	True
1296945804.0	ffzwp	What Emacs library should I read?	schubart	18	6	6	I want to become more familiar with Emacs and Emacs Lisp. Can you suggest a library that's well written, idiomatic and reasonably sized? I'm thinking aout ido or magit, but any suggestions would be great.	t5_2qhwu	True
1295701318.0	f710j	Emacs Online Resources and Communities 2011	gst	19	6	1		t5_2qhwu	False
1294382324.0	exr3j	emacs-fu: setting the frame title	gst	14	3	1		t5_2qhwu	False
1289520642.0	e4v4j	SSH to an X11 Emacs instance without X11 tunneling?		16	2	13	So the question sounds kind of weird, but I think it's valid. If I'm running Emacs in X11 on the host computer as a server, is there any way to simply start Emacsclient on the client computer and have it connect to a remote instance? X11 tunneling is far too slow for any kind of work.	t5_2qhwu	True
1287870926.0	dvg8q	How to batch edit a small change to one file in each of 10k+ zip files?	ccondon	15	2	14	"So, I have 10k-12k .epub files (which are just some html and xml stuff zipped) that have the wrong language tag set.

Basically, for each name.epub,  I need to change one line in name.epub/metadata.opf (which is an XML file). 

The change is the same every time, and is easy to do with a macro or regex, but I'm not sure how to tell emacs ""run this command on the metadata.opf file in each epub file in this directory tree"".

Anyone have any ideas? I could probably have just done this in perl/bash or the like, but I feel like emacs should be able to do this without too much work."	t5_2qhwu	True
1282025190.0	d20u6	GNU Zile: anyone prefer it?	GJ1214b	19	8	14		t5_2qhwu	True
1275408732.0	caa5b	From a newbie to r/emacs: how to do indentation right	welicious	12	1	12	I'm trying to move on from Anjuta to Emacs, mainly for corporation purposes, and I hop into this problem. When I'm into a, say, C function and push the tab key, Emacs indent with 2 spaces, not with a 8-column tab. In fact, I've the same problem with every block. First I tried deactivating the syntactic indentation but it doesn't seem convenient. So, ideas? Thanks in advance.	t5_2qhwu	True
1272451957.0	bx6v6	Wanderlust set-up	digehode	15	3	2		t5_2qhwu	False
1266761114.0	b4nek	Emacs Tip #35: framemove	gst	13	1	5		t5_2qhwu	False
1266427527.0	b37xv	Emacs column-marker.el guidance	BasicObject	15	2	9	Before I get a lmgtfy link: I've googled this for 30 minutes and can't find a straightforward code example for my .emacs. What I'm looking for is a way to display a vertical right margin after the 80th column in emacs like [this](http://imgur.com/HedIJ.png). I've added (require 'column-marker) to .emacs and placed column-marker.el in my load path. http://www.emacswiki.org/emacs/ColumnMarker mentions column-marker-1, column-marker-2 and column-marker-3. Can anyone assist me? This is what my .emacs looks like: http://pastie.org/829248 	t5_2qhwu	True
1259774087.0	aac5t	"Add a ""bufferless"" modeline ?"	file-exists-p	14	4	4	"Is there any way to have an additional modeline at the bottom, not attached to any buffer, where one could put the stuff not specifically related to a buffer (time, cpu load, battery, etc.) ?

That would free the corresponding space in the other modelines."	t5_2qhwu	True
1248293234.0	93men	Wikipedia-mode.el	OMouse	15	3	0		t5_2qhwu	False
1244290226.0	8qan7	Google region in Emacs	gst	16	5	0		t5_2qhwu	False
1241366937.0	8hhq9	The Craft of Text Editing 	gst	18	5	0		t5_2qhwu	False
1238361757.0	88fnz	Emacs Comint 	gst	13	3	0		t5_2qhwu	False
1233874921.0	7v7uw	emacs-fu: switching buffers	gst	20	9	4		t5_2qhwu	False
1233698461.0	7un1q	emacs-fu: fancy debugging with gdb	gst	18	6	1		t5_2qhwu	False
1233237719.0	7tc48	Emacs users, what is your $EDITOR? 	gst	16	5	14		t5_2qhwu	False
1232994640.0	7sjt0	(setq visible-bell '1) ; this is the first thing I'd do on a new Emacs installation to turn off the annoying beep on everything.	ww520	19	7	5		t5_2qhwu	True
1232354113.0	7qrj0	Tramp mode edits remote files securely; multi-hop editing is truly amazing	ww520	16	4	6		t5_2qhwu	False
1231689400.0	7oxro	Emacs Abbreviations 	gst	15	2	0		t5_2qhwu	False
1376482646.0	1kcdq0	evil-nerd-commenter 1.0.0 released	redguardtoo	13	2	3	"evil-nerd-commenter upgraded to 1.0.0
https://github.com/redguardtoo/evil-nerd-commenter

WHAT IT IS:
comment lines efficiently in emacs

CHANG LOG:
- support comment paragraphs which are separated by empty lines"	t5_2qhwu	True
1375886864.0	1jvwce	Need help with Skewer Mode	lieutntdan	12	1	7	"Hi everyone,

I'm trying to get started using [skewer mode](https://github.com/skeeto/skewer-mode), and although the github page has a lot of good documentation, I can't seem to get my web page to display.

I first had to change my httpd-port variable, which wasn't any trouble.

I can interact with the webpage's javascript console (I can evaluate expressions and function definitions), but my problem is that I can't display the webpage I'm actually working on. In the demo video, you can see an html5 animation. I can't get any html to display.

Does anyone have experience with skewer mode? I feel like I must be missing something basic here. Thanks!"	t5_2qhwu	True
1375740293.0	1jrps8	Which package manager/repository do you use?	revocation	12	1	17	There is [el-get](https://github.com/dimitri/el-get), [Feline Herd](http://sourceforge.net/projects/felineherd/), or ELPA with the additional marmalade + melpa repositories [[1]](http://www.emacswiki.org/emacs/ELPA) [[2]](http://batsov.com/articles/2012/02/19/package-management-in-emacs-the-good-the-bad-and-the-ugly/) . Sounds like some are more mature (less buggy) than others. I've been using emacs for over 10 years so I just keep a separate emacs lisp file listing repositories/file locations which I call them with git, svn, cvs, or wget/curl, but I could use some input as to your customization (do you download packages to default directories specified the the package manager, or do you/can you customize that location?)	t5_2qhwu	True
1373573320.0	1i3rfs	Working files and directories in Emacs	rejeep	15	4	0		t5_2qhwu	False
1370747658.0	1fyo3c	True fullscreen Emacs in Windows 7	daat418	14	3	7	"I work on a Mac and quickly got used to several creature comforts  - one important one being true fullscreen windows.

After driving myself crazy trying to find a solution for my home desktop running Windows, I decided to make one myself piecing together a few different methods that didn't quite work on their own.

First of all, grab [AutoHotkey](http://www.autohotkey.com) and install it.

Then:
&gt;
&gt;1) Create an AutoHotkey file in your Startup folder
&gt;
&gt;   Start -&gt; Run -&gt; Notepad -&gt; RET
&gt;   
&gt;   Paste the following into it:
&gt;
&gt;       #F11::
&gt;       WinSet, Style, ^0x800000, A
&gt;       WinHide, A
&gt;       WinShow, A
&gt;       return   
&gt;   
&gt;   Save it to:
&gt;
&gt;   C:\Users\[YourUsermameHere]\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup
&gt;
&gt;2) Change some related settings in your Registry Editor
&gt;
&gt;   Start -&gt; Run -&gt; regedit -&gt; RET
&gt;
&gt;   Navigate to and change the following key values in HKEY_CURRENT_USER\Control Panel\Desktop\WindowMetrics:
&gt;
&gt;   BorderWidth ""0""
&gt;   PaddedBorderWidth ""0""
&gt;
&gt;3) Add a launch option to your Emacs shortcut
&gt;
&gt;   Right-click it -&gt; Add --internal-border=4
&gt;
&gt;4) Restart Windows
&gt;
The next time you start Emacs, maximize your screen and hit the hotkey for Fullscreen, Windows-Key + F11

Voila!"	t5_2qhwu	True
1367818052.0	1drzka	What happens to melpa(http://melpa.milkbox.net/)?	masterwujiang	14	1	3	Just find out I can't access the site, but its [twitter bot](http://melpa.milkbox.net/) is still publishing contents. What happens?	t5_2qhwu	True
1365191666.0	1br5xf	dired: making mouse clicks behave like a?	mcandre	13	3	3	How can I make mouse clicks behave like `a` in dired? That is, opening a file should not split the screen.	t5_2qhwu	True
1363169332.0	1a7hxc	How often do you use these commands?	sindikat	19	9	12	"How often do you use:

- `backward/forward-sentence`
- `kill-sentence` (do you have a need to kill a sentence with one stroke? line?)
- `backward/forward-sexp` and `backward/forward-list` (which one?)
- `beginning/end-of-defun`
- `shrink/enlarge-window[-horizontally]`
- `back-to-indentation` (comparing to `beginning-of-visual-line` and `beginning-of-line`)

I want to make my keybindings more practical, so i want to ask you, people: Do you use the commands below? how often do you use them? are they practical? how would you improve them or their usage?

For example: Does it make sense to turn on `*-defun/sexp` commands for `prog-mode` hook and `*-paragraph/sentence` for `text-mode` hook, and keep these commands at the same keys?

BTW: if you use [command frequency](https://github.com/dacap/keyfreq), you could easily judge, how often do you use a certain command."	t5_2qhwu	True
1362708927.0	19vwxx	Emacs crashing Mac OS X when quit with a shell running	mcandre	14	3	29	"I often code with two windows open, one for code, one for a shell. When I'm done editing a file, I press `C-x C-c` to quit Emacs. However, when I do this in Mac OS X, my computer crashes.

**Steps to Reproduce**

    M-x shell RET C-x C-c yes

**System**

    $ specs emacs brew bash os hardware
    Specs:
    
    specs 0.2
    https://github.com/mcandre/specs#readme
    
    emacs --version
    GNU Emacs 24.2.1
    Copyright (C) 2012 Free Software Foundation, Inc.
    GNU Emacs comes with ABSOLUTELY NO WARRANTY.
    You may redistribute copies of Emacs
    under the terms of the GNU General Public License.
    For more information about these matters, see the file named COPYING.
    
    brew --version
    0.9.4
    
    bash --version
    GNU bash, version 3.2.48(1)-release (x86_64-apple-darwin12)
    Copyright (C) 2007 Free Software Foundation, Inc.
    
    system_profiler SPSoftwareDataType | grep 'System Version'
          System Version: OS X 10.8.2 (12C60)
    
    system_profiler | grep 'Model Identifier'
          Model Identifier: MacBookPro5,5

**Mitigation**

Until this is resolved, I have to remember to safely quit the shell process before quitting Emacs.

    C-x b *shell*
    exit
    ""Process shell finished""
    C-x C-c"	t5_2qhwu	True
1360773432.0	18g9xv	trie.el: simple tries for emacs	hackscience	13	2	3		t5_2qhwu	False
1360007730.0	17vtpj	Turning Asynchronous into Synchronous in Emacs Lisp	skeeto	12	3	6		t5_2qhwu	False
1355648059.0	14xpc4	MView Image + EMMS Cover	sabof	14	2	5		t5_2qhwu	False
1354910997.0	14gljz	A Google+ Emacs community	master_elodin	18	9	15		t5_2qhwu	False
1351231367.0	12419b	Moving from escreen to workgroups	angelixd	17	6	6		t5_2qhwu	False
1350171027.0	11fplr	Open file/line with emacs directly from github pages.	rgrau	17	5	0		t5_2qhwu	False
1349401651.0	10yyen	How can I get colors in emacs when SSHing into my school?	mcr2	17	5	13	I use Terminal on my Mac to SSH into my school's instructional machines. I'd like syntax coloring, just like it appears locally. Is this something that must be supported by the computer I'm SSHing to, or a setting change I can make?	t5_2qhwu	True
1349259313.0	10v9oj	"Is there a mode that will allow me to type things ""around"" the currently selected text?"	hairlesscaveman	15	3	21	"I work in python a lot and various packages/modules have different ways they expose attributes; some allow you to access via dot notation (`foo.bar`) others require the dict notation (`foo['bar']`). I often find I'll run some code then need to wrap ""`bar`"" in brackets and quotes. Is there a mode that will allow me to select ""`bar`"" and type ""`[`"" then ""`'`"" to wrap it in ""`['']`""?"	t5_2qhwu	True
1349028308.0	10pw2m	gear up - getting started with Emacs	fistofsenn	14	5	5		t5_2qhwu	False
1348587185.0	10gc9u	Can I have multiple parts of buffers in one super buffer?	b00thead	13	1	16	If I'm editing some code, I'd like to be able to see all of the functions I'm working on in one buffer. These functions may come from one file or many, but I'd like to see them all together. Equally when I edit the definition in collection buffer, I'd like the code to be changed at source and vice-versa. This is a bit like light table in concept. Is there a mode like this anywhere?	t5_2qhwu	True
1346582433.0	z8505	Anything, Icicles, Predictive, Hippie Expand all seem related and partly overlapping.  How can I make the best use of them?	tmalsburg2	13	2	3	They are all concerned with helping you to efficiently select an element from a larger set (words, files, functions, you name it).  Icicles and Anything seem to focus on doing that in minibuffers, while Hippie Expand and Predictive focus on regular buffers.  Predictive and Hippie Expand seem to exclude each other.  What about Icicles and Anything?  I'm confused.  How do you use these packages?	t5_2qhwu	True
1345925532.0	ytizz	Bignums with EmacsLisp - how I do big arithmetic in the mongo-db driver.	nicferrier	14	3	3		t5_2qhwu	False
1344304419.0	xst81	Help me find a (faster) replacement for Ropemacs and Pymacs for my Python environment Please . 	Wonnk13	13	2	10	"Perhaps it's just me, but pymacs with Rope is painfully slow. Emacs 24.1 chokes for five seconds each time it tries to complete code, and even the most simple refactors (renaming a variable) take ten to fifteen seconds on a 2.7 quadcore macbook pro with 8gb ram. 

I already have a PyCharm license for work so i'm willing to trade off a full blown IDE setup for something lightweight that doesn't slow down the editor for my personal projects. Has anyone used Pysmell or another lightweight completion system or any insight to why Rope is so slow ? Thanks !"	t5_2qhwu	True
1341865464.0	wae6f	EmacsWiki: Emacs On Android	suhrob	20	9	9		t5_2qhwu	False
1338535508.0	ufbdw	"How to run emacs23 with python auto completion ?

"	lamaer	19	8	7	"rope-emacs, yasnippet..nothing works.
I tried several stuff on the net, with no success. It shouldn't be this
hard!"	t5_2qhwu	True
1338413287.0	ucqor	org-mode and exporting to html	jjasghar	14	1	4	"Question: Is it possible to get syntax highlighting on #+begin_src #+end_src blocks? 
I'm exporting, it looks fine a little blue with code looking text, but i'd really like to export something like [dokuwiki's syntax highlighting](http://qbnz.com/highlighter/).

Any ideas?"	t5_2qhwu	True
1335545318.0	svi78	pyregexp, a Python regexp/replace command with interactive visual feedback	benma2	14	4	4	"Find the package, screenshots and installation notes here: [https://github.com/benma/pyregexp](https://github.com/benma/pyregexp).

If you run into any issues, please let me know. Also, if you manage to install and run it successfully, I would love to hear some feedback."	t5_2qhwu	True
1334924007.0	sjiv5	Projectile - a simple project interaction library	master_elodin	12	0	0		t5_2qhwu	False
1331003180.0	qjkwf	Is there a way to make emacs switch to the *Buffer List* when it is opened?	titors-Grandpa	14	1	26	I always have to switch to it (C-x o) and then press 'q' to get my old window back.  I was wondering if emacs could automatically switch to it when it opens.  It would be nice if it that would happen with help too.  For example typing C-h m would make the *Help* window active.  Thanks.	t5_2qhwu	True
1327881212.0	p28q8	Need help with search and replace.		13	2	8	"I have a text file in which a certain expression in all caps is repeated a few hundred times. I need to delete that expression (along with it's line) **and** the line before.

How do I do this?

Thanks in advance.

**edit:** I have succeeded, no more help needed. Thank you."	t5_2qhwu	True
1326702071.0	oj39i	Touch typists of /r/emacs, how do you retain proper typing posture while performing emacs shortcuts?	meegee	14	3	43	"Hey guys. I've switched to Colemak layout cold turkey two weeks ago and it's been great so far. Learning a new layout gave me the opportunity to do it right so I've been practicing text book touch typing technique but sometimes I feel like my brain is rejecting Emacs. 


Colemak does not have any incompatibilities with Emacs per se. My main complaint is that my brain still forces me to do one hand gestures that are not comfortable when touch typing. 

A few questions;

1. Do you press all modifier keys with the opposite hand? I already made caps lock another ctrl years ago but I still find myself doing spider like uncomfortable gestures with one hand. Do you have any other tips to prevent that (other than foot pedals)?

2.  Do you use sticky keys even though they don't have RSI? I tried it a little bit and seemed to be a better solution compared to use opposite hand to press ctrl, alt or shift when doing key combos (but that may as well be because I'm just not accustomed to doing that yet).

3. Experts suggest that textbook typing like how the old lady in the courtroom does instead of improvising as most programmers (including myself) do is much less tiring and a good way to prevent RSI. Do you use proper typing technique most of the time even though you use modifier keys a lot more than average typist?"	t5_2qhwu	True
1325981754.0	o7bd8	Automatically Run Tests on Changed Files	sambakza	15	5	16	"Hey guys,

I wrote a little bit of elisp that allows you to run an arbitrary shell command when a buffer is changed(saved). Check it out, and let me know what you think!
Linky:
https://github.com/mjsteger/watch-buffer"	t5_2qhwu	True
1314719504.0	jz5c7	How can I have the mode automatically chosen for temporary buffers?	sping	13	1	16	"I remember seeing a solution somewhere, but my google-fu is failing me...  

If I open a temporary buffer, how can I have its mode set based on the buffer name, as if I were opening a file.  E.g. If I open a temp buffer called foo.txt I want to have it use text-mode.

I'm not sure what to hook on to or how.

TIA!

----

Edit: 

Looks like a winner is:

    (setq major-mode (lambda ()
         (let ((buffer-file-name (or buffer-file-name (buffer-name))))
              (set-auto-mode))))

Thanks to [eclig](http://www.reddit.com/r/emacs/comments/jz5c7/how_can_i_have_the_mode_automatically_chosen_for/c2ggrpi) and [\_\_jim\_\_](http://www.reddit.com/r/emacs/comments/d2t4q/scratch_buffers_for_emacs/c0x7a68).  (Looks like `default-major-mode` is deprecated in favor or `major-mode`.)
"	t5_2qhwu	True
1312530801.0	j9oga	"Full text searching in Info mode with Apropos | 
Mastering Emacs"	mickeyp	13	2	0		t5_2qhwu	False
1311143761.0	iulp9	Repeating Commands in Emacs	gst	16	5	0		t5_2qhwu	False
1310993277.0	isrq9	Magit for Hg	ananthakumaran	13	3	6		t5_2qhwu	False
1310319965.0	ilpl3	Useful application of recursive editing.  Does anyone have any more?		12	1	2		t5_2qhwu	False
1309620511.0	if0xl	Automatically byte compile your Emacs configuration file	gst	16	3	1		t5_2qhwu	False
1306368988.0	hk8dj	A screencast on implementing monadic parser combinators in Elisp!	commonslip	14	3	1		t5_2qhwu	False
1305828351.0	hf7tk	Some reasons you should use Dired+ instead of the default Dired mode in Emacs.	philiph	20	8	3		t5_2qhwu	False
1305345961.0	hb1wm	In Praise Of Bubbles — Emacspeak 34.0 Unleashed!	gst	17	5	0		t5_2qhwu	False
1304124527.0	h0jq0	How do I edit a remote file with sudo and tramp in emacs?	coned88	12	2	17	"I have been trying to edit remote files via /ssh and /sudo and it doesn't seem to be working on version 23.2.1.

I start by doing the ssh connection

&gt; /ssh:user@xxx.xxx.xxx.xxx:

It connects.

I then try to do

/sudo::remote_file

and it either errors or prompts me for my local machine.


I have tried adding variations of this to my .emacs but it doesn't do anything

  &gt; add-to-list 'tramp-default-proxies-alist '("".*"" ""\`root\'"" ""/ssh:%h:""))

I have also tried setting an alias for current connection but that also does not work.


I would just like to edit files remotely with sudo access.  Hopefully you can help."	t5_2qhwu	True
1303622109.0	gw5hs	Lexical-let Corner Case	gst	14	4	0		t5_2qhwu	False
1302987352.0	grnur	"Part two of my ""Deep Emacs Lisp"" tutorial series.  I implement streams (lazy lists) along with a monad for constructing them.  Good if you've ever wanted an infinite list of Fibonacci Numbers."	commonslip	13	2	3		t5_2qhwu	False
1298790124.0	ftl5r	Dissociate C-i, C-m, and C-[ in emacs	gst	15	4	0		t5_2qhwu	False
1298453582.0	fqxsf	10 Specific Ways to Improve Your Productivity With Emacs	semente	29	18	10		t5_2qhwu	False
1297806677.0	fm3ql	Creating modes and minor modes	rberenguel	16	4	13	"I'd like some tips on creating a new (minor) mode. Specifically I want a little syntax highlighting (not fundamental, I've already found links for this part) and minor-mode bounded keyboard commands (related to a few functions I'm using interactively so far).

I know this is quite a newbie-ish question, but I never got around to learning it, and the few times I've tried to do so didn't get anywhere. Any tips will be welcome, as simple as they may be.

Thanks!

Edited: Thanks for all the answers so far! I've managed to write a draft of the mode I wanted, now I'll add some syntax highlighting and will call it a day. I've settled with a major mode, for adding markup (specific formatting, lists of related posts) quickly to posts I draft as plain text for my blog. "	t5_2qhwu	True
1297081122.0	fgtex	Auto-complete python library function names without rope?	memechaser	11	0	2	"I want to have Emacs auto-complete my python buffers, in much the way that ipython does.

I have auto-complete setup (default settings), but there are no python sources to complete from.

I've tried using rope/ropemacs/pymacs, but it's staggeringly slow. It takes a good 10 seconds to load a python file.

I also don't care about all the refactoring stuff that rope offers, I really just want auto-completion of library names and functions.

Is there any way to do this?"	t5_2qhwu	True
1296160783.0	fa9fp	"Find files faster with the recent files package | 
Mastering Emacs"	mickeyp	12	1	0		t5_2qhwu	False
1295970175.0	f8qd0	Blogging with emacs, org-mode and wordpress 	gst	15	5	5		t5_2qhwu	False
1295427352.0	f508c	In Search of Fullscreen Cocoa Emacs 24	Derander	13	2	13	"I have been looking for ages for a build of cocoa emacs.app 24 (heck, I'd take 23) that doesn't break magit and that does support fullscreen. 

I have tried innumerable ""patch the source!"" tutorials, but they all seem to be so out of date that the patches apply horrifically uncleanly and I am not familiar enough with emacs C source to spelunk myself.

I'm sure I'm not the only one.

Does anyone have a binary or solid instructions to share?"	t5_2qhwu	True
1294927500.0	f1js2	New version of python-mode released 	jrh0090	14	5	12		t5_2qhwu	False
1293997904.0	ev1mq	"Using zsh (the ""emacs style"" shell)"	rberenguel	22	9	11		t5_2qhwu	False
1289373784.0	e3x2p	Revert-all-buffers	gst	21	8	7		t5_2qhwu	False
1288939125.0	e1l5l	Emacs Lisp Power: Text-Soup Automation	gst	17	6	0		t5_2qhwu	False
1287616822.0	du3ir	"Which ""finger binding"" do you use?"	iceman-k	18	7	68	"You're pressing C-x. Which finger is on CTRL (and which CTRL?), and which finger is on x?

What about for M-x?

Edit: Thanks to everyone who has answered so far. Several answers for M-x just say that you're using your thumb on Alt. Which thumb?

Further edit: For people who use left pinky on CapsLock, do you ever use the right Ctrl key?"	t5_2qhwu	True
1285686835.0	dk0x3	Keep track of whitespaces and column 80 overflow	the-fritz	11	0	1		t5_2qhwu	False
1285419271.0	diqan	Gnus and Gravatar support	the-fritz	13	1	2		t5_2qhwu	False
1282852976.0	d5up6	What do you use M-n and M-p for?	karthink	13	1	11	Except for comint (REPLs), the minibuffer and a couple other modes, M-n and M-p are unbound in all major-modes (code, text editing). These are readily accessible keys, occupying prime positions in Emacs' busy keymap. What do you use them for?	t5_2qhwu	True
1281605702.0	d0aku	distel -- Distributed Emacs Lisp for Erlang.	woof404	14	1	1		t5_2qhwu	False
1280114895.0	ctnrx	Is there a way to list all bound keys?	ccondon	11	0	17	"So, I use emacs regularly for coding, though I don't use as many of the features as I should. 

I set several keybindings in my .emacs, and I always have trouble picking keystrokes for things. Specifically, I always pick something, and then realize that it's already bound to something useful.

Is there a command (or some lisp code) that will enumerate all of the bound keystrokes, and what function they call? I know C-h k will describe a single key to me, but I'm not aware of a way to simply list them all.

EDIT:: ah, C-h b. sheesh, I should have known that :p

There's also apparently this:
http://www.gnu.org/s/emacs/manual/html_node/elisp/Key-Binding-Conventions.html#Key-Binding-Conventions

So only C-c &lt;letter&gt; are reserved and guaranteed not to be bound."	t5_2qhwu	True
1279781151.0	csd0b	emacs-fu: navigating through files and buffers with the lusty explorer	gst	16	6	1		t5_2qhwu	False
1279208354.0	cpx74	Using many Distributed Version Control systems from Emacs?  Which package(s)?	sping	12	0	21	"Hi All,

I have to work with at least Git and Bazaar on a regular basis.  I'd quite like to have Emacs show me a common interface.

I'm trying the [DVC](http://www.emacswiki.org/emacs/DistributedVersionControl) package, and it's useful, but it seems a little flakey and half-baked to me.

Edit: I obviously wasn't clear enough - I'm interested in solutions which work for *both* git and bazaar.  As such, DVC looks good, but seems to be incomplete.  I'm wondering if people have any input on unified environments.
"	t5_2qhwu	True
1274187230.0	c5iwz	Using org to blog with jekyll	ephcon	12	1	1		t5_2qhwu	False
1273179643.0	c0rgy	Emacs: the Free Software IDE | Linux Journal	_mayo	20	9	0		t5_2qhwu	False
1270718212.0	bo24p	Finding interesting emacs things	rberenguel	18	8	13	"Hi, and welcome to my first self.post. I have been using emacs for 4 years, but only the last one-and-a-half as a somewhat more deeper user than just yanking, killing and some mild emacs/elisp stuff. I found great tips, pointers and useful things on the emacswiki, but I have a problem with that.

There are a lot of pages, and I have read a lot of them, sure, but some of them really don't get the point through, and I am left wondering: *will I use this package ever?* (one such example would be icycles, I'm still wondering what use would I give it!)

I mean, if you *know* that dynamic abbreviations exist (or automatic text writing), you go to the wiki, search for it and learn a lot about this (which I like a lot as my previous link to my blog already pointed out). But what happens when you don't know you have a problem? (I know, this is a bad example as the emacs help/tutorial already covers automatic text, but it was the first that popped to my mind.)

It is like the ""blub"" paradox Paul Graham talks in I-don't-remember-which article: if you think in *blub*, you can't really think about other programming paradigms.

How do you find *that* package that solves that problem that you didn't realize you had? This should be something like a collection of tricks, but more read-ready than emacsniftytricks in the wiki. 

Sorry if some spelling/grammar error slipped through, I'm having quite a headache and I don't feel really articulate today :/"	t5_2qhwu	True
1270395758.0	bmb8p	emacs-fu: the zenburn color theme	gst	14	4	7		t5_2qhwu	False
1267939343.0	ba7wd	Ask Emacs: Visual column marker?	kylev	15	3	3	"I'd like to be able to resize my Emacs window and still know where the 80th column is (as desired by my group's coding standards).  Can any of you emacs pros provide me with .emacs directive(s) that will put some sort of visual marker that will tell me where column 80 is in a buffer no matter how I resize the window?

I'm looking for something similar to what you see in [this jEdit screen shot](http://www.jedit.org/index.php?page=screenshot&amp;image=35).  It's one of my favorite features about that editor when I have had to use it."	t5_2qhwu	True
1261786559.0	aik2l	Emacs Timeline	killinit	16	4	1		t5_2qhwu	False
1252788452.0	9jxv8	Ask emacs users: did you ever reach a point where you were satisfied with your knowledge and customization of emacs (and emacs lisp to the extent to which it was useful for editor customization)?	revocation	19	6	16	I am drunk with the power of having learned a few tricks (using registers, rectangles, align functions) and having made a few successful customizations to minor modes that I frequently use. It's a beautiful addiction but I wonder at which point other users felt they could stop reading up on emacs and get back to their *real* work... ;)	t5_2qhwu	True
1247925449.0	92dhw	YASnippet - Snippets for Emacs	Aseraphim	15	4	6		t5_2qhwu	False
1242931844.0	8m8ze	I was editing code on a cluster which didn't have git or svn installed, spent hours fixing regressions. Then someone told me about RCS.	f4hy	17	7	9		t5_2qhwu	False
1242840978.0	8lxnp	couchdb emacs client	MostUsually	16	3	0		t5_2qhwu	False
1241671141.0	8iibd	"YASnippet ""allows you to type a abbrevation and automatically expand the abbreviation into function templates."""	speciousfool	17	5	1		t5_2qhwu	False
1240249061.0	8dyix	"Book: ""The Craft of Text Editing -or-  Emacs for the Modern World"""	leonardoe	14	3	1		t5_2qhwu	False
1235633884.0	80egr	autocomplete.el and python code completion	schaueho	15	3	1		t5_2qhwu	False
1235588464.0	8095z	Ask reddit.emacs: How to start persistent windowless emacs server on Windows startup?	srt19170	14	2	10		t5_2qhwu	True
1235036803.0	7ylhc	emacs-fu: transparent emacs	gst	15	5	10		t5_2qhwu	False
1234226706.0	7w4zc	What is this mythical Emacs Aptitude Test?	aintso	15	5	8		t5_2qhwu	True
1234010120.0	7vlhu	Speedy and efficient email use with Gnus and Emacs		15	3	1		t5_2qhwu	False
1233219067.0	7taed	An Emacs Minor Mode	gst	14	3	0		t5_2qhwu	False
1232216365.0	7qh3w	emacs-fu: balancing your parentheses	gst	17	6	1		t5_2qhwu	False
1231370124.0	7o4qr	ELisp best practices?	gst	14	1	1		t5_2qhwu	False
1375810436.0	1jtnze	Carton goes Cask	rejeep	14	3	0		t5_2qhwu	False
1373985286.0	1iey5x	random emacs wiki page. ( http://www.emacswiki.org/emacs/?action=random )	z3rocool	19	9	3		t5_2qhwu	False
1371309751.0	1gehzh	The Garden v 2.0: A Parable Inspired by the Church of Emacs [comic]	shizzy0	17	8	3		t5_2qhwu	False
1370656750.0	1fwj93	I wanted to know which color themes have colors for whitespace mode. 4 hours later, I got this:	zoidberghoneydew	11	3	3	"(defun file-contains (f s)

  (with-temp-buffer

    (insert-file f)

    (goto-char (point-min))

    (search-forward s nil t)))

(defun themes-with-face1 (theface)

  (let ((theme-file-list 

         (remove-if-not 

          (lambda (x) x) 

          (mapcar (lambda (x) 

                    (locate-file (concat (symbol-name x) ""-theme.el"") 

                                 custom-theme-load-path )) 

                  (custom-available-themes))) 

                       ))

    (remove-if-not 

     (lambda (f) 

       (file-contains f (symbol-name theface))) theme-file-list)))


(defun themes-with-face (theface) 

     (interactive (list (read-face-name ""Face to search for"" nil nil)))

     (message (format ""%s"" (themes-with-face1 theface)))

     )

;; along the way, I learned a ton about emacs symbols, how to search 

;; nested s expressions recursively, how (a . b) does not work with mapcar

;; even though listp says its a list, and how you can, and this is something

;; too wonderful to believe but makes complete sense once you think

;; of it, call (read) on a buffer to read s-expressions out of it


EDIT: *growl* the original code only worked if the theme had been loaded. Updated code to use ugly hack of grepping the lisp file"	t5_2qhwu	True
1370363647.0	1fnrif	Questions about multiple modes (HTML/JS/CSS/Python) with custom template and file/buffer finding.	raugturi	11	3	16	"I've been a vim user for a couple of years now and decided to try out emacs.  I'm not installing evil because I want to actually try emacs, not vim in emacs.  However, there are a few things I'd like to get working as they were in vim (or better!) to keep me from losing productivity right off the bat.  The first is something I have to get working to be able to use it for work.  The second would just be really nice to have.

So, my first issue is that where I work we use a custom template style and I need to have emacs use multiple modes for it.  Ideally I'd like it to treat everything inside &lt;script&gt; tags as JavaScript, everything in &lt;style&gt; tags as CSS, everything between '&lt;?' and '?&gt;' (our custom tag) as Python, and everything else as HTML.  I'd settle for just figuring out the Python vs HTML parts because I try to keep JS and CSS in their own files as much as possible anyway.  Here's what I've tried so far:

1. [Multiple Major Modes](https://github.com/purcell/mmm-mode): I put the following into my init.el:

        (require 'mmm-auto)
        (setq mmm-global-mode 'maybe)
        (mmm-add-mode-ext-class 'html-mode ""\\.pml\\'"" 'python)

    But it isn't working.  I think it sees this as just really long HTML tags:

        &lt;?
            python code here
        ?&gt;
    
2. [web-mode.el](http://web-mode.org/): I put this in my init.el:

        (require 'web-mode)
        (add-to-list 'auto-mode-alist '(""\\.pml\\'"" . web-mode))

    And again in this case it seems like it thinks everything is HTML.  I don't know how to tell it to treat &lt;? ... ?&gt; as Python either.

So before I go through trying to figure out which one to read up on and learn how to extend with extra tags, is there a preferred mode package for handling this situation?  I also looked at nxhtml but it's not in the ELPA repos, so I skipped it for now.  Most of the stuff I found is obviously for dealing with popular templates, not for custom ones.

The second issue is that I really want this: [ctrlp.vim](https://github.com/kien/ctrlp.vim).  Specifically I want the fuzzy file finding part.  When I bring up the minibuffer from within a project or repository I want a way for it to show me all the files in that repo that match what I've typed so far, no matter how far nested they are.  I looked at Ido and Icicles, but both seemed pretty complicated so before I start learning one does anyone know which one will get me closest to Ctrl-P?

Update:  I found a way that's got me a lot closer for issue 1 using Multiple Major Modes like this:

    (require 'mmm-auto)
    (setq mmm-global-mode 'maybe)
    
    (mmm-add-group 'html-python
     '((html-python-output
        :submode python-mode
        :face mmm-output-submode-face
        :front ""&lt;\\?""
        :back ""\\?&gt;""
        )
       (html-python-code
        :submode python-mode
        :face mmm-code-submode-face
        :front ""&lt;\\?""
        :back ""\\?&gt;""
        )))
    (mmm-add-mode-ext-class 'html-mode ""\\.pml\\'"" 'html-python)
    (add-to-list 'auto-mode-alist
                 '(""\\.pml\\'"" . html-mode))

I'll have to tweak it to get exactly what I want (it changes the background color to some ugly brown and I don't think it's correctly doing HTML outside the Python tags), but it does recognize it as python and switch to that mode at least.  Just thought I'd put it here in case anyone else has the same question."	t5_2qhwu	True
1369478798.0	1f0vyt	go-lang programming in Emacs	nicferrier	13	4	8	"Go-lang is good in that it pre-defines this stuff and has tool support for it (http://golang.org/doc/code.html#PackagePaths).

But Go-lang is bad in that it doesn't define a project space for Emacs (how can I find the root of the project? automaticaly install my code, etc...)

As we all know (https://lists.gnu.org/archive/html/emacs-devel/2013-04/msg00213.html) project spaces in Emacs are a bit of a pain. 

I wonder what the best solution to that would be.

Does anyone have any tips on this or any other aspect of Go-lang with Emacs?"	t5_2qhwu	True
1369444949.0	1f098r	fullscreen-mode	ryantm	16	6	6		t5_2qhwu	False
1368011595.0	1dxbsi	An Apropriate Summary of What a Programmer Is	MoreHugs	19	8	4	"This is perhaps the most succinct description of what a programmer is in practice, or at least a significant characteristic, and it is from the Third Edition of [An Introduction to Programming in Emacs Lisp](https://www.gnu.org/software/emacs/emacs-lisp-intro/):

&gt;This text is written as an elementary introduction for people who are not program-
mers. If you are a programmer, you may not be satisfied with this primer. **The
reason is that you may have become expert at reading reference manuals** and be
put off by the way this text is organized.

Programming or STEM in general is great, but the amount of reference material consumed along the way is without end, especially if reading journals is part of the regimen.  A thousand pages here, another thousand pages there, and pretty soon a rain forest of documentation has been consumed and in the pursuit of competence in the area of interest the individual has also become an expert at reading dense tomes of esoteric knowledge, in a long tradition of reference manual experts.  The [Twelve Labours of Heracles](http://en.wikipedia.org/wiki/Labours_of_Hercules) are less daunting in retrospect than the amount of domain knowledge acquired along the way in programming related contexts."	t5_2qhwu	True
1367681887.0	1dojp2	Compiling Emacs using gcc from Strawberry Perl	bigfig	16	4	0		t5_2qhwu	False
1366887531.0	1d2qiv	how to make an emacs configuration that based on package.el	yilmazhuseyin	13	2	15	"Hi everybody,
My emacs configuration is this. https://github.com/huseyinyilmaz/emacs-config

in this setup I keep my dependencies as git submodules. In other words, they are not in my configuration. When I download my configuration I initialize submodules. so git downloads them as separate repositories. This works fairly good for me.

But recently, I read this blogpost http://caisah.info/emacs-for-python/
and decided to rewrite my configuration. This time I want to it to based on package.el and/or el-get (https://github.com/dimitri/el-get )

Here is what I want. When I start emacs first time. It should download all dependencies etc. I do not want to keep dependencies on my repository.

Having a kind of install script would also work. For example I would call (init-system) to download everything.
Worst case
I would call
make install to install.
Does anybody have a similar setup. or show me the right direction?
Any help would be appreciated. "	t5_2qhwu	True
1364754250.0	1bdbbw	Essential Elisp Libraries	DarthToaster	20	8	17		t5_2qhwu	False
1364585328.0	1b9cpl	How to detect that Emacs is running in Command Prompt, with -nw flags?	mcandre	12	2	7	"I'd like to fix my background color for monokai when Emacs is run inside a Command Prompt window (it's showing a green background).

How could Emacs detect this environment?

How could Emacs set the background color to a dark gray that cmd.exe recognizes?"	t5_2qhwu	True
1363137923.0	1a6qqw	Using GNU Global - A replacement for ETags	dekuked	12	1	15		t5_2qhwu	False
1363065333.0	1a4roc	A small note about designing themes for Emacs 24	instant_sunshine	10	0	4	"If you're making themes for Emacs 24, it can often escape you that your target audience may well be using a terminal, or just a display which doesn't support as many colors, it's at this point your theme will blast them with a hideous background color (probably, if you have a nice subtle off black, it'll turn to a bright blue, or purple or whatnot.)

Well, it's been that way for me, and I didn't know how to get around it, partly due to [cargo-culting](http://en.wikipedia.org/wiki/Cargo_cult_programming) my color definitions.  However, I always see the same thing in many other themes, so I assume this just gets done the same way by a lot of other theme makers.

It doesn't help that googling or emacs help for min-colors doesn't come up with much useful.

Anyway, deep in the bowels of `custom.el` there's a macro called `defface` and that's where `(class color|greyscale|mono)` and `(min-colors  n)` are documented, (`C-h f defface` for the docs page)

This is how I figured out how to handle edge cases like a terminal running in xterm-256colors. 

## Usage Examples:

For your full 24bit display theme face settings use:

    (((class color) (min-colors 16777216)) (... define your face attributes ))

If you think a 16 bit display is likely (? I sort of doubt that but, ok.)

    (((class color) (min-colors 65535)) (... define your face attributes ))

for xterm-256color

    (((class color) (min-colors 256)) (... define your face attributes ))

I'm not sure where or what brought about the 88 colors boilerplate that seems to roll around, 16 colors is more likely after 256 colors (but please correct me if I'm wrong.)

    (((class color) (min-colors 16)) (... define your face attributes ))

And ...

    (((class color) (min-colors 8)) (... define your face attributes ))

Then we can get to greyscale...

    (((class greyscale)) (... define your face attributes ))

...and finally mono

    (((class mono)) (... define your face attributes ))

And there you go, the full range of display's covered.

If you have a special case that I haven't covered, you can get the number of colors available for a display mode by executing: `(display-color-cells)`

Hope this helps someone out, I should probably blog this ;) - grab my themes on marmalade/elpa ( and shameless plug  http://emacsfodder.github.com ) 

I'm still in the process of updating my themes to handle all these display contingencies, so please don't hit me when you get nasty colors in the terminal. (at least this week, you can hit me next week)"	t5_2qhwu	True
1362959155.0	1a1t39	How do i get dirtree to show ASCII, like in this screenshot, instead of icons ?	mpetar92	11	1	4		t5_2qhwu	False
1362784970.0	19xwk3	"Is there a ""groups mode"" for buffers mode for Emacs?"	gnuvince	14	4	14	"I was wondering if there was a mode that I could use to group some buffers under a common group, with commands to manage groups.  For example, one could go `M-x create-group RET group1 RET` to create (and switch to) group1.  Opening buffers while this group is active would add the buffers to that group.  If later I do `M-x create-group RET group2 RET`, I'd get a new group with no buffers under it.

Is there something like that available?"	t5_2qhwu	True
1362040650.0	19dyic	Any mu4e users?	monotux	15	6	17	"I've used mu4e for my private email account for a few weeks now, using it together with offlineimap, both on my imac and my netbook. It works great, although I'm still learning the finer details.

Anyways, I'm simply curious on how you use mu4e, what your experiences are and how you've setup your mu4e.

Please share your thoughts!

[This is my current (very basic) setup.](https://gist.github.com/anonymous/5055224)"	t5_2qhwu	True
1361559686.0	191asv	Web browser-style tabs in Emacs?	mcandre	15	4	14	I'd prefer to use Web browser-style tabs, pressing `C-TAB` and `C-Shift-TAB` to navigate left and right. Which packages would you recommend for this?	t5_2qhwu	True
1361173695.0	18qodi	svg-mode-line-themes	sabof	15	3	11		t5_2qhwu	False
1359176738.0	17avbs	The Church of Emacs	johdu	23	14	2		t5_2qhwu	False
1358840095.0	171me2	Auto save and restore sessions	jumpcannon	11	3	13	"You know how Chromium and Firefox offer to re-open all of your tabs from last time when you open them?  I want my Emacs to do that too.

Looking around on the internet it seems that there are a few solutions for this problem already.  The built-in `M-x recover-session` is okay, but it only works if Emacs crashed (sort of ironically?).  A lot of the time I close Emacs because I'm rebooting my laptop or whatever, and I want to be able to just open up the same session again after the reboot without thinking about it.

I've also seen DeskTop, which looks like a more comprehensive solution, but all the references to it seem to be from a few years ago. Has it been deprecated or superseeded by something else?

What do you use for session management in Emacs?"	t5_2qhwu	True
1356501315.0	15gexw	Java for emacs help?	PrawDuhJee	13	3	17	"Hey guys, I'm really new to emacs, but I've seen some amazing things that can be done with it. I'm a freshman CompSci major and for the first couple classes we mainly program in Java. The main thing I really wanted to get out of emacs was a nice Java IDE with a built in compiler and the option to change the color scheme to something more easy on the eyes. 

I've found a site that hosts the JDEE (Java Development Environment for Emacs) http://jdee.sourceforge.net

My only problem is the instructions are quite confusing to me. I've gotten as far as downloading the JDEE as a zip file, but from then on I have no idea what to do. Could any kind Redditors help me out and simplify the instructions step by step on what I need to do to install this Java IDE onto emacs? I'm running Mac OSX btw and have the standard emacs application installed. I'd be most appreciative for any help. "	t5_2qhwu	True
1350913292.0	11w7t0	Can I replace my terminal emulator with Emacs's GUI mode?	NegatedVoid	11	1	21	"I've been trying to get my terminal set up right and failing at colors. I can't get them to look right I'm both konsole and urxvt in 256 color mode, with and without ssh, with and without screen, etc. The whole system is a mess.

 I was wondering how feasible it'd be to just use Emacs's GUI for it all? There's a few shell modes. Has anyone tried this? Any tips?

 Is there something similar to screen for the GUI? So I could connect to a PC remotely and access it's active Emacs session or have my work survive an X death?"	t5_2qhwu	True
1349541329.0	111ovm	Emacs tidbits for Ruby developers	fistofsenn	14	5	1		t5_2qhwu	False
1349160952.0	10t0t4	help me with the mental mapping vim -&gt; emacs	CharlesStain	13	1	26	"Hi guys,

I decided to give Emacs another shot (I've been an Emacs user for a long time, although I've been using it like a ""desktop"" user). I'm an happy Vimer, but changing is good so I don't see why I can't master both :)

The problem is that, obviously I'm overwhelmed, and I'm trying to map features I love in Vim to Emacs. I've downloaded the excellent Prelude and I'm trying to figure out how to accomplish things I usually do in Vim:

* *Navigating*: I know I'm an heretic, but I can't put up with the Emacs standard navigation. I mean, for me &lt;C-n&gt; and &lt;C-p&gt; is a great deal more cumbersome that my lovely *jk*, so I'm using Evil just for navigation. Is that ""tolerable"" or is advisable to stick to the Emacs way? Why? Rationale would be appreciated!

* *Fuzzy searching*: Vim has the excellent _Ctrl-p_, Prelude comes with Helm that seems powerful but I can't understand how to use it. What I really want: fire up Emacs inside a dir, use fuzzy matching to find any file I want, even nested, in any child of the root dir, without specifying where to search

* *Acking* : Vim uses _vim-ack_ to do pretty much what _ack-and-a-half_ should do, but again, I can't figure out how to do it. I want to be able to search for a word under the cursors recursively in the root dir where I started Emacs and its child, as well as ""free search"", simply inserting a word or a pattern inside a prompt.

* *Code cleaness*:  this is quite an extra. I find whitespace mode of Prelude handy but visually cluttering. I also heard to the nerdvines that Emacs sometimes adds unwanted Control-M at the end of each line (that Vim promptly spot). Is it true? How to avoid them and write ""pristine"" code?

Thanks for your help, I'm looking forward to reading tons of tips from Emacs gurus :)

A."	t5_2qhwu	True
1348489127.0	10e0fg	Editor Magic: emacs, vim, acme and the return key	rberenguel	15	5	7		t5_2qhwu	False
1348096525.0	105v4f	very fresh emacslisp IRC bouncer	nicferrier	18	7	8		t5_2qhwu	False
1347542924.0	ztk1j	pyregexp 0.2 released, now with pyregexp-query-replace and incremental search	benma2	17	6	2	"pyregexp is a regexp/replace command with interactive visual feedback, using Python's regular expressions (which are very similar to those found in Perl).

Based on GitHub user shabble's idea, pyregexp can now also be used to do incremental search (just like built-in isearch-forward-regexp/isearch-backward-regexp) and to search/replace with a y/n/! decision on each match, just like builtin query-replace-regexp.

Installation notes can be found over at GitHub: [https://github.com/benma/pyregexp](https://github.com/benma/pyregexp).
"	t5_2qhwu	True
1346396522.0	z4hvz	Cabbage - get the maximum out of emacs	zastav	13	2	4		t5_2qhwu	False
1346247696.0	z0p1t	"Color of ""empty space"" broken after update 24.2"	mikerackhabit	14	4	6	"After updating to 24.2.1 the color of my emacs buffers where there's ""nothing"" is all wrong, making it totally unusable.

Screenshot [here](http://i.imgur.com/rJjB1.png)

I'm using the zen-and-art theme version 1.0.1 from elpa, but it's not a theme problem, as this happens no matter what theme I load, or even if I load no theme at all.

Any help much appreciated as I'm suddenly unable to work..."	t5_2qhwu	True
1344947629.0	y76sl	Proper way of overriding mode keys?	aerique	12	3	8	"Is there a proper way to override keys for a mode?  Modes can override global key bindings so when I have done:

    (global-set-key (kbd ""C-p"") 'my-do-p)

A minor mode could set C-p to do 'minor-mode-do-p.

Currently, over the years, my emacs config has accumulated several ways to correct this behaviour and set my preferred bindings:

    (when (keymapp cua-global-keymap)
      (define-key cua-global-keymap (kbd ""C-S-SPC"") nil)
      (define-key cua--region-keymap (kbd ""C-S-SPC"") 'cua-clear-rectangle-mark)
      ...

    (add-hook 'gnus-summary-mode-hook
              (lambda ()
                (local-set-key (kbd ""g"") 'gnus-group-get-new-news-this-group)
                (local-unset-key '[M-down])
                ...

    (add-hook 'ido-setup-hook
      (lambda ()
        (define-key ido-file-dir-completion-map (kbd ""&lt;up&gt;"") 'ido-prev-work-directory)
        ...

Is there one way to do it or does it depend on the mode as well?

Please, no comments on the specific key bindings: they're just examples and I'm in the process of changing them."	t5_2qhwu	True
1343402944.0	x91am	Search and replace across files *without* a regexp	snf	12	2	6	So I'm familiar with dired-do-query-replace-regexp, but sometimes I want to search and replace a literal string with a bunch of characters that would require tedious escaping to make it into an equivalent regexp.  I can't seem to find a function for that... anyone know if one exists?	t5_2qhwu	True
1337975404.0	u4y0t	zf-mode has been renamed to php+! (Major changes!)	echosa	14	5	16	"My mode for editing php has just undergone a major change. It is no longer called zf-mode. It is now call php+-mode (echosa/phpplus-mode on github). 

If you use this mode, please update your installs! If you installed via MELPA, I have submitted a new recipe for php+-mode. Once the pull request is done, you'll be able to grab it from MELPA again.

If you don't use this mode, please give it a try and give me feedback and bug reports on github. Better yet, fork, fix, and send a pull request! :-)

Also, in foreshadowing news, there are some exciting changes to parts of php+-mode coming in the near(-ish?) future (read: I'm working on them, and will release when ready). I won't say too much, but I will say this: snippets are completely changing the game. Using php+-mode will be faster and much, much more fun.

So, pass the word to any zf-mode users: zf-mode no longer exists! Viva php+-mode!

Edit: I was reminded that not everyone knows what php+-mode is! Shocking, I know! (Actually, not shocking at all.) So, here's a copy/paste of the run down on php+-mode from the comments below, where someone asked for more info:

Essentially, this is a better (IMO) php-mode for programming PHP in emacs. It was a parsing engine that allows for things like inserting, editing, and deleting methods with single commands; better, smarter, and somewhat customizable line breaking, support for creating and editing phpdoc blocks, support for running commands such as phpunit, phpcs, and phpmd and getting the results in the compilation buffer (don't have to drop to terminal to test), fast navigation (jump between methods, etc), TAGS file creation, project management (via directories and such), and a lot more features. The first thing I'd do it open php+-mode.el and look at the keybindings. That'll give you a good idea what's going on from the user side (there's a *lot* that happens on the back end).

Edit 2: I made a teaser trailer of some new functionality that's not yet in php+-mode, but is in development. You can view it [here on YouTube](http://www.youtube.com/watch?v=OZVJCcOylRE)."	t5_2qhwu	True
1333838211.0	ryfzu	bdo — Tell the browser to update stylesheets from Emacs	chrisdoner	10	0	3		t5_2qhwu	False
1331580241.0	qtb47	My initial scratch buffer contents.	meatgrinder	16	7	3	"""ಠ_ಠ

""

Keeps me company all day..."	t5_2qhwu	True
1330960757.0	qimgg	Use a color-theme with the technomancy emacs-starter-kit	Rotlaus	11	1	7	"New to emacs here. I installed emacs 24 on Ubuntu and then the [starter-kit as described here](http://technomancy.us/153). Then i installed the color-theme and color-theme-monokai packages with the integrated package-manager. Neither putting 

    (require 'color-theme)
    (color-theme-monokai)

in the ~/.emacs or the ~/.emacs.d/init.el doesn't activate the color theme at startup of emacs. Open the .emacs file in emacs and do M-x eval-buffer activates the color them as intended. How can i get this to work on the startup of emacs? What am i doing wrong?"	t5_2qhwu	True
1329985799.0	q2a28	How do you navigate large source files?	tmalsburg2	13	4	24	"I switched to Emacs about a year ago and so far used it mostly for writing articles.  Now, I get back to programming and realize that I don't have efficient strategies for navigating code.  When I want to edit a class, I usually search its name but this doesn't necessarily bring me directly to the definition of the class but to places where it's used.

I have a good idea of the spatial arrangement of classes and methods in a file but somehow I don't know how to make use of that knowledge.  For me, a perfect solution would be to have a kind of bird's eye view of the file where only the first line of a class or method definition is shown.  Here is an example illustrating what I have in mind for Python:

    class Meter(Canvas):
        def __init__(self, **opts):
        def update(self):

    class Controller:
        def __init__(self):

Some convenient key combination would then show this bird's eye view instead of the actual code.  Moving the cursor to a class or method and pressing enter would close birds eye view and move the cursor to the corresponding position in the source file.  Does something like this exist?

How do you navigate source code?

**Edit:** Thanks everybody for great suggestions!  I learned a lot.  None of the solutions did exactly what I wanted but HideShow is very close.  Therefore, I extended it by a function called `hs-hide-leafs` which I adapted from `hs-hide-levels`.  Here's the code:

    (defun hs-hide-leafs-recursive (minp maxp)
      ""Hide blocks that do not contain further blocks in region (MINP MAXP).""
      (when (hs-find-block-beginning)
        (setq minp (1+ (point)))
        (funcall hs-forward-sexp-func 1)
        (setq maxp (1- (point))))
      (unless hs-allow-nesting
        (hs-discard-overlays minp maxp))
      (goto-char minp)
      (let ((leaf t))
        (while (progn
                 (forward-comment (buffer-size))
                 (and (&lt; (point) maxp)
                      (re-search-forward hs-block-start-regexp maxp t)))
          (setq pos (match-beginning hs-block-start-mdata-select))
          (if (hs-hide-leafs-recursive minp maxp)
              (save-excursion
                (goto-char pos)
                (hs-hide-block-at-point t)))
          (setq leaf nil))
        (goto-char maxp)
        leaf))

    (defun hs-hide-leafs ()
      ""Hide all blocks that do not contain further blocks.
    The hook `hs-hide-hook' is run; see `run-hooks'.""
      (interactive)
      (hs-life-goes-on
       (save-excursion
         (message ""Hiding blocks ..."")
         (save-excursion
           (goto-char (point-min))
           (hs-hide-leafs-recursive (point-min) (point-max)))
         (message ""Hiding blocks ... done""))
       (run-hooks 'hs-hide-hook)))

Then I bind `hs-hide-leafs` to `&lt;S-left&gt;` and `hs-show-all` to `&lt;S-right&gt;`.  Suggestions for improvements are welcome."	t5_2qhwu	True
1329394309.0	ps7qq	Emacs package that forces one to use modifier keys on side of keyboard opposite from the modified key?	EdwardCoffin	13	1	4	"Are there any packages that will help me to break the habit of hitting modifier keys with the same hand as the modified key?

Ideally I would like one that will let me define which keys I typically hit with the left, which with the right, and will use this information to selectively ignore any chords I type if it thinks I used only one hand where I should have used two."	t5_2qhwu	True
1327041748.0	ook6a	does something like this exist for emacs? microsoft adds achievements to visual studio	liillliillliiii	20	11	12		t5_2qhwu	False
1326940341.0	omkup	Shadchen: a pattern matching library for Emacs Lisp.	commonslip	14	3	2		t5_2qhwu	False
1325856688.0	o5e4q	Need help with ELPA.	Expez	12	4	4	"I just recently made the move to emacs24 and started using ELPA. The problem I'm having is that package.el doesn't seem to have run prior to my .emacs file being loaded. For instance, when I try to run (whole-line-or-region-mode), to enable this mode, I just get 'Symbol's function definition is void....'. 

What am I doing wrong?


"	t5_2qhwu	True
1324231716.0	nhhaa	How do I change the default directory for C-x C-f?	Kirby54925	14	2	18	"I'm currently using Emacs 23.3.1 on Kubuntu 11.10. Everytime I try to do Find File, it seems to always default to ~/Documents/. I want it to default to my home directory. I tried putting (cd ""~/"") and (setq default-directory ""~/"") in my ~/.emacs file, but Emacs doesn't seem to read those lines at all! It's really frustrating.

EDIT: I think I figured out how to fix it from within KDE. Emacs defaults to finding files in the home directory when I open Emacs via the command line, but when I use the KDE launcher, it uses whatever is set in KDE. In KDE, to make sure that all applications look in the home directory first, I go to System Settings -&gt; Account Details -&gt; Paths, and then change the Documents path from /home/&lt;user name&gt;/Documents to just /home/&lt;user name&gt;. Thanks for all the suggestions, though!"	t5_2qhwu	True
1324179631.0	ngzm0	Silly question: how do you deal with unwanted temporary buffers?	dalaio	14	3	8	Buffers occasionally pop up in various modes (e.g. multiple auto-complete options, errors, etc.) Is there an easy way to dump the buffer and return to the previous state of the editor - I inevitably end up mashing esc and killing any split window goodness I may have had working prior to the buffer popping up.	t5_2qhwu	True
1324148235.0	ngjlf	"Turn on enable-recursive-minibuffers, so you don't 
get ""Command attempted to use minibuffer while in 
minibuffer"" error again"	kcin	12	2	0	"If you do then it's also useful to turn on minibuffer-depth-indicate-mode, so you know if you are in a recursive minibuffer.

Besides preventing the mentioned error recursive minibuffers [have other uses too](http://www.masteringemacs.org/articles/2011/10/19/executing-shell-commands-emacs/)."	t5_2qhwu	True
1323557419.0	n7uhm	Is it possible to use emacs as tiling window manager?		15	4	8	"Half the time I am on my computer, I have emacs open. So I was thinking, is it possible to use emacs as ""tiling window manager"" aka use firefox, xterm or some other x application in emacs?"	t5_2qhwu	True
1323187703.0	n2luz	I ported srfi-101, persistent, random-access lists, to Emacs Lisp.  These are roughly analogous to Clojure's persistent vectors.	commonslip	13	4	1		t5_2qhwu	False
1319250011.0	lkmlk	Best way to get started on my first elisp project?	grigorescu	12	4	9	"Firstly - I apologize if this has been asked and answered on here before. I did some basic searching, and didn't find anything all that relevant.

I've been using emacs for ~7 years, but wouldn't consider myself an advanced user. My tinkering has been limited to modifying the default configuration, and creating a couple of very straightforward functions. I have a (much) larger project that I'd like to tackle, and I'm not sure what the best way forward is. What I'd like to do is integrate org-mode, which I've been using recently for my todo lists and time management, with liquidplanner.com, which my workplace has recently started using for group-wide project management. They provide an API, so I think this should be doable. Ideally I'd like to be able to view my current tasks, view/edit the descriptions, and put them on hold or mark them as done.

I was hoping someone could point me in the right direction, in terms of elisp resources, and specifically, how to go about writing my first package. Thanks in advance..."	t5_2qhwu	True
1318603218.0	lc32f	"iedit.el - replace all occurences of a string in the buffer 
at the same time interactively"	kcin	13	3	5		t5_2qhwu	False
1312048966.0	j48wz	A Survey of Syntactic Extension Techniques in the Lisp Family of Languages (Part 1) (pico and Emacs Lisp, meditation on scope, eval, apply, lambda and quotation)	commonslip	14	4	0		t5_2qhwu	False
1311371161.0	ix6h8	What do you guys bind your function/keypad keys to in Emacs?		12	2	34	"For some reason I'm really conservative in how I bind these keys, because I'm afraid of setting in a habit that I will want to undo later on.  I was looking for if someone else has a good consistent scheme that I can adapt.  Not just the function keys, but what do you do with insert, delete, home and end?
**Edit**: Thanks for the responses everyone.  You've given me a lot of options to think about.  I especially like the idea of context-sensitive keys that are analogous to each other, but are specific to the mode you're in."	t5_2qhwu	True
1308114543.0	i023j	Emacs progress indication	gst	18	6	0		t5_2qhwu	False
1303795232.0	gxk1x	Writing macrons in Linux for Latin pronunciation 	gst	15	5	1		t5_2qhwu	False
1302655757.0	gonyf	Nice-looking pdfs with org-mode and xetex (emacs-fu)	ndanger	13	1	5		t5_2qhwu	False
1298761666.0	ftef0	Is it possible to have an expensive lisp function run in the background in Emacs?	paulcam	12	2	11	"I've got everything set up to automatically load my TAGS file when visiting a c/c++ file. I'd love to be able to use *complete-tag*, but on the first invocation, it calls *tags-completion-table* to build the completion table. The problem is that the process takes quite a while to complete, and I usually C-g out of frustration.

Ideally, I'd like to kick off the building of the completion table in the background when I first visit a new tags file, so that by the time I'm ready to use completions, everything's ready to go. Unfortunately, my lisp-foo is weak. Is it even possible to do this?"	t5_2qhwu	True
1297057089.0	fgomk	Emacs in the real world – part 3 	gst	12	2	0		t5_2qhwu	False
1295764384.0	f7evr	Weekend Project: Getting Organized with Emacs Org-Mode 	gst	12	4	0		t5_2qhwu	False
1294837655.0	f0v8i	Marmalade goes great on toast AND helps you distribute elisp!	foogoof	15	5	12		t5_2qhwu	False
1293867445.0	euh5z	Emacs Package manager 	gst	15	4	2		t5_2qhwu	False
1293056711.0	eq44c	"Fixing the mark commands in transient mark mode | 
Mastering Emacs"	mickeyp	13	3	2		t5_2qhwu	False
1291230215.0	eenc5	Emacs as a powerful scientific editor for Windows	iloozion	13	2	11	"Abstract:

* Installing GNU Emacs for MS Windows
* Setting encoding for Windows (cp-1250)
* Configuring Emacs as an advanced LaTeX editor
* Solving the problem with Yap viewer (Inverse DVI Search)
* Running Maxima (imaxima) in Emacs for render Maxima outputs as beautiful math formulas
* Running R-projekt in Emacs to support statistical analysis and numerical computing

[Read more →](http://dl.dropbox.com/u/1010315/blog/emacs_sci_ide.html)

Let me know if you see any grammatical errors or have any suggestions."	t5_2qhwu	True
1288710330.0	e02mj	Emacs Cheatsheets	rberenguel	12	1	1		t5_2qhwu	False
1286751079.0	dpglp	Monadic Parser Combinators in Emacs Lisp (warning: insane.)	commonslip	12	2	0		t5_2qhwu	False
1285682043.0	djzn6	My .emacs, and keeping it in sync with Dropbox	davidbeckingsale	12	3	9		t5_2qhwu	False
1280954454.0	cxfer	EmacsWiki: uses of replace regexp with arbitrary elisp	phob	11	1	6		t5_2qhwu	False
1277673851.0	cjmfz	Newbie: visual marker/vertical edge for 80 chars+	technoviking1984	11	1	8	"Hi emacs-reddit,
I just started out with emacs yesterday, and I'm trying to get my emacs to look and behave a little like I'm used to. I came from Notepad++, in which there is something called vertical edge, basically a tiny line that goes vertically across the screen and marks out where, for example, the line is over 80 chars long. I really like this, it's very simple and unobtrusive, but very useful. This is what it looks like: http://i.imgur.com/JM1nB.png (the thin line and the slightly darker background on the right of the picture)

I was trying to get the same functionality in emacs, and stumbled upon the following thread: http://www.reddit.com/r/emacs/comments/b37xv/emacs_columnmarkerel_guidance/
And tried all the suggestions there and on the wikipage for ColumnMarker (http://www.emacswiki.org/emacs/ColumnMarker). vvb-mode, marginMode and column-marker, didn't really do what I wanted, but the horribly slow proof of concept-code someone wrote on that wiki-page does do it. The only problem is that I don't understand how I'm supposed to configure it, and that it runs really slow.

Could someone perhaps show me how to modify that code to look more like the vertical edge from notepad++, or perhaps show me some other mode, that I've missed that does this better (and hopefully faster)?"	t5_2qhwu	True
1277230735.0	chtwd	Emacs and TRAMP: remote su to root. Please help.	Cenobite	15	5	4	"Hey guys. I'm trying to use [TRAMP](http://www.emacswiki.org/cgi-bin/wiki/TrampMode) to edit a file remotely with SSH.

My only problem is that in my line of work, remote root logins to our clients' servers are not permitted, but root access is needed to edit these files.

Now, TRAMP used to support a ""/multi:"" prefix that would allow you to specify su or sudo on the remote host, but this has been removed from the latest version.

From my research I gather that setting the ""tramp-default-proxies-alist"" variable will allow me to tell TRAMP to ssh to a remote host first when it receives the ""/su:"" command, but for the life of me I can't get it to work.

Can anyone please help?"	t5_2qhwu	True
1277184801.0	chm4u	Fullscreen Emacs on OSX	snowbeard	11	1	3		t5_2qhwu	False
1274533965.0	c702s	Recently Created Emacs Lisp Repositories - GitHub	greenrd	13	3	0		t5_2qhwu	False
1273725470.0	c3f76	emacspeak The Complete Audio Desktop: Emacspeak 32.0 (LuckyDog) Unleashed	gst	13	3	1		t5_2qhwu	False
1273685501.0	c375t	emacs-fu: cleaning up the mode-line	gst	10	1	4		t5_2qhwu	False
1269963828.0	bk8pd	Best emacs mail client for a mutt user?	Zotan	11	2	11	I'm trying to move to emacs based email for better org-mode integration. I currently use mutt and have spent the last few days playing with VM, wanderlust and GNUs. I used to think that configuring mutt was needlessly difficult :-) I just need to the client to read mail, getting and sending are already taken care of. As a detail can any client cope with sub folders of a MailDir without being specifically told about them?	t5_2qhwu	True
1269151687.0	bg3zh	emacs-fu: showing the buffer position in the mode-line	gst	10	1	2		t5_2qhwu	False
1262809168.0	amecr	Auto completion with popup menu [Screencast]	petteri	13	3	4		t5_2qhwu	False
1258404023.0	a5054	Emacs fiddling: show the menu-bar when the mouse is near the top of the frame	petteri	15	5	6		t5_2qhwu	False
1258059138.0	a3rqe	org-mode's built-in table editor - which can be used as a minor mode	greenrd	13	3	5		t5_2qhwu	False
1255966471.0	9vjmo	Bitlbee and Emacs 	gst	14	4	4		t5_2qhwu	False
1255206230.0	9st0d	Does emacs support inline images?	drudru	14	4	13		t5_2qhwu	True
1248797383.0	95c8k	In Emacs 23 type M-: (set-frame-parameter (selected-frame) 'alpha 70) - mind blown	Grue	16	5	14		t5_2qhwu	True
1248030470.0	92mfj	Ibuffer: Dired for Buffers	nflath	13	3	1		t5_2qhwu	False
1243175810.0	8mv4l	A quick-tips Emacs post (tips for your .emacs file)	vedang	17	6	3		t5_2qhwu	False
1241155408.0	8gyiu	The Power That is GNU Emacs	gst	15	6	0		t5_2qhwu	False
1240811291.0	8fpy8	SSH forwarding, GNU Screen, and emacs -nw	gst	12	2	0		t5_2qhwu	False
1240209992.0	8dt94	Concurrent Emacs	gst	15	5	0		t5_2qhwu	False
1236790079.0	83ut9	async-eval 0.1 -- execute Emacs lisp in a separate process	gst	12	2	1		t5_2qhwu	False
1236065307.0	81njs	I Love EMACS! (or at least I did...)	gst	25	15	5		t5_2qhwu	False
1235913709.0	816xo	Publishing an emacs buffer	gst	11	2	0		t5_2qhwu	False
1234118898.0	7vtep	Does Anyone Like Electric Indentation? - A Small Criticism of Yegge’s Javascript Mode	gst	16	4	7		t5_2qhwu	False
1234053172.0	7vp7b	I often find myself opening a shell to the same folder that I am editing files, even when files are remote over ssh. I know I can open a shell within emacs but does not feel organic to me. Just curious if this is common.	f4hy	17	7	15		t5_2qhwu	True
1230113424.0	7lh55	The Emacs Test	gst	14	4	0		t5_2qhwu	False
1224939569.0	79b8n	Ido, a most wonderful buffer switching package for emacs	gst	13	3	0		t5_2qhwu	False
1375733956.0	1jrh0m	screenwriter-mode	kablahblah	12	3	4		t5_2qhwu	False
1375540061.0	1jml0z	Hatching a plan to add namespaces to EmacsLisp	username223	10	1	1		t5_2qhwu	False
1374291584.0	1iod6t	audio-notes-mode - Emacs mode to play audio notes synced from somewhere else.	climatewarrior	11	2	10		t5_2qhwu	False
1374216393.0	1im8l7	JFold: Emacs Just Fold It Extension	jinfeizhang	12	4	8		t5_2qhwu	False
